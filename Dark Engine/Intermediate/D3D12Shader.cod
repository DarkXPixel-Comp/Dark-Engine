; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33030.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskXY
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?g_XMLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLg10
PUBLIC	?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLg10
PUBLIC	?g_UByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UByteMax
PUBLIC	?g_ByteMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMin
PUBLIC	?g_ByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMax
PUBLIC	?g_ShortMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMin
PUBLIC	?g_ShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMax
PUBLIC	?g_UShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UShortMax
PUBLIC	__pobjectentryfirst
PUBLIC	__pobjectentrymid
PUBLIC	__pobjectentrylast
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
msvcjmc	SEGMENT
__B51A3A23_Core@h DB 01H
__4A250794_concurrencysal@h DB 01H
__64794009_sal@h DB 01H
__A3E7195B_vadefs@h DB 01H
__978626E5_vcruntime@h DB 01H
__735B63F8_xkeycheck@h DB 01H
__142C9C9C_yvals_core@h DB 01H
__1B0272D9_corecrt@h DB 01H
__84C50014_vcruntime_new@h DB 01H
__7A6EC116_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__E5B2708F_crtdefs@h DB 01H
__61229A4B_use_ansi@h DB 01H
__8C2D0B1D_yvals@h DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4CF83D73_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__4CB5F942_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__76FF1542_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D673EB20_cwchar DB 01H
__9A2CA802_xtr1common DB 01H
__95B36E16_iosfwd DB 01H
__DBEA773D_stdint@h DB 01H
__87335CDF_cstdint DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__659C5902_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__3A6DBDA2_cstdlib DB 01H
__B9985323_float@h DB 01H
__3FBCF6F4_cfloat DB 01H
__BE829F50_climits DB 01H
__51ADDFC3_intrin0@inl@h DB 01H
__FC9FC984_intrin0@h DB 01H
__595ABB90_limits DB 01H
__9FA6670F_cstddef DB 01H
__3DF2A533_type_traits DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__35BB339F_eh@h DB 01H
__7280C444_vcruntime_exception@h DB 01H
__2DED1E19_exception DB 01H
__A5D71DBC_new DB 01H
__27E192CF_xatomic@h DB 01H
__50E371A7_initializer_list DB 01H
__339AE60A_concepts DB 01H
__C3788713_compare DB 01H
__0D603829_utility DB 01H
__874288EA___msvc_iter_core@hpp DB 01H
__B7320FC0_xutility DB 01H
__A0E057FF_tuple DB 01H
__67F55BEA_xmemory DB 01H
__A0A2F5C0_xpolymorphic_allocator@h DB 01H
__C671E263___msvc_sanitizer_annotate_container@hpp DB 01H
__1326DD76_xstring DB 01H
__1EC467ED_ctype@h DB 01H
__4333DAD4_cctype DB 01H
__91273182_string DB 01H
__F3EA4CCC___msvc_bit_utils@hpp DB 01H
__14F7CB70_vector DB 01H
__FBEF5BAE_Array@h DB 01H
__9024636E_DarkString@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__73193115_excpt@h DB 01H
__EF35C9F2_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__E15BF856_windows@h DB 01H
__C868A340_OCIdl@h DB 01H
__90AD1CBB_dxgicommon@h DB 01H
__DBA3F304_dxgiformat@h DB 01H
__4B98FDD9_d3dcommon@h DB 01H
__30CE95B1_d3d12sdklayers@h DB 01H
__AD50D478_d3d12@h DB 01H
__EBD162FD_dxgitype@h DB 01H
__F473F334_dxgi@h DB 01H
__3532CEB3_dxgi1_2@h DB 01H
__34F0A484_dxgi1_3@h DB 01H
__31BFB201_dxgi1_4@h DB 01H
__307DD836_dxgi1_5@h DB 01H
__323B666F_dxgi1_6@h DB 01H
__4B899F3E_setjmp@h DB 01H
__A40231C8_mmintrin@h DB 01H
__17534AB1_xmmintrin@h DB 01H
__7231C37D_emmintrin@h DB 01H
__AD90ABF4_pmmintrin@h DB 01H
__1D49D876_tmmintrin@h DB 01H
__3472CDF5_smmintrin@h DB 01H
__51104439_nmmintrin@h DB 01H
__84ABBE77_wmmintrin@h DB 01H
__4F3FF370_zmmintrin@h DB 01H
__782B51BA_immintrin@h DB 01H
__C2E8B0FF_ammintrin@h DB 01H
__6DBF2349_intrin@h DB 01H
__19139D6C_assert@h DB 01H
__85ADA900_DirectXMathConvert@inl DB 01H
__411BBCFA_DirectXMathVector@inl DB 01H
__4AFE615D_DirectXMathMatrix@inl DB 01H
__98B66FFE_DirectXMathMisc@inl DB 01H
__E6E853B5_DirectXMath@h DB 01H
__CAFE1B4D_d3d11shader@h DB 01H
__F3732788_d3d12shader@h DB 01H
__2CACEFC0_d3dcompiler@h DB 01H
__F2FF8333_hstring@h DB 01H
__4BAE0D45_inspectable@h DB 01H
__2E21A007_weakreference@h DB 01H
__ADF9C41F_activation@h DB 01H
__847F1726_roapi@h DB 01H
__0AE89165_def@h DB 01H
__087FBF63_internal@h DB 01H
__F7423081_client@h DB 01H
__12FD3F40_WinString@h DB 01H
__6F9C91B0_new@h DB 01H
__247BB969_restrictedErrorInfo@h DB 01H
__05F5D399_roerrorapi@h DB 01H
__73CE9EEE_implements@h DB 01H
__94D81D1E_ftm@h DB 01H
__5611F633_intsafe@h DB 01H
__5DD10A16_corewrappers@h DB 01H
__B8B3BDBE_module@h DB 01H
__D6FCE5BE_eventtoken@h DB 01H
__3D51D5E6_event@h DB 01H
__0691033D_wrl@h DB 01H
__B629FA8A_d3dx12@h DB 01H
__DC39B1D9_D3D12@h DB 01H
__9A8AC546_D3D12Shader@h DB 01H
__0A9237D2_time@h DB 01H
__C070D2B6_ctime DB 01H
__52656974_list DB 01H
__F7972D0B_share@h DB 01H
__E9739B8C___msvc_system_error_abi@hpp DB 01H
__D1D94988_cerrno DB 01H
__A4A32444_stdexcept DB 01H
__57B442CC_xcall_once@h DB 01H
__24B81E12_xerrc@h DB 01H
__4F9CF3B8_xatomic_wait@h DB 01H
__01F6EC81_xtimec@h DB 01H
__006CADF8_xthreads@h DB 01H
__326FE752_atomic DB 01H
__E8E950EC_system_error DB 01H
__93AC6E75_vcruntime_typeinfo@h DB 01H
__C7EDFCD9_typeinfo DB 01H
__E5F4B71E_memory DB 01H
__C9B1E011_xfacet DB 01H
__24FAA3FC___msvc_xlocinfo_types@hpp DB 01H
__791C33B7_locale@h DB 01H
__A9C16173_clocale DB 01H
__D8641F11_xlocinfo DB 01H
__CC18A947_xlocale DB 01H
__E1816802_xiosbase DB 01H
__A6039CF8_streambuf DB 01H
__C0945C43___msvc_filebuf@hpp DB 01H
__06C34EBE_cmath DB 01H
__A69EB880_iterator DB 01H
__529FCF50_xlocnum DB 01H
__5D1A27AA_ios DB 01H
__DF087383_ostream DB 01H
__BCD846B9_istream DB 01H
__4A903650_fstream DB 01H
__6A70D710_ratio DB 01H
__E71D1BFE___msvc_chrono@hpp DB 01H
__F491F32A_vcruntime_startup@h DB 01H
__005E73E1_corecrt_startup@h DB 01H
__8B12B2C4_process@h DB 01H
__57ED3434_stop_token DB 01H
__3EB9CFA8_thread DB 01H
__78DDDD40_mutex DB 01H
__92B9F28F_CommandLine@h DB 01H
__CE362511_Logger@hpp DB 01H
__FABEF7B5_CoreDefines@h DB 01H
__3E42A31D_D3D12Shader@cpp DB 01H
msvcjmc	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __pobjectentrylast
minATL$__z	SEGMENT
__pobjectentrylast DQ 0000000000000000H
minATL$__z	ENDS
;	COMDAT __pobjectentrymid
minATL$__m	SEGMENT
__pobjectentrymid DQ 0000000000000000H
minATL$__m	ENDS
;	COMDAT __pobjectentryfirst
minATL$__a	SEGMENT
__pobjectentryfirst DQ 0000000000000000H
minATL$__a	ENDS
;	COMDAT ?g_UShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UShortMax@DirectX@@3UXMVECTORF32@1@B DD 0477fff00r ; 65535 ; DirectX::g_UShortMax
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
CONST	ENDS
;	COMDAT ?g_ShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMax@DirectX@@3UXMVECTORF32@1@B DD 046fffe00r ; 32767 ; DirectX::g_ShortMax
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
CONST	ENDS
;	COMDAT ?g_ShortMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMin@DirectX@@3UXMVECTORF32@1@B DD 0c6fffe00r ; -32767 ; DirectX::g_ShortMin
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
CONST	ENDS
;	COMDAT ?g_ByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMax@DirectX@@3UXMVECTORF32@1@B DD 042fe0000r ; 127 ; DirectX::g_ByteMax
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
CONST	ENDS
;	COMDAT ?g_ByteMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMin@DirectX@@3UXMVECTORF32@1@B DD 0c2fe0000r ; -127 ; DirectX::g_ByteMin
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
CONST	ENDS
;	COMDAT ?g_UByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UByteMax@DirectX@@3UXMVECTORF32@1@B DD 0437f0000r ; 255 ; DirectX::g_UByteMax
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
CONST	ENDS
;	COMDAT ?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B DD 03e9a209br ; 0.30103 ; DirectX::g_XMInvLg10
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
CONST	ENDS
;	COMDAT ?g_XMLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLg10@DirectX@@3UXMVECTORF32@1@B DD 040549a78r ; 3.32193 ; DirectX::g_XMLg10
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976562
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskXY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z	; std::_Char_traits<wchar_t,unsigned short>::assign
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z	; std::_Char_traits<char,int>::assign
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3D12Shader::D3D12Shader
PUBLIC	??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z ; D3D12Shader::D3D12Shader
PUBLIC	?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3D12Shader::CompileShader
PUBLIC	?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z ; D3D12Shader::LoadShader
PUBLIC	?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalAddRef
PUBLIC	?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
PUBLIC	??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
PUBLIC	??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator=
PUBLIC	?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::Swap
PUBLIC	??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator int Microsoft::WRL::Details::BoolStruct::*
PUBLIC	?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get
PUBLIC	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
PUBLIC	??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
PUBLIC	??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob><ID3D10Blob>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z		; std::_Refancy<char *,0>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Convert_size@_K_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64,unsigned __int64>
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
PUBLIC	??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>
PUBLIC	??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z	; std::_Destroy_in_place<wchar_t *>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z	; std::construct_at<char,char const &,0>
PUBLIC	??$addressof@_W@std@@YAPEA_WAEA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ; std::construct_at<wchar_t,wchar_t const &,0>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
PUBLIC	??$distance@PEAD@std@@YA_JPEAD0@Z		; std::distance<char *>
PUBLIC	??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
PUBLIC	??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z		; std::_Unfancy<char const >
PUBLIC	??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z	; std::construct_at<wchar_t,0>
PUBLIC	??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >
PUBLIC	??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z	; std::construct_at<char,0>
PUBLIC	??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ; std::construct_at<wchar_t *,wchar_t * const &,0>
PUBLIC	??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Get_size_of_n@$01@std@@YA_K_K@Z		; std::_Get_size_of_n<2>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_06LMJGIEEJ@vs_5_1@			; `string'
PUBLIC	??_C@_04GHJNJNPO@main@				; `string'
PUBLIC	??_C@_06NPEGLBHD@ps_5_1@			; `string'
PUBLIC	??_C@_0M@IBIMMHEO@LOAD?5SHADER@			; `string'
PUBLIC	??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	D3DCompileFromFile:PROC
EXTRN	?log@Logger@@SAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4LOGGER_ENUM@@@Z:PROC ; Logger::log
EXTRN	_CxxThrowException:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	memcmp:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_constant_evaluated@std@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?is_constant_evaluated@std@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+433
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+257
	DD	imagerel $unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+87
	DD	imagerel $unwind$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+148
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN16
	DD	imagerel $LN16+305
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN13
	DD	imagerel $LN13+189
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+93
	DD	imagerel $unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+149
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+150
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+160
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+205
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@_W@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD imagerel $LN13
	DD	imagerel $LN13+195
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+90
	DD	imagerel $unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+103
	DD	imagerel $unwind$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+207
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN9
	DD	imagerel $LN9+244
	DD	imagerel $unwind$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+32
	DD	imagerel $unwind$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+32
	DD	imagerel $unwind$?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DD imagerel $LN6
	DD	imagerel $LN6+120
	DD	imagerel $unwind$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA+29
	DD	imagerel $unwind$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA+29
	DD	imagerel $unwind$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN31
	DD	imagerel $LN31+1264
	DD	imagerel $unwind$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DD imagerel $LN4
	DD	imagerel $LN4+127
	DD	imagerel $unwind$?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+328
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DD imagerel $LN8
	DD	imagerel $LN8+292
	DD	imagerel $unwind$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+193
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+528
	DD	imagerel $unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+471
	DD	imagerel $unwind$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+377
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+98
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEAD@std@@YA_JPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$distance@PEAD@std@@YA_JPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DD imagerel $LN11
	DD	imagerel $LN11+545
	DD	imagerel $unwind$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+86
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+266
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@ DB 'string iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@ DB 'string itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xstring', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBIMMHEO@LOAD?5SHADER@
CONST	SEGMENT
??_C@_0M@IBIMMHEO@LOAD?5SHADER@ DB 'LOAD SHADER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NPEGLBHD@ps_5_1@
CONST	SEGMENT
??_C@_06NPEGLBHD@ps_5_1@ DB 'ps_5_1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHJNJNPO@main@
CONST	SEGMENT
??_C@_04GHJNJNPO@main@ DB 'main', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMJGIEEJ@vs_5_1@
CONST	SEGMENT
??_C@_06LMJGIEEJ@vs_5_1@ DB 'vs_5_1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fi'
	DB	'les\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.'
	DB	'33030\include\xmemory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 09aH ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035041201H
	DD	010d3312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 06H
	DB	00H
	DB	00H
	DB	0deH
	DB	02H
	DB	081H, 06H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
	DD	imagerel $ip2state$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DD 025042111H
	DD	011c2321H
	DD	05015001aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEAD@std@@YA_JPEAD0@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD 025042101H
	DD	011c2321H
	DD	050150012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	098H
	DB	00H
	DB	01cH
	DB	02H
	DB	09dH, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
	DD	imagerel $ip2state$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 025041c11H
	DD	0117231cH
	DD	050100016H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0e6H
	DB	00H
	DB	01cH
	DB	02H
	DB	0e5H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
	DD	imagerel $ip2state$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 025041c11H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'B'
	DB	04H
	DB	'X'
	DB	06H
	DB	0c5H, 02H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
	DD	imagerel $ip2state$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DD 025042111H
	DD	011c2321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ DB 060H
	DD	imagerel $ip2state$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ DD 025030f19H
	DD	0b20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB ' '
	DB	00H
	DB	00H
	DB	'6'
	DB	02H
	DB	','
	DB	04H
	DB	'b'
	DB	02H
	DB	04H
	DB	04H
	DB	'q', 0dH
	DB	02H
	DB	014H
	DB	00H
	DB	'0'
	DB	04H
	DB	086H
	DB	06H
	DB	0b8H
	DB	04H
	DB	014H
	DB	02H
	DB	014H
	DB	00H
	DB	'*'
	DB	04H
	DB	0eH
	DB	02H
	DB	014H
	DB	00H
	DB	':'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 055041b11H
	DD	0116531bH
	DD	0500f004eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'"'
	DB	04H
	DB	'"'
	DB	06H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
	DD	imagerel $ip2state$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z DD 025031811H
	DD	0b2132318H
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0cH
	DB	00H
	DB	00H
	DB	'6'
	DB	02H
	DB	'8'
	DB	04H
	DB	'('
	DB	06H
	DB	'('
	DB	08H
	DB	0f2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 025041b11H
	DD	0116231bH
	DD	0500f0014H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD 025031319H
	DD	0b20e2313H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 025031219H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025041001H
	DD	0c20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@_W@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025031219H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 025031411H
	DD	0d20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0baH
	DB	02H
	DB	'\'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 025031711H
	DD	0f2122317H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025041001H
	DD	0c20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035041701H
	DD	01123317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025030e01H
	DD	0f209230eH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025041501H
	DD	0c2102315H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025041a01H
	DD	0c215231aH
	DD	050107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_constant_evaluated@std@@YA_NXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 96
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 00	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 0

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 69   :         if (_Count > _Max_possible) {
; 70   :             _Throw_bad_array_new_length(); // multiply overflow
; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  0001f	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]

; 75   : }

  00023	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$01@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$01@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<2>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  00046	48 d1 e0	 shl	 rax, 1
$LN3@Get_size_o:

; 75   : }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??$_Get_size_of_n@$01@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 0
_Ptr_container$ = 8
_Ptr$ = 16
_Bytes$ = 112
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 136  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 137  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 138  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00022	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00026	48 89 45 00	 mov	 QWORD PTR _Block_size$[rbp], rax

; 139  :     if (_Block_size <= _Bytes) {

  0002a	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  0002e	48 39 45 00	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00032	77 05		 ja	 SHORT $LN8@Allocate_m

; 140  :         _Throw_bad_array_new_length(); // add overflow

  00034	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 141  :     }
; 142  : 
; 143  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00039	48 8b 4d 00	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00042	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 144  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00046	48 83 7d 08 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  0004b	74 02		 je	 SHORT $LN9@Allocate_m
  0004d	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN12@Allocate_m
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 90 00 00
	00		 mov	 r9d, 144		; 00000090H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 86		 jne	 SHORT $LN4@Allocate_m

; 145  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000c4	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000c8	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000cc	48 89 45 10	 mov	 QWORD PTR _Ptr$[rbp], rax

; 146  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d0	b8 08 00 00 00	 mov	 eax, 8
  000d5	48 6b c0 ff	 imul	 rax, rax, -1
  000d9	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000dd	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000e1	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 147  : 
; 148  : #ifdef _DEBUG
; 149  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000e5	b8 08 00 00 00	 mov	 eax, 8
  000ea	48 6b c0 fe	 imul	 rax, rax, -2
  000ee	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000f2	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  000fc	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 150  : #endif // _DEBUG
; 151  :     return _Ptr;

  00100	48 8b 45 10	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 152  : }

  00104	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z PROC ; std::construct_at<char *,char * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ENDP ; std::construct_at<char *,char * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z PROC ; std::construct_at<wchar_t *,wchar_t * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ENDP ; std::construct_at<wchar_t *,wchar_t * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 705  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 706  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 707  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 708  :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@deallocate

; 709  :             _Al.deallocate(_Ptr, _Count);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Count$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0003d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 710  :         } else

  00042	eb 11		 jmp	 SHORT $LN3@deallocate
$LN2@deallocate:

; 711  : #endif // _HAS_CXX20
; 712  :         {
; 713  :             (void) _Al;
; 714  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00044	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00050	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN3@deallocate:

; 715  :         }
; 716  :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 52   :     _CONSTEXPR20 ~_Tidy_deallocate_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 53   :         if (_Target) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 0c		 je	 SHORT $LN2@Tidy_deall

; 54   :             _Target->_Tidy_deallocate();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
$LN2@Tidy_deall:

; 55   :         }
; 56   :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
_Location$ = 112
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z PROC		; std::construct_at<char,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 c7 45 40 01
	00 00 00	 mov	 QWORD PTR $T1[rbp], 1
  00024	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00028	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00031	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00035	48 8b 7d 48	 mov	 rdi, QWORD PTR $T2[rbp]
  00039	33 c0		 xor	 eax, eax
  0003b	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003f	f3 aa		 rep stosb
  00041	48 8b 45 48	 mov	 rax, QWORD PTR $T2[rbp]

; 243  : }

  00045	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ENDP		; std::construct_at<char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
_TEXT	SEGMENT
tv70 = 64
_Left$ = 96
_Left_size$ = 104
_Right$ = 112
_Right_size$ = 120
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z PROC ; std::_Traits_equal<std::char_traits<char> >, COMDAT

; 545  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 546  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 547  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0002a	48 8b 45 78	 mov	 rax, QWORD PTR _Right_size$[rbp]
  0002e	48 39 45 68	 cmp	 QWORD PTR _Left_size$[rbp], rax
  00032	75 1e		 jne	 SHORT $LN3@Traits_equ
  00034	4c 8b 45 68	 mov	 r8, QWORD PTR _Left_size$[rbp]
  00038	48 8b 55 70	 mov	 rdx, QWORD PTR _Right$[rbp]
  0003c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Left$[rbp]
  00040	e8 00 00 00 00	 call	 ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
  00045	85 c0		 test	 eax, eax
  00047	75 09		 jne	 SHORT $LN3@Traits_equ
  00049	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv70[rbp], 1
  00050	eb 07		 jmp	 SHORT $LN4@Traits_equ
$LN3@Traits_equ:
  00052	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv70[rbp], 0
$LN4@Traits_equ:
  00059	0f b6 45 40	 movzx	 eax, BYTE PTR tv70[rbp]

; 548  : }

  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ENDP ; std::_Traits_equal<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
_Location$ = 112
??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z PROC	; std::construct_at<wchar_t,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 c7 45 40 02
	00 00 00	 mov	 QWORD PTR $T1[rbp], 2
  00024	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00028	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00031	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00035	48 8b 7d 48	 mov	 rdi, QWORD PTR $T2[rbp]
  00039	33 c0		 xor	 eax, eax
  0003b	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003f	f3 aa		 rep stosb
  00041	48 8b 45 48	 mov	 rax, QWORD PTR $T2[rbp]

; 243  : }

  00045	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z ENDP	; std::construct_at<wchar_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z PROC		; std::_Unfancy<char const >, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z ENDP		; std::_Unfancy<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	75 15		 jne	 SHORT $LN2@Allocate

; 235  : #endif // _HAS_CXX20
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00027	48 81 7d 50 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0002f	72 0b		 jb	 SHORT $LN3@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00035	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0003a	eb 14		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003c	48 83 7d 50 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00041	74 0b		 je	 SHORT $LN4@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

  00043	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  0004c	eb 02		 jmp	 SHORT $LN1@Allocate
$LN4@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004e	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 248  : }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 75   : }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<char> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ; std::construct_at<wchar_t *,wchar_t * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1483 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1484 :         if (_Ptr) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 14		 je	 SHORT $LN2@Container_

; 1485 :             _Delete_plain_internal(_Al, _Ptr);

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00030	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00034	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1486 :         }
; 1487 :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 96
_Al_$ = 104
_Mycont$ = 112
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1469 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
  0002e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00036	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1470 :         // create a new _Container_proxy pointing at _Mycont
; 1471 :         _Ptr = _Unfancy(_Al_.allocate(1));

  0003a	ba 01 00 00 00	 mov	 edx, 1
  0003f	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00043	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00050	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00054	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1472 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00057	48 8b 4d 70	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00060	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00064	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0006f	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1473 :         _Mycont._Myproxy = _Ptr;

  00074	48 8b 45 70	 mov	 rax, QWORD PTR _Mycont$[rbp]
  00078	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0007c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1474 :     }

  00082	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00086	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1123 : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1124 :     // deallocate a plain pointer using an allocator
; 1125 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1126 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1127 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00033	90		 npad	 1

; 1128 :     } else {
; 1129 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1130 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1131 :     }
; 1132 : }

  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S14$ = 24
_Proxy$ = 32
_New_capacity$1 = 48
_New_ptr$2 = 56
_Guard$ = 64
_Ptr$3 = 72
_Ptr$ = 80
$T4 = 152
$T5 = 154
tv138 = 160
tv136 = 168
this$ = 192
_First$ = 200
_Last$ = 208
_Count$ = 216
??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>, COMDAT

; 2675 :     _CONSTEXPR20 void _Construct_from_iter(_Iter _First, const _Sent _Last, _Size _Count = {}) {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2676 :         // Pre: _First models input_iterator or meets the Cpp17InputIterator requirements
; 2677 :         // Pre: [_First, _Last) is a valid range
; 2678 :         // Pre: if is_same_v<_Size, size_type>, _Count is the length of [_First, _Last).
; 2679 :         // Pre: *this is in SSO mode; the lifetime of the SSO elements has already begun
; 2680 : 
; 2681 :         auto& _My_data  = _Mypair._Myval2;

  0002d	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2682 :         auto& _Al       = _Getal();

  00038	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00044	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2683 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  00048	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  0004c	48 8d 4d 18	 lea	 rcx, QWORD PTR $S14$[rbp]
  00050	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00055	48 8d 45 18	 lea	 rax, QWORD PTR $S14$[rbp]
  00059	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2684 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005d	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00061	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00065	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00069	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0006e	90		 npad	 1

; 2685 : 
; 2686 :         _My_data._Mysize = 0;

  0006f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00073	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2687 :         _My_data._Myres  = _BUF_SIZE - 1;

  0007b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0007f	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 2688 : 
; 2689 :         if constexpr (is_same_v<_Size, size_type>) {
; 2690 :             if (_Count > max_size()) {

  00087	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008e	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00093	48 39 85 d8 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  0009a	76 05		 jbe	 SHORT $LN5@Construct_

; 2691 :                 _Xlen_string(); // result too long

  0009c	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN5@Construct_:

; 2692 :             }
; 2693 : 
; 2694 :             if (_Count >= _BUF_SIZE) {

  000a1	48 83 bd d8 00
	00 00 08	 cmp	 QWORD PTR _Count$[rbp], 8
  000a9	0f 82 8f 00 00
	00		 jb	 $LN6@Construct_

; 2695 :                 size_type _New_capacity = _Calculate_growth(_Count);

  000af	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  000b6	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bd	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
  000c2	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2696 :                 ++_New_capacity;

  000c6	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  000ca	48 ff c0	 inc	 rax
  000cd	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2697 :                 const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  000d1	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$1[rbp]
  000d5	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  000d9	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
  000de	48 89 45 38	 mov	 QWORD PTR _New_ptr$2[rbp], rax

; 2698 :                 --_New_capacity;

  000e2	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  000e6	48 ff c8	 dec	 rax
  000e9	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2699 :                 _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000ed	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000f1	48 83 c0 08	 add	 rax, 8
  000f5	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$2[rbp]
  000f9	48 8b c8	 mov	 rcx, rax
  000fc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>

; 2700 :                 _My_data._Myres = _New_capacity;

  00101	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00105	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$1[rbp]
  00109	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2701 : 
; 2702 :                 _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  0010d	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  00111	48 ff c0	 inc	 rax
  00114	48 89 85 a0 00
	00 00		 mov	 QWORD PTR tv138[rbp], rax
  0011b	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$2[rbp]
  0011f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00124	48 89 85 a8 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  0012b	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR tv138[rbp]
  00132	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR tv136[rbp]
  00139	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
$LN6@Construct_:

; 2703 :             }
; 2704 :         }
; 2705 : 
; 2706 :         _Tidy_deallocate_guard<basic_string> _Guard{this};

  0013e	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00145	48 89 45 40	 mov	 QWORD PTR _Guard$[rbp], rax

; 2707 :         for (; _First != _Last; ++_First) {

  00149	eb 11		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:
  0014b	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00152	48 ff c0	 inc	 rax
  00155	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _First$[rbp], rax
$LN4@Construct_:
  0015c	48 8b 85 d0 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00163	48 39 85 c8 00
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  0016a	74 53		 je	 SHORT $LN3@Construct_

; 2708 :             if constexpr (!is_same_v<_Size, size_type>) {
; 2709 :                 if (_My_data._Mysize == _My_data._Myres) { // Need to grow
; 2710 :                     if (_My_data._Mysize == max_size()) {
; 2711 :                         _Xlen_string(); // result too long
; 2712 :                     }
; 2713 : 
; 2714 :                     const auto _Old_ptr     = _My_data._Myptr();
; 2715 :                     size_type _New_capacity = _Calculate_growth(_My_data._Mysize);
; 2716 :                     ++_New_capacity;
; 2717 :                     const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws
; 2718 :                     --_New_capacity;
; 2719 : 
; 2720 :                     _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2721 :                     _Traits::copy(_Unfancy(_New_ptr), _Old_ptr, _My_data._Mysize);
; 2722 :                     if (_My_data._Myres >= _BUF_SIZE) { // Need to deallocate old storage
; 2723 :                         _Al.deallocate(_My_data._Bx._Ptr, _My_data._Myres + 1);
; 2724 :                         _My_data._Bx._Ptr = _New_ptr;
; 2725 :                     } else {
; 2726 :                         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 2727 :                     }
; 2728 :                     _My_data._Myres = _New_capacity;
; 2729 :                 }
; 2730 :             }
; 2731 : 
; 2732 :             _Elem* const _Ptr = _My_data._Myptr();

  0016c	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00170	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00175	48 89 45 48	 mov	 QWORD PTR _Ptr$3[rbp], rax

; 2733 :             _Traits::assign(_Ptr[_My_data._Mysize], *_First);

  00179	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00180	66 0f be 00	 movsx	 ax, BYTE PTR [rax]
  00184	66 89 85 98 00
	00 00		 mov	 WORD PTR $T4[rbp], ax
  0018b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0018f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00193	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$3[rbp]
  00197	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  0019b	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  001a2	48 8b c8	 mov	 rcx, rax
  001a5	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2734 :             ++_My_data._Mysize;

  001aa	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001ae	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001b2	48 ff c0	 inc	 rax
  001b5	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  001b9	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2735 :         }

  001bd	eb 8c		 jmp	 SHORT $LN2@Construct_
$LN3@Construct_:

; 2736 : 
; 2737 :         _Elem* const _Ptr = _My_data._Myptr();

  001bf	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  001c3	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  001c8	48 89 45 50	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2738 :         _Traits::assign(_Ptr[_My_data._Mysize], _Elem());

  001cc	33 c0		 xor	 eax, eax
  001ce	66 89 85 9a 00
	00 00		 mov	 WORD PTR $T5[rbp], ax
  001d5	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001d9	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001dd	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  001e1	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  001e5	48 8d 95 9a 00
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2739 :         _ASAN_STRING_CREATE(*this);
; 2740 :         _Guard._Target = nullptr;

  001f4	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR _Guard$[rbp], 0

; 2741 :         _Proxy._Release();

  001fc	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00200	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2742 :     }

  00205	48 8d 4d 40	 lea	 rcx, QWORD PTR _Guard$[rbp]
  00209	e8 00 00 00 00	 call	 ??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0020e	90		 npad	 1
  0020f	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00213	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00218	48 8d a5 b0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+176]
  0021f	5d		 pop	 rbp
  00220	c3		 ret	 0
$LN10@Construct_:
??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S14$ = 24
_Proxy$ = 32
_New_capacity$1 = 48
_New_ptr$2 = 56
_Guard$ = 64
_Ptr$3 = 72
_Ptr$ = 80
$T4 = 152
$T5 = 154
tv138 = 160
tv136 = 168
this$ = 192
_First$ = 200
_Last$ = 208
_Count$ = 216
?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$distance@PEAD@std@@YA_JPEAD0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$distance@PEAD@std@@YA_JPEAD0@Z PROC			; std::distance<char *>, COMDAT

; 1436 : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1437 :     if constexpr (_Is_ranges_random_iter_v<_InIt>) {
; 1438 :         return _Last - _First; // assume the iterator will do debug checking

  00020	48 8b 45 50	 mov	 rax, QWORD PTR _First$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Last$[rbp]
  00028	48 2b c8	 sub	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx

; 1439 :     } else {
; 1440 :         _Adl_verify_range(_First, _Last);
; 1441 :         auto _UFirst             = _Get_unwrapped(_First);
; 1442 :         const auto _ULast        = _Get_unwrapped(_Last);
; 1443 :         _Iter_diff_t<_InIt> _Off = 0;
; 1444 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1445 :             ++_Off;
; 1446 :         }
; 1447 : 
; 1448 :         return _Off;
; 1449 :     }
; 1450 : }

  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$distance@PEAD@std@@YA_JPEAD0@Z ENDP			; std::distance<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;
; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _It$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped

; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT

; 1148 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1149 :     // check that [_First, _Last) forms an iterator range
; 1150 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1151 :         _Verify_range(_First, _Last);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Last$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _First$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::_Verify_range

; 1152 :     }
; 1153 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 10 00 00 00	 mov	 ecx, 16
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00036	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 243  : }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z PROC ; std::construct_at<wchar_t,wchar_t const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 02 00 00 00	 mov	 ecx, 2
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0003d	66 89 08	 mov	 WORD PTR [rax], cx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ENDP ; std::construct_at<wchar_t,wchar_t const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@_W@std@@YAPEA_WAEA_W@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@_W@std@@YAPEA_WAEA_W@Z PROC		; std::addressof<wchar_t>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@_W@std@@YAPEA_WAEA_W@Z ENDP		; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z PROC	; std::construct_at<char,char const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 01 00 00 00	 mov	 ecx, 1
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0003d	88 08		 mov	 BYTE PTR [rax], cl
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ENDP	; std::construct_at<char,char const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 80
_Bytes$ = 88
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0b		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00030	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete

; 256  :     } else

  00035	eb 25		 jmp	 SHORT $LN3@Deallocate
$LN2@Deallocate:

; 257  : #endif // _HAS_CXX20
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00037	48 81 7d 58 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0003f	72 0d		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00041	48 8d 55 58	 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00045	48 8d 4d 50	 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0004e	48 8b 55 58	 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00052	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00056	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0005b	90		 npad	 1
$LN3@Deallocate:

; 265  :     }
; 266  : }

  0005c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 75   :     (max) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 76   :     // return larger of _Left and _Right
; 77   :     return _Left < _Right ? _Right : _Left;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  00024	48 8b 4d 68	 mov	 rcx, QWORD PTR _Right$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@max
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@max
$LN3@max:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@max:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 78   : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 0
_New_capacity$ = 8
_Al$ = 16
_New_ptr$ = 24
tv88 = 96
tv86 = 104
this$ = 128
_New_size$ = 136
_Fn$ = 144
<_Args_0>$ = 152
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>, COMDAT

; 4744 :     _CONSTEXPR20 basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4745 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4746 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4747 :         if (_New_size > max_size()) {

  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00039	48 39 85 88 00
	00 00		 cmp	 QWORD PTR _New_size$[rbp], rax
  00040	76 05		 jbe	 SHORT $LN2@Reallocate

; 4748 :             _Xlen_string(); // result too long

  00042	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Reallocate:

; 4749 :         }
; 4750 : 
; 4751 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00047	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00052	48 89 45 00	 mov	 QWORD PTR _Old_capacity$[rbp], rax

; 4752 :         size_type _New_capacity       = _Calculate_growth(_New_size);

  00056	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _New_size$[rbp]
  0005d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00064	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00069	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4753 :         auto& _Al                     = _Getal();

  0006d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00079	48 89 45 10	 mov	 QWORD PTR _Al$[rbp], rax

; 4754 :         ++_New_capacity;

  0007d	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00081	48 ff c0	 inc	 rax
  00084	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4755 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  00088	48 8d 55 08	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  0008c	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$[rbp]
  00090	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  00095	48 89 45 18	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 4756 :         --_New_capacity;

  00099	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0009d	48 ff c8	 dec	 rax
  000a0	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4757 : 
; 4758 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  000a4	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000a8	48 ff c0	 inc	 rax
  000ab	48 89 45 60	 mov	 QWORD PTR tv88[rbp], rax
  000af	48 8b 4d 18	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000b3	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000b8	48 89 45 68	 mov	 QWORD PTR tv86[rbp], rax
  000bc	48 8b 55 60	 mov	 rdx, QWORD PTR tv88[rbp]
  000c0	48 8b 4d 68	 mov	 rcx, QWORD PTR tv86[rbp]
  000c4	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 4759 :         _Mypair._Myval2._Orphan_all();

  000c9	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4760 :         _ASAN_STRING_REMOVE(*this);
; 4761 :         _Mypair._Myval2._Mysize = _New_size;

  000d8	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000df	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _New_size$[rbp]
  000e6	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4762 :         _Mypair._Myval2._Myres  = _New_capacity;

  000ea	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f1	48 8b 4d 08	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4763 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000f9	48 8b 4d 18	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000fd	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00102	4c 8b 8d 98 00
	00 00		 mov	 r9, QWORD PTR <_Args_0>$[rbp]
  00109	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR _New_size$[rbp]
  00110	48 8b d0	 mov	 rdx, rax
  00113	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  0011a	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()

; 4764 :         if (_BUF_SIZE <= _Old_capacity) {

  0011f	48 83 7d 00 10	 cmp	 QWORD PTR _Old_capacity$[rbp], 16
  00124	72 2f		 jb	 SHORT $LN3@Reallocate

; 4765 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00126	48 8b 45 00	 mov	 rax, QWORD PTR _Old_capacity$[rbp]
  0012a	48 ff c0	 inc	 rax
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00137	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0013b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4766 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00144	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014b	48 8b 4d 18	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0014f	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4767 :         } else {

  00153	eb 17		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4768 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00155	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015c	48 83 c0 08	 add	 rax, 8
  00160	48 8d 55 18	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4769 :         }
; 4770 : 
; 4771 :         _ASAN_STRING_CREATE(*this);
; 4772 :         return *this;

  0016c	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4773 :     }

  00173	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00177	5d		 pop	 rbp
  00178	c3		 ret	 0
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 96
_New_ptr$ = 104
_Count$ = 112
_Ptr$ = 120
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator(), COMDAT

; 3399 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3400 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002a	4c 8b 45 70	 mov	 r8, QWORD PTR _Count$[rbp]
  0002e	48 8b 55 78	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00032	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00036	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3401 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0003b	c6 45 40 00	 mov	 BYTE PTR $T1[rbp], 0
  0003f	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  00043	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00047	48 03 c8	 add	 rcx, rax
  0004a	48 8b c1	 mov	 rax, rcx
  0004d	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3402 :             },

  00059	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 80
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 303  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :     if constexpr (is_array_v<_Ty>) {
; 305  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 306  :     } else {
; 307  :         _Obj.~_Ty();
; 308  :     }
; 309  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
_TEXT	SEGMENT
_Obj$ = 80
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z PROC	; std::_Destroy_in_place<wchar_t *>, COMDAT

; 303  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :     if constexpr (is_array_v<_Ty>) {
; 305  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 306  :     } else {
; 307  :         _Obj.~_Ty();
; 308  :     }
; 309  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ENDP	; std::_Destroy_in_place<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S13$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
tv152 = 128
tv148 = 128
tv146 = 136
this$ = 160
_Arg$ = 168
_Count$ = 176
??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>, COMDAT

; 2609 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2610 :         auto& _My_data = _Mypair._Myval2;

  00028	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2611 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2612 : 
; 2613 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2614 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2615 :         } else {
; 2616 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2617 :         }
; 2618 : 
; 2619 :         if (_Count > max_size()) {

  00033	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0003f	48 39 85 b0 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00046	76 05		 jbe	 SHORT $LN2@Construct

; 2620 :             _Xlen_string(); // result too long

  00048	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Construct:

; 2621 :         }
; 2622 : 
; 2623 :         auto& _Al       = _Getal();

  0004d	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2624 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0005d	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  00061	48 8d 4d 18	 lea	 rcx, QWORD PTR $S13$[rbp]
  00065	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006a	48 8d 45 18	 lea	 rax, QWORD PTR $S13$[rbp]
  0006e	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2625 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  00072	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00076	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0007a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00083	90		 npad	 1

; 2626 : 
; 2627 :         if (_Count < _BUF_SIZE) {

  00084	48 83 bd b0 00
	00 00 10	 cmp	 QWORD PTR _Count$[rbp], 16
  0008c	73 50		 jae	 SHORT $LN3@Construct

; 2628 :             _My_data._Mysize = _Count;

  0008e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00092	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00099	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2629 :             _My_data._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a1	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2630 : 
; 2631 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2632 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2633 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2634 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2635 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);
; 2636 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2637 :             } else { // _Strat == _Construct_strategy::_From_string
; 2638 : #ifdef _INSERT_STRING_ANNOTATION
; 2639 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2640 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2641 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);

  000a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	41 b8 10 00 00
	00		 mov	 r8d, 16
  000b7	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2642 : #endif // !_INSERT_STRING_ANNOTATION
; 2643 :             }
; 2644 : 
; 2645 :             _Proxy._Release();

  000c6	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000ca	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000cf	90		 npad	 1

; 2646 :             return;

  000d0	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000d4	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d9	e9 f0 00 00 00	 jmp	 $LN4@Construct
$LN3@Construct:

; 2647 :         }
; 2648 : 
; 2649 :         _My_data._Myres         = _BUF_SIZE - 1;

  000de	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000e2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2650 :         size_type _New_capacity = _Calculate_growth(_Count);

  000ea	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  000f1	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f8	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000fd	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2651 :         ++_New_capacity;

  00101	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00105	48 ff c0	 inc	 rax
  00108	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2652 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  0010c	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00110	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  00114	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  00119	48 89 45 38	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 2653 :         --_New_capacity;

  0011d	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00121	48 ff c8	 dec	 rax
  00124	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2654 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00128	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0012c	48 83 c0 08	 add	 rax, 8
  00130	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  00134	48 8b c8	 mov	 rcx, rax
  00137	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2655 : 
; 2656 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  0013c	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00140	48 ff c0	 inc	 rax
  00143	48 89 85 80 00
	00 00		 mov	 QWORD PTR tv148[rbp], rax
  0014a	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0014e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00153	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv146[rbp], rax
  0015a	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR tv148[rbp]
  00161	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR tv146[rbp]
  00168	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 2657 : 
; 2658 :         _My_data._Mysize = _Count;

  0016d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00171	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00178	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2659 :         _My_data._Myres  = _New_capacity;

  0017c	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00180	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  00184	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2660 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2661 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2662 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2663 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2664 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2665 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2666 :         } else { // _Strat == _Construct_strategy::_From_string
; 2667 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

  00188	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0018f	48 ff c0	 inc	 rax
  00192	48 89 85 80 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00199	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0019d	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001a2	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  001a9	4c 8b c1	 mov	 r8, rcx
  001ac	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  001b3	48 8b c8	 mov	 rcx, rax
  001b6	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2668 :         }
; 2669 : 
; 2670 :         _ASAN_STRING_CREATE(*this);
; 2671 :         _Proxy._Release();

  001bb	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  001bf	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  001c4	90		 npad	 1

; 2672 :     }

  001c5	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  001c9	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN4@Construct:
  001ce	48 8d a5 90 00
	00 00		 lea	 rsp, QWORD PTR [rbp+144]
  001d5	5d		 pop	 rbp
  001d6	c3		 ret	 0
$LN6@Construct:
??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S13$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
tv152 = 128
tv148 = 128
tv146 = 136
this$ = 160
_Arg$ = 168
_Count$ = 176
?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S12$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>, COMDAT

; 2609 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2610 :         auto& _My_data = _Mypair._Myval2;

  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2611 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2612 : 
; 2613 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2614 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2615 :         } else {
; 2616 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2617 :         }
; 2618 : 
; 2619 :         if (_Count > max_size()) {

  00033	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0003f	48 39 85 c0 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00046	76 05		 jbe	 SHORT $LN2@Construct

; 2620 :             _Xlen_string(); // result too long

  00048	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Construct:

; 2621 :         }
; 2622 : 
; 2623 :         auto& _Al       = _Getal();

  0004d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2624 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0005d	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  00061	48 8d 4d 18	 lea	 rcx, QWORD PTR $S12$[rbp]
  00065	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006a	48 8d 45 18	 lea	 rax, QWORD PTR $S12$[rbp]
  0006e	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2625 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  00072	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00076	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0007a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00083	90		 npad	 1

; 2626 : 
; 2627 :         if (_Count < _BUF_SIZE) {

  00084	48 83 bd c0 00
	00 00 10	 cmp	 QWORD PTR _Count$[rbp], 16
  0008c	73 77		 jae	 SHORT $LN3@Construct

; 2628 :             _My_data._Mysize = _Count;

  0008e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00099	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2629 :             _My_data._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a1	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2630 : 
; 2631 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2632 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2633 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2634 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2635 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);

  000a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000b8	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2636 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  000c7	c6 85 80 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  000ce	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000d2	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  000d9	48 8d 44 08 08	 lea	 rax, QWORD PTR [rax+rcx+8]
  000de	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000e5	48 8b c8	 mov	 rcx, rax
  000e8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2637 :             } else { // _Strat == _Construct_strategy::_From_string
; 2638 : #ifdef _INSERT_STRING_ANNOTATION
; 2639 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2640 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2641 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2642 : #endif // !_INSERT_STRING_ANNOTATION
; 2643 :             }
; 2644 : 
; 2645 :             _Proxy._Release();

  000ed	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f1	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f6	90		 npad	 1

; 2646 :             return;

  000f7	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00100	e9 02 01 00 00	 jmp	 $LN4@Construct
$LN3@Construct:

; 2647 :         }
; 2648 : 
; 2649 :         _My_data._Myres         = _BUF_SIZE - 1;

  00105	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00109	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2650 :         size_type _New_capacity = _Calculate_growth(_Count);

  00111	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00118	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00124	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2651 :         ++_New_capacity;

  00128	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0012c	48 ff c0	 inc	 rax
  0012f	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2652 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  00133	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00137	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013b	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  00140	48 89 45 38	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 2653 :         --_New_capacity;

  00144	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00148	48 ff c8	 dec	 rax
  0014b	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2654 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0014f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00153	48 83 c0 08	 add	 rax, 8
  00157	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  0015b	48 8b c8	 mov	 rcx, rax
  0015e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2655 : 
; 2656 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  00163	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00167	48 ff c0	 inc	 rax
  0016a	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  00171	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00175	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0017a	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00181	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR tv154[rbp]
  00188	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  0018f	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 2657 : 
; 2658 :         _My_data._Mysize = _Count;

  00194	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00198	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  0019f	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2659 :         _My_data._Myres  = _New_capacity;

  001a3	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001a7	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  001ab	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2660 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2661 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2662 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2663 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2664 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);

  001af	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001b3	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001b8	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  001bf	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  001c6	48 8b c8	 mov	 rcx, rax
  001c9	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2665 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  001ce	c6 85 81 00 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  001d5	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001d9	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001de	48 03 85 c0 00
	00 00		 add	 rax, QWORD PTR _Count$[rbp]
  001e5	48 8d 95 81 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2666 :         } else { // _Strat == _Construct_strategy::_From_string
; 2667 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2668 :         }
; 2669 : 
; 2670 :         _ASAN_STRING_CREATE(*this);
; 2671 :         _Proxy._Release();

  001f4	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  001f8	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  001fd	90		 npad	 1

; 2672 :     }

  001fe	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00202	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN4@Construct:
  00207	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  0020e	5d		 pop	 rbp
  0020f	c3		 ret	 0
$LN6@Construct:
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S12$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 1063 : _CONSTEXPR20 void _Pocca(_Alloc& _Left, const _Alloc& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1064 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 1065 :         _Left = _Right;
; 1066 :     }
; 1067 : }

  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Convert_size@_K_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 80
??$_Convert_size@_K_K@std@@YA_K_K@Z PROC		; std::_Convert_size<unsigned __int64,unsigned __int64>, COMDAT

; 1108 :     sizeof(_Unsigned_type) <= sizeof(_Size_type)) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1109 :     // convert _Unsigned_type to _Size_type, avoiding truncation
; 1110 :     _STL_INTERNAL_STATIC_ASSERT(_Unsigned_type(-1) > 0);
; 1111 :     _STL_INTERNAL_STATIC_ASSERT(_Size_type(-1) > 0);
; 1112 : 
; 1113 :     if constexpr (sizeof(_Unsigned_type) > sizeof(_Size_type)) {
; 1114 :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 1115 :             _Xlength_error("size is too long for _Size_type");
; 1116 :         }
; 1117 :     }
; 1118 : 
; 1119 :     return static_cast<_Size_type>(_Len);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Len$[rbp]

; 1120 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Convert_size@_K_K@std@@YA_K_K@Z ENDP		; std::_Convert_size<unsigned __int64,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z PROC		; std::_Refancy<char *,0>, COMDAT

; 295  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 296  :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 297  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ENDP		; std::_Refancy<char *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 0
$T1 = 72
this$ = 96
_Al$ = 104
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al$[rbp]
  00029	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00036	48 89 45 00	 mov	 QWORD PTR _New_proxy$[rbp], rax

; 1209 :         _Construct_in_place(*_New_proxy, this);

  0003a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00042	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00046	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1210 :         _Myproxy            = _New_proxy;

  0004f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1211 :         _New_proxy->_Mycont = this;

  0005a	48 8b 45 00	 mov	 rax, QWORD PTR _New_proxy$[rbp]
  0005e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1212 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1135 : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1136 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1137 :     using _Ty = typename _Alloc::value_type;
; 1138 :     _Ptr->~_Ty();
; 1139 :     _Deallocate_plain(_Al, _Ptr);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1140 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b6	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bb	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bf	5d		 pop	 rbp
  000c0	c3		 ret	 0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 98   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   :     // return smaller of _Left and _Right
; 100  :     return _Right < _Left ? _Right : _Left;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00024	48 8b 4d 60	 mov	 rcx, QWORD PTR _Left$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@min
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@min
$LN3@min:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@min:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 101  : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z
_TEXT	SEGMENT
this$ = 80
other$ = 88
??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob><ID3D10Blob>, COMDAT

; 253  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     ComPtr(_In_opt_ U *other) throw() : ptr_(other)

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR other$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 254  :         InternalAddRef();

  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalAddRef

; 255  :     }

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob><ID3D10Blob>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *, COMDAT

; 165  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  :         return this->ptr_->ReleaseAndGetAddressOf();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf

; 167  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>, COMDAT

; 2569 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 68	 mov	 QWORD PTR tv72[rbp], rax
  00038	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0003f	0f b6 55 60	 movzx	 edx, BYTE PTR $T3[rbp]
  00043	48 8b 4d 68	 mov	 rcx, QWORD PTR tv72[rbp]
  00047	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
  0004c	90		 npad	 1

; 2570 :         _Adl_verify_range(_First, _Last);

  0004d	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00054	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >

; 2571 :         auto _UFirst = _Get_unwrapped(_First);

  00060	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00067	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
  0006c	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 2572 :         auto _ULast  = _Get_unwrapped(_Last);

  00070	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
  0007c	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 2573 :         if (_UFirst == _ULast) {

  00080	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  00084	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  00088	75 3d		 jne	 SHORT $LN2@allocator

; 2574 :             _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0008a	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00091	48 89 45 68	 mov	 QWORD PTR tv128[rbp], rax
  00095	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  000a1	48 8b d0	 mov	 rdx, rax
  000a4	48 8d 4d 61	 lea	 rcx, QWORD PTR $T4[rbp]
  000a8	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  000ad	48 8b d0	 mov	 rdx, rax
  000b0	48 8b 4d 68	 mov	 rcx, QWORD PTR tv128[rbp]
  000b4	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2575 :             _Tidy_init();

  000b9	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c0	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2576 :         } else {

  000c5	eb 37		 jmp	 SHORT $LN3@allocator
$LN2@allocator:

; 2577 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2578 :                 _Construct<_Construct_strategy::_From_ptr>(
; 2579 :                     _UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));
; 2580 :             } else if constexpr (_Is_cpp17_fwd_iter_v<decltype(_UFirst)>) {
; 2581 :                 const auto _Length = static_cast<size_t>(_STD distance(_UFirst, _ULast));

  000c7	48 8b 55 08	 mov	 rdx, QWORD PTR _ULast$[rbp]
  000cb	48 8b 4d 00	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  000cf	e8 00 00 00 00	 call	 ??$distance@PEAD@std@@YA_JPEAD0@Z ; std::distance<char *>
  000d4	48 89 45 10	 mov	 QWORD PTR _Length$1[rbp], rax

; 2582 :                 const auto _Count  = _Convert_size<size_type>(_Length);

  000d8	48 8b 4d 10	 mov	 rcx, QWORD PTR _Length$1[rbp]
  000dc	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  000e1	48 89 45 18	 mov	 QWORD PTR _Count$2[rbp], rax

; 2583 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast), _Count);

  000e5	4c 8b 4d 18	 mov	 r9, QWORD PTR _Count$2[rbp]
  000e9	4c 8b 45 08	 mov	 r8, QWORD PTR _ULast$[rbp]
  000ed	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000f1	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f8	e8 00 00 00 00	 call	 ??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
  000fd	90		 npad	 1
$LN3@allocator:

; 2584 :             } else {
; 2585 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast));
; 2586 :             }
; 2587 :         }
; 2588 :     }

  000fe	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00105	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  0010a	90		 npad	 1
  0010b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00112	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00117	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011e	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00122	5d		 pop	 rbp
  00123	c3		 ret	 0
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
__param0$ = 88
__param1$ = 96
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	4c 8b 45 60	 mov	 r8, QWORD PTR __param1$[rbp]
  0001d	48 8b 55 58	 mov	 rdx, QWORD PTR __param0$[rbp]
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 80
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped, COMDAT

; 2157 :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2158 :         return const_cast<value_type*>(_Unfancy(this->_Ptr));

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00023	e8 00 00 00 00	 call	 ??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z ; std::_Unfancy<char const >

; 2159 :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 64
_First$ = 96
_Last$ = 104
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 2025 :         const _String_const_iterator& _First, const _String_const_iterator& _Last) noexcept {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Verify_ran:

; 2026 :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "string iterators in range are from different containers");

  00023	48 8b 4d 60	 mov	 rcx, QWORD PTR _First$[rbp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00030	48 8b 4d 68	 mov	 rcx, QWORD PTR _Last$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR tv69[rbp]
  0003d	48 3b c8	 cmp	 rcx, rax
  00040	75 02		 jne	 SHORT $LN7@Verify_ran
  00042	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN7@Verify_ran:
  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00057	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005c	45 33 c9	 xor	 r9d, r9d
  0005f	41 b8 ea 07 00
	00		 mov	 r8d, 2026		; 000007eaH
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
  0006c	b9 02 00 00 00	 mov	 ecx, 2
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00077	83 f8 01	 cmp	 eax, 1
  0007a	75 03		 jne	 SHORT $LN19@Verify_ran
  0007c	cc		 int	 3
  0007d	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  0007f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00088	41 b9 ea 07 00
	00		 mov	 r9d, 2026		; 000007eaH
  0008e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0009c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	0f 85 6a ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 2027 :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "string iterator range transposed");

  000b9	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  000bd	48 8b 4d 68	 mov	 rcx, QWORD PTR _Last$[rbp]
  000c1	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c5	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000c9	77 02		 ja	 SHORT $LN13@Verify_ran
  000cb	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN13@Verify_ran:
  000cd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@
  000d4	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e5	45 33 c9	 xor	 r9d, r9d
  000e8	41 b8 eb 07 00
	00		 mov	 r8d, 2027		; 000007ebH
  000ee	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
  000f5	b9 02 00 00 00	 mov	 ecx, 2
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00100	83 f8 01	 cmp	 eax, 1
  00103	75 03		 jne	 SHORT $LN20@Verify_ran
  00105	cc		 int	 3
  00106	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  00108	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00111	41 b9 eb 07 00
	00		 mov	 r9d, 2027		; 000007ebH
  00117	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00125	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  0012c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00132	33 c0		 xor	 eax, eax
  00134	85 c0		 test	 eax, eax
  00136	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	0f 85 77 ff ff
	ff		 jne	 $LN10@Verify_ran

; 2028 :     }

  00142	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00146	5d		 pop	 rbp
  00147	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Parg$ = 88
_Pstring$ = 96
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1852 :     _CONSTEXPR20 _String_const_iterator(pointer _Parg, const _Container_base* _Pstring) noexcept : _Ptr(_Parg) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 58	 mov	 rcx, QWORD PTR _Parg$[rbp]
  00036	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 1853 :         this->_Adopt(_Pstring);

  0003a	48 8b 55 60	 mov	 rdx, QWORD PTR _Pstring$[rbp]
  0003e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1854 :     }

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 5033 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, _In_z_ const _Elem* const _Right) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 5034 :     return _Left._Equal(_Right);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal

; 5035 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D10Blob@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
_TEXT	SEGMENT
tv67 = 64
this$ = 96
??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator int Microsoft::WRL::Details::BoolStruct::*, COMDAT

; 364  :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 365  :         return Get() != nullptr ? &Details::BoolStruct::Member : nullptr;

  0001b	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get
  00024	48 85 c0	 test	 rax, rax
  00027	74 09		 je	 SHORT $LN3@
  00029	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv67[rbp], 0
  00030	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00032	c7 45 40 ff ff
	ff ff		 mov	 DWORD PTR tv67[rbp], -1
$LN4@:
  00039	8b 45 40	 mov	 eax, DWORD PTR tv67[rbp]

; 366  :     }

  0003c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator int Microsoft::WRL::Details::BoolStruct::*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z
_TEXT	SEGMENT
tmp$ = 0
this$ = 96
r$ = 104
?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::Swap, COMDAT

; 356  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 357  :         T* tmp = ptr_;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR tmp$[rbp], rax

; 358  :         ptr_ = r.ptr_;

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR r$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 359  :         r.ptr_ = tmp;

  00039	48 8b 45 68	 mov	 rax, QWORD PTR r$[rbp]
  0003d	48 8b 4d 00	 mov	 rcx, QWORD PTR tmp$[rbp]
  00041	48 89 08	 mov	 QWORD PTR [rax], rcx

; 360  :     }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z
_TEXT	SEGMENT
$T1 = 64
tv74 = 72
this$ = 96
other$ = 104
??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator=, COMDAT

; 302  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 303  :         if (ptr_ != other)

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 68	 mov	 rcx, QWORD PTR other$[rbp]
  00028	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002b	74 27		 je	 SHORT $LN2@operator

; 304  :         {
; 305  :             ComPtr(other).Swap(*this);

  0002d	48 8b 55 68	 mov	 rdx, QWORD PTR other$[rbp]
  00031	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  00035	e8 00 00 00 00	 call	 ??$?0UID3D10Blob@@@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@PEAUID3D10Blob@@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob><ID3D10Blob>
  0003a	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  0003e	48 8b 55 60	 mov	 rdx, QWORD PTR this$[rbp]
  00042	48 8b 4d 48	 mov	 rcx, QWORD PTR tv74[rbp]
  00046	e8 00 00 00 00	 call	 ?Swap@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAXAEAV123@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::Swap
  0004b	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0004f	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
$LN2@operator:

; 306  :         }
; 307  :         return *this;

  00054	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]

; 308  :     }

  00058	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ
_TEXT	SEGMENT
this$ = 80
?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalAddRef, COMDAT

; 220  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 221  :         if (ptr_ != nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 15		 je	 SHORT $LN2@InternalAd

; 222  :         {
; 223  :             ptr_->AddRef();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	ff 50 08	 call	 QWORD PTR [rax+8]
  00039	90		 npad	 1
$LN2@InternalAd:

; 224  :         }
; 225  :     }

  0003a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?InternalAddRef@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IEBAXXZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
_TEXT	SEGMENT
this$ = 80
type$ = 88
shaderBlob$ = 96
?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z PROC ; D3D12Shader::LoadShader, COMDAT

; 64   : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   : 	if (!shaderBlob)

  00024	48 83 7d 60 00	 cmp	 QWORD PTR shaderBlob$[rbp], 0
  00029	75 04		 jne	 SHORT $LN2@LoadShader

; 66   : 		return false;

  0002b	32 c0		 xor	 al, al
  0002d	eb 4a		 jmp	 SHORT $LN1@LoadShader
$LN2@LoadShader:

; 67   : 	m_shaderBlob = shaderBlob;

  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8b 55 60	 mov	 rdx, QWORD PTR shaderBlob$[rbp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??4?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAAAEAV012@PEAUID3D10Blob@@@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator=

; 68   : 	m_shaderType = type;

  0003f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00043	8b 4d 58	 mov	 ecx, DWORD PTR type$[rbp]
  00046	89 48 58	 mov	 DWORD PTR [rax+88], ecx

; 69   : 	m_shaderName = "LOAD SHADER";

  00049	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 83 c0 30	 add	 rax, 48			; 00000030H
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IBIMMHEO@LOAD?5SHADER@
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 70   : 	m_shaderPath = "LOAD SHADER";

  00060	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IBIMMHEO@LOAD?5SHADER@
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 71   : 
; 72   : 
; 73   : 	return false;

  00077	32 c0		 xor	 al, al
$LN1@LoadShader:

; 74   : }

  00079	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z ENDP ; D3D12Shader::LoadShader
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
ErrorBlob$ = 0
error$1 = 8
$T2 = 112
$T3 = 120
$T4 = 128
$T5 = 136
$T6 = 176
$T7 = 184
$T8 = 208
$T9 = 216
$T10 = 240
$T11 = 248
$T12 = 256
$T13 = 264
$T14 = 272
$T15 = 312
$T16 = 320
$T17 = 344
$T18 = 352
$T19 = 376
$T20 = 384
$T21 = 392
$T22 = 432
$T23 = 440
$T24 = 441
tv68 = 444
tv298 = 448
tv256 = 448
tv233 = 448
tv163 = 448
tv183 = 456
tv81 = 456
tv231 = 464
tv161 = 464
tv221 = 472
tv151 = 472
tv289 = 480
tv283 = 480
tv211 = 488
tv141 = 488
tv291 = 496
tv285 = 496
tv219 = 504
tv149 = 504
tv293 = 512
tv287 = 512
tv229 = 520
tv159 = 520
tv235 = 528
tv165 = 528
this$ = 560
type$ = 568
path$ = 576
?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; D3D12Shader::CompileShader, COMDAT

; 28   : {

$LN31:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 81 ec 70 02
	00 00		 sub	 rsp, 624		; 00000270H
  00016	48 8d 6c 24 50	 lea	 rbp, QWORD PTR [rsp+80]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 29   : 	ComPtr<ID3DBlob> ErrorBlob;

  00027	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  0002b	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
  00030	90		 npad	 1

; 30   : 
; 31   : 	switch (type)

  00031	8b 85 38 02 00
	00		 mov	 eax, DWORD PTR type$[rbp]
  00037	89 85 bc 01 00
	00		 mov	 DWORD PTR tv68[rbp], eax
  0003d	83 bd bc 01 00
	00 05		 cmp	 DWORD PTR tv68[rbp], 5
  00044	0f 87 50 03 00
	00		 ja	 $LN12@CompileSha
  0004a	48 63 85 bc 01
	00 00		 movsxd	 rax, DWORD PTR tv68[rbp]
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00058	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN29@CompileSha[rcx+rax*4]
  0005f	48 03 c1	 add	 rax, rcx
  00062	ff e0		 jmp	 rax
$LN4@CompileSha:

; 32   : 	{
; 33   : 	case D3D12_SHADER_TYPE_VERTEX:
; 34   : 		DXCall(D3DCompileFromFile(strw(path).c_str(), nullptr, nullptr,

  00064	48 8d 55 78	 lea	 rdx, QWORD PTR $T3[rbp]
  00068	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  0006c	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
  00079	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv163[rbp], rax
  00080	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00087	48 89 85 c8 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0008e	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00095	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  0009c	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
  000a9	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv161[rbp], rax
  000b0	48 8d 8d b0 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000b7	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  000bc	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv151[rbp], rax
  000c3	48 8d 85 b8 00
	00 00		 lea	 rax, QWORD PTR $T7[rbp]
  000ca	48 89 85 d0 00
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  000d1	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR $T8[rbp]
  000d8	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  000df	e8 00 00 00 00	 call	 ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
  000e4	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv283[rbp], rax
  000eb	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR tv283[rbp]
  000f2	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv141[rbp], rax
  000f9	48 8d 85 d8 00
	00 00		 lea	 rax, QWORD PTR $T9[rbp]
  00100	48 89 85 f0 00
	00 00		 mov	 QWORD PTR $T10[rbp], rax
  00107	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR $T10[rbp]
  0010e	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  00115	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  0011a	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv285[rbp], rax
  00121	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR tv285[rbp]
  00128	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv149[rbp], rax
  0012f	4c 8b 8d d8 01
	00 00		 mov	 r9, QWORD PTR tv151[rbp]
  00136	4c 8b 85 e8 01
	00 00		 mov	 r8, QWORD PTR tv141[rbp]
  0013d	48 8b 95 f8 01
	00 00		 mov	 rdx, QWORD PTR tv149[rbp]
  00144	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  0014b	e8 00 00 00 00	 call	 ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
  00150	48 89 85 00 02
	00 00		 mov	 QWORD PTR tv287[rbp], rax
  00157	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR tv287[rbp]
  0015e	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  00163	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv159[rbp], rax
  0016a	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR tv163[rbp]
  00171	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00176	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR tv161[rbp]
  0017d	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00182	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  0018a	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00192	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_06LMJGIEEJ@vs_5_1@
  00199	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0019e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_04GHJNJNPO@main@
  001a5	45 33 c0	 xor	 r8d, r8d
  001a8	33 d2		 xor	 edx, edx
  001aa	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv159[rbp]
  001b1	e8 00 00 00 00	 call	 D3DCompileFromFile
  001b6	85 c0		 test	 eax, eax
  001b8	7d 0c		 jge	 SHORT $LN15@CompileSha
  001ba	c7 85 10 02 00
	00 01 00 00 00	 mov	 DWORD PTR tv165[rbp], 1
  001c4	eb 0a		 jmp	 SHORT $LN16@CompileSha
$LN15@CompileSha:
  001c6	c7 85 10 02 00
	00 00 00 00 00	 mov	 DWORD PTR tv165[rbp], 0
$LN16@CompileSha:
  001d0	0f b6 85 10 02
	00 00		 movzx	 eax, BYTE PTR tv165[rbp]
  001d7	88 45 70	 mov	 BYTE PTR $T2[rbp], al
  001da	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  001e1	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  001e6	0f b6 45 70	 movzx	 eax, BYTE PTR $T2[rbp]
  001ea	85 c0		 test	 eax, eax
  001ec	74 09		 je	 SHORT $LN5@CompileSha
  001ee	33 d2		 xor	 edx, edx
  001f0	33 c9		 xor	 ecx, ecx
  001f2	e8 00 00 00 00	 call	 _CxxThrowException
$LN5@CompileSha:

; 35   : 			"main", "vs_5_1", 0, 0, &m_shaderBlob, &ErrorBlob));
; 36   : 		break;

  001f7	e9 e6 01 00 00	 jmp	 $LN2@CompileSha
$LN6@CompileSha:

; 37   : 	case D3D12_SHADER_TYPE_PIXEL:
; 38   : 		DXCall(D3DCompileFromFile(strw(path).c_str(), nullptr, nullptr,

  001fc	48 8d 95 00 01
	00 00		 lea	 rdx, QWORD PTR $T12[rbp]
  00203	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  00207	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
  0020c	48 8b c8	 mov	 rcx, rax
  0020f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
  00214	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv233[rbp], rax
  0021b	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00222	48 89 85 c8 01
	00 00		 mov	 QWORD PTR tv183[rbp], rax
  00229	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T13[rbp]
  00230	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR tv183[rbp]
  00237	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
  0023c	48 8b c8	 mov	 rcx, rax
  0023f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
  00244	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv231[rbp], rax
  0024b	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  00252	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00257	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv221[rbp], rax
  0025e	48 8d 85 40 01
	00 00		 lea	 rax, QWORD PTR $T16[rbp]
  00265	48 89 85 58 01
	00 00		 mov	 QWORD PTR $T17[rbp], rax
  0026c	48 8b 95 58 01
	00 00		 mov	 rdx, QWORD PTR $T17[rbp]
  00273	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  0027a	e8 00 00 00 00	 call	 ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
  0027f	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv289[rbp], rax
  00286	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR tv289[rbp]
  0028d	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv211[rbp], rax
  00294	48 8d 85 60 01
	00 00		 lea	 rax, QWORD PTR $T18[rbp]
  0029b	48 89 85 78 01
	00 00		 mov	 QWORD PTR $T19[rbp], rax
  002a2	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR $T19[rbp]
  002a9	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  002b0	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  002b5	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  002bc	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR tv291[rbp]
  002c3	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv219[rbp], rax
  002ca	4c 8b 8d d8 01
	00 00		 mov	 r9, QWORD PTR tv221[rbp]
  002d1	4c 8b 85 e8 01
	00 00		 mov	 r8, QWORD PTR tv211[rbp]
  002d8	48 8b 95 f8 01
	00 00		 mov	 rdx, QWORD PTR tv219[rbp]
  002df	48 8d 8d 10 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  002e6	e8 00 00 00 00	 call	 ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
  002eb	48 89 85 00 02
	00 00		 mov	 QWORD PTR tv293[rbp], rax
  002f2	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR tv293[rbp]
  002f9	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  002fe	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv229[rbp], rax
  00305	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR tv233[rbp]
  0030c	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00311	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR tv231[rbp]
  00318	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0031d	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00325	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  0032d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_06NPEGLBHD@ps_5_1@
  00334	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00339	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_04GHJNJNPO@main@
  00340	45 33 c0	 xor	 r8d, r8d
  00343	33 d2		 xor	 edx, edx
  00345	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv229[rbp]
  0034c	e8 00 00 00 00	 call	 D3DCompileFromFile
  00351	85 c0		 test	 eax, eax
  00353	7d 0c		 jge	 SHORT $LN17@CompileSha
  00355	c7 85 10 02 00
	00 01 00 00 00	 mov	 DWORD PTR tv235[rbp], 1
  0035f	eb 0a		 jmp	 SHORT $LN18@CompileSha
$LN17@CompileSha:
  00361	c7 85 10 02 00
	00 00 00 00 00	 mov	 DWORD PTR tv235[rbp], 0
$LN18@CompileSha:
  0036b	0f b6 85 10 02
	00 00		 movzx	 eax, BYTE PTR tv235[rbp]
  00372	88 85 f8 00 00
	00		 mov	 BYTE PTR $T11[rbp], al
  00378	48 8d 8d 10 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0037f	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00384	0f b6 85 f8 00
	00 00		 movzx	 eax, BYTE PTR $T11[rbp]
  0038b	85 c0		 test	 eax, eax
  0038d	74 09		 je	 SHORT $LN7@CompileSha
  0038f	33 d2		 xor	 edx, edx
  00391	33 c9		 xor	 ecx, ecx
  00393	e8 00 00 00 00	 call	 _CxxThrowException
$LN7@CompileSha:

; 39   : 			"main", "ps_5_1", 0, 0, &m_shaderBlob, &ErrorBlob));
; 40   : 		break;

  00398	eb 48		 jmp	 SHORT $LN2@CompileSha
$LN12@CompileSha:

; 41   : 	case D3D12_SHADER_TYPE_GEOMETRY:
; 42   : 	case D3D12_SHADER_TYPE_DOMEN:
; 43   : 	case D3D12_SHADER_TYPE_TESSELLATION:
; 44   : 	case D3D12_SHADER_TYPE_RAY_TRACING:
; 45   : 	default:
; 46   : 		memset(m_shaderBlob.Get(), 0, sizeof(ID3DBlob));

  0039a	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003a1	48 8b c8	 mov	 rcx, rax
  003a4	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get
  003a9	41 b8 08 00 00
	00		 mov	 r8d, 8
  003af	33 d2		 xor	 edx, edx
  003b1	48 8b c8	 mov	 rcx, rax
  003b4	e8 00 00 00 00	 call	 memset

; 47   : 		return false;

  003b9	c6 85 80 01 00
	00 00		 mov	 BYTE PTR $T20[rbp], 0
  003c0	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  003c4	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  003c9	90		 npad	 1
  003ca	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  003d1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003d6	0f b6 85 80 01
	00 00		 movzx	 eax, BYTE PTR $T20[rbp]
  003dd	e9 ec 00 00 00	 jmp	 $LN14@CompileSha
$LN2@CompileSha:

; 48   : 	}
; 49   : 
; 50   : 
; 51   : 	if (ErrorBlob)

  003e2	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  003e6	e8 00 00 00 00	 call	 ??B?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator int Microsoft::WRL::Details::BoolStruct::*
  003eb	83 f8 ff	 cmp	 eax, -1
  003ee	0f 84 b6 00 00
	00		 je	 $LN13@CompileSha

; 52   : 	{
; 53   : 		FString error = static_cast<const char*>(ErrorBlob->GetBufferPointer());

  003f4	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  003f8	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
  003fd	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv256[rbp], rax
  00404	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR tv256[rbp]
  0040b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0040e	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR tv256[rbp]
  00415	ff 50 18	 call	 QWORD PTR [rax+24]
  00418	48 8b d0	 mov	 rdx, rax
  0041b	48 8d 4d 08	 lea	 rcx, QWORD PTR error$1[rbp]
  0041f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00424	90		 npad	 1

; 54   : 		Logger::log(error, LOGGER_ERROR);

  00425	48 8d 85 88 01
	00 00		 lea	 rax, QWORD PTR $T21[rbp]
  0042c	48 89 85 b0 01
	00 00		 mov	 QWORD PTR $T22[rbp], rax
  00433	48 8d 55 08	 lea	 rdx, QWORD PTR error$1[rbp]
  00437	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR $T22[rbp]
  0043e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00443	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv298[rbp], rax
  0044a	ba 04 00 00 00	 mov	 edx, 4
  0044f	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR tv298[rbp]
  00456	e8 00 00 00 00	 call	 ?log@Logger@@SAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4LOGGER_ENUM@@@Z ; Logger::log

; 55   : 		memset(m_shaderBlob.Get(), 0, sizeof(ID3DBlob));

  0045b	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00462	48 8b c8	 mov	 rcx, rax
  00465	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEBAPEAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::Get
  0046a	41 b8 08 00 00
	00		 mov	 r8d, 8
  00470	33 d2		 xor	 edx, edx
  00472	48 8b c8	 mov	 rcx, rax
  00475	e8 00 00 00 00	 call	 memset

; 56   : 		return false;

  0047a	c6 85 b8 01 00
	00 00		 mov	 BYTE PTR $T23[rbp], 0
  00481	48 8d 4d 08	 lea	 rcx, QWORD PTR error$1[rbp]
  00485	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0048a	90		 npad	 1
  0048b	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  0048f	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  00494	90		 npad	 1
  00495	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  0049c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004a1	0f b6 85 b8 01
	00 00		 movzx	 eax, BYTE PTR $T23[rbp]
  004a8	eb 24		 jmp	 SHORT $LN14@CompileSha
$LN13@CompileSha:

; 57   : 	}
; 58   : 
; 59   : 
; 60   : 	return true;

  004aa	c6 85 b9 01 00
	00 01		 mov	 BYTE PTR $T24[rbp], 1
  004b1	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  004b5	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  004ba	90		 npad	 1
  004bb	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  004c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004c7	0f b6 85 b9 01
	00 00		 movzx	 eax, BYTE PTR $T24[rbp]
$LN14@CompileSha:

; 61   : }

  004ce	48 8d a5 20 02
	00 00		 lea	 rsp, QWORD PTR [rbp+544]
  004d5	5d		 pop	 rbp
  004d6	c3		 ret	 0
$LN30@CompileSha:
  004d7	90		 npad	 1
$LN29@CompileSha:
  004d8	00 00 00 00	 DD	 $LN4@CompileSha
  004dc	00 00 00 00	 DD	 $LN6@CompileSha
  004e0	00 00 00 00	 DD	 $LN12@CompileSha
  004e4	00 00 00 00	 DD	 $LN12@CompileSha
  004e8	00 00 00 00	 DD	 $LN12@CompileSha
  004ec	00 00 00 00	 DD	 $LN12@CompileSha
?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; D3D12Shader::CompileShader
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
ErrorBlob$ = 0
error$1 = 8
$T2 = 112
$T3 = 120
$T4 = 128
$T5 = 136
$T6 = 176
$T7 = 184
$T8 = 208
$T9 = 216
$T10 = 240
$T11 = 248
$T12 = 256
$T13 = 264
$T14 = 272
$T15 = 312
$T16 = 320
$T17 = 344
$T18 = 352
$T19 = 376
$T20 = 384
$T21 = 392
$T22 = 432
$T23 = 440
$T24 = 441
tv68 = 444
tv298 = 448
tv256 = 448
tv233 = 448
tv163 = 448
tv183 = 456
tv81 = 456
tv231 = 464
tv161 = 464
tv221 = 472
tv151 = 472
tv289 = 480
tv283 = 480
tv211 = 488
tv141 = 488
tv291 = 496
tv285 = 496
tv219 = 504
tv149 = 504
tv293 = 512
tv287 = 512
tv229 = 520
tv159 = 520
tv235 = 528
tv165 = 528
this$ = 560
type$ = 568
path$ = 576
?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::CompileShader'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 50	 lea	 rbp, QWORD PTR [rdx+80]
  0000a	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::CompileShader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
ErrorBlob$ = 0
error$1 = 8
$T2 = 112
$T3 = 120
$T4 = 128
$T5 = 136
$T6 = 176
$T7 = 184
$T8 = 208
$T9 = 216
$T10 = 240
$T11 = 248
$T12 = 256
$T13 = 264
$T14 = 272
$T15 = 312
$T16 = 320
$T17 = 344
$T18 = 352
$T19 = 376
$T20 = 384
$T21 = 392
$T22 = 432
$T23 = 440
$T24 = 441
tv68 = 444
tv298 = 448
tv256 = 448
tv233 = 448
tv163 = 448
tv183 = 456
tv81 = 456
tv231 = 464
tv161 = 464
tv221 = 472
tv151 = 472
tv289 = 480
tv283 = 480
tv211 = 488
tv141 = 488
tv291 = 496
tv285 = 496
tv219 = 504
tv149 = 504
tv293 = 512
tv287 = 512
tv229 = 520
tv159 = 520
tv235 = 528
tv165 = 528
this$ = 560
type$ = 568
path$ = 576
?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::CompileShader'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 50	 lea	 rbp, QWORD PTR [rdx+80]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR ErrorBlob$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$1@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::CompileShader'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
ErrorBlob$ = 0
error$1 = 8
$T2 = 112
$T3 = 120
$T4 = 128
$T5 = 136
$T6 = 176
$T7 = 184
$T8 = 208
$T9 = 216
$T10 = 240
$T11 = 248
$T12 = 256
$T13 = 264
$T14 = 272
$T15 = 312
$T16 = 320
$T17 = 344
$T18 = 352
$T19 = 376
$T20 = 384
$T21 = 392
$T22 = 432
$T23 = 440
$T24 = 441
tv68 = 444
tv298 = 448
tv256 = 448
tv233 = 448
tv163 = 448
tv183 = 456
tv81 = 456
tv231 = 464
tv161 = 464
tv221 = 472
tv151 = 472
tv289 = 480
tv283 = 480
tv211 = 488
tv141 = 488
tv291 = 496
tv285 = 496
tv219 = 504
tv149 = 504
tv293 = 512
tv287 = 512
tv229 = 520
tv159 = 520
tv235 = 528
tv165 = 528
this$ = 560
type$ = 568
path$ = 576
?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::CompileShader'::`1'::dtor$8
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 50	 lea	 rbp, QWORD PTR [rdx+80]
  0000a	48 8d 4d 08	 lea	 rcx, QWORD PTR error$1[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$8@?0??CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::CompileShader'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z
_TEXT	SEGMENT
this$ = 80
type$ = 88
shaderBlob$ = 96
??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z PROC ; D3D12Shader::D3D12Shader, COMDAT

; 22   : {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
  00030	90		 npad	 1
  00031	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00041	90		 npad	 1
  00042	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00046	48 83 c0 30	 add	 rax, 48			; 00000030H
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00052	90		 npad	 1

; 23   : 	m_shaderType = type;

  00053	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00057	8b 4d 58	 mov	 ecx, DWORD PTR type$[rbp]
  0005a	89 48 58	 mov	 DWORD PTR [rax+88], ecx

; 24   : 	LoadShader(type, shaderBlob);

  0005d	4c 8b 45 60	 mov	 r8, QWORD PTR shaderBlob$[rbp]
  00061	8b 55 58	 mov	 edx, DWORD PTR type$[rbp]
  00064	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00068	e8 00 00 00 00	 call	 ?LoadShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@PEAUID3D10Blob@@@Z ; D3D12Shader::LoadShader
  0006d	90		 npad	 1

; 25   : }

  0006e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00072	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z ENDP ; D3D12Shader::D3D12Shader
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
type$ = 88
shaderBlob$ = 96
?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
type$ = 88
shaderBlob$ = 96
?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 08	 add	 rcx, 8
  00012	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
type$ = 88
shaderBlob$ = 96
?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00012	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@PEAUID3D10Blob@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 104
tv142 = 112
this$ = 144
type$ = 152
path$ = 160
??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; D3D12Shader::D3D12Shader, COMDAT

; 6    : {

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00016	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00027	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
  00036	90		 npad	 1
  00037	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004a	90		 npad	 1
  0004b	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 83 c0 30	 add	 rax, 48			; 00000030H
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	90		 npad	 1

; 7    : 	m_shaderType = type;

  0005f	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	8b 8d 98 00 00
	00		 mov	 ecx, DWORD PTR type$[rbp]
  0006c	89 48 58	 mov	 DWORD PTR [rax+88], ecx

; 8    : 	m_shaderPath = path;

  0006f	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00076	48 83 c0 08	 add	 rax, 8
  0007a	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR path$[rbp]
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 9    : 
; 10   : 	if (path == "")

  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
  00090	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  00097	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0009c	0f b6 c0	 movzx	 eax, al
  0009f	85 c0		 test	 eax, eax
  000a1	74 02		 je	 SHORT $LN2@D3D12Shade

; 11   : 		return;

  000a3	eb 33		 jmp	 SHORT $LN1@D3D12Shade
$LN2@D3D12Shade:

; 12   : 
; 13   : 
; 14   : #ifndef _DEVELOPMENT
; 15   : 	Logger::log("It is recommended to compile the shader manually", LOGGER_WARNING);
; 16   : #endif // _DEVELOPMENT
; 17   : 	CompileShader(type, path);

  000a5	48 8d 45 40	 lea	 rax, QWORD PTR $T1[rbp]
  000a9	48 89 45 68	 mov	 QWORD PTR $T2[rbp], rax
  000ad	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR path$[rbp]
  000b4	48 8b 4d 68	 mov	 rcx, QWORD PTR $T2[rbp]
  000b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000bd	48 89 45 70	 mov	 QWORD PTR tv142[rbp], rax
  000c1	4c 8b 45 70	 mov	 r8, QWORD PTR tv142[rbp]
  000c5	8b 95 98 00 00
	00		 mov	 edx, DWORD PTR type$[rbp]
  000cb	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d2	e8 00 00 00 00	 call	 ?CompileShader@D3D12Shader@@QEAA_NW4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3D12Shader::CompileShader
  000d7	90		 npad	 1
$LN1@D3D12Shade:

; 18   : 
; 19   : }

  000d8	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  000df	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e4	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000eb	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000f2	5d		 pop	 rbp
  000f3	c3		 ret	 0
??0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; D3D12Shader::D3D12Shader
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 104
tv142 = 112
this$ = 144
type$ = 152
path$ = 160
?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR path$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 104
tv142 = 112
this$ = 144
type$ = 152
path$ = 160
?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 104
tv142 = 112
this$ = 144
type$ = 152
path$ = 160
?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	48 83 c1 08	 add	 rcx, 8
  00015	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$2@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 104
tv142 = 112
this$ = 144
type$ = 152
path$ = 160
?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `D3D12Shader::D3D12Shader'::`1'::dtor$3
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00015	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$3@?0???0D3D12Shader@@QEAA@W4eD3D12ShaderType@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `D3D12Shader::D3D12Shader'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z PROC ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  00016	83 e0 02	 and	 eax, 2
  00019	85 c0		 test	 eax, eax
  0001b	74 51		 je	 SHORT $LN2@vector
  0001d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0002c	ba 08 00 00 00	 mov	 edx, 8
  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0003a	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0003d	83 e0 01	 and	 eax, 1
  00040	85 c0		 test	 eax, eax
  00042	74 20		 je	 SHORT $LN3@vector
  00044	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 40 f8	 mov	 rax, QWORD PTR [rax-8]
  0004c	48 8d 04 c5 08
	00 00 00	 lea	 rax, QWORD PTR [rax*8+8]
  00054	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00058	48 83 e9 08	 sub	 rcx, 8
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00064	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00068	48 83 e8 08	 sub	 rax, 8
  0006c	eb 25		 jmp	 SHORT $LN1@vector
$LN2@vector:
  0006e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00072	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00077	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0007a	83 e0 01	 and	 eax, 1
  0007d	85 c0		 test	 eax, eax
  0007f	74 0e		 je	 SHORT $LN4@vector
  00081	ba 08 00 00 00	 mov	 edx, 8
  00086	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0008a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  0008f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
$LN1@vector:
  00093	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00097	5d		 pop	 rbp
  00098	c3		 ret	 0
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ENDP ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4878 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4879 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4880 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4874 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4875 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4876 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
_Ptr$1 = 8
_Al$2 = 16
$T3 = 88
this$ = 112
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT

; 4846 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4847 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4848 :         _My_data._Orphan_all();

  00026	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4849 :         if (_My_data._Large_string_engaged()) {

  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 4d		 je	 SHORT $LN2@Tidy_deall

; 4850 :             _ASAN_STRING_REMOVE(*this);
; 4851 :             const pointer _Ptr = _My_data._Bx._Ptr;

  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4852 :             auto& _Al          = _Getal();

  0004b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00054	48 89 45 10	 mov	 QWORD PTR _Al$2[rbp], rax

; 4853 :             _Destroy_in_place(_My_data._Bx._Ptr);

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 83 c0 08	 add	 rax, 8
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ; std::_Destroy_in_place<wchar_t *>

; 4854 :             _My_data._Activate_SSO_buffer();

  00068	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer

; 4855 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00071	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00075	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00079	48 ff c0	 inc	 rax
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  00083	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$2[rbp]
  00087	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy_deall:

; 4856 :         }
; 4857 : 
; 4858 :         _My_data._Mysize = 0;

  0008c	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00090	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4859 :         _My_data._Myres  = _BUF_SIZE - 1;

  00098	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009c	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4860 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4861 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000a4	33 c0		 xor	 eax, eax
  000a6	66 89 45 58	 mov	 WORD PTR $T3[rbp], ax
  000aa	b8 02 00 00 00	 mov	 eax, 2
  000af	48 6b c0 00	 imul	 rax, rax, 0
  000b3	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000b7	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000bc	48 8d 55 58	 lea	 rdx, QWORD PTR $T3[rbp]
  000c0	48 8b c8	 mov	 rcx, rax
  000c3	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign
  000c8	90		 npad	 1

; 4862 :     }

  000c9	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
$T1 = 72
this$ = 96
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT

; 4835 :     _CONSTEXPR20 void _Tidy_init() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4836 :         // initialize basic_string data members
; 4837 :         auto& _My_data   = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4838 :         _My_data._Mysize = 0;

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4839 :         _My_data._Myres  = _BUF_SIZE - 1;

  0002f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00033	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4840 :         _My_data._Activate_SSO_buffer();

  0003b	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer

; 4841 : 
; 4842 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4843 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	33 c0		 xor	 eax, eax
  00046	66 89 45 48	 mov	 WORD PTR $T1[rbp], ax
  0004a	b8 02 00 00 00	 mov	 eax, 2
  0004f	48 6b c0 00	 imul	 rax, rax, 0
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00057	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  0005c	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 4844 :     }

  00068	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 64
tv74 = 72
this$ = 96
_Requested$ = 104
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4739 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4740 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00029	48 89 45 40	 mov	 QWORD PTR tv76[rbp], rax
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00035	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  00039	4c 8b 45 40	 mov	 r8, QWORD PTR tv76[rbp]
  0003d	48 8b 55 48	 mov	 rdx, QWORD PTR tv74[rbp]
  00041	48 8b 4d 68	 mov	 rcx, QWORD PTR _Requested$[rbp]
  00045	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth

; 4741 :     }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 0
$T1 = 72
_Requested$ = 96
_Old$ = 104
_Max$ = 112
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4726 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4727 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _Requested$[rbp]
  00029	48 83 c8 07	 or	 rax, 7
  0002d	48 89 45 00	 mov	 QWORD PTR _Masked$[rbp], rax

; 4728 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00035	48 39 45 00	 cmp	 QWORD PTR _Masked$[rbp], rax
  00039	76 06		 jbe	 SHORT $LN2@Calculate_

; 4729 :             return _Max;

  0003b	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  0003f	eb 50		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4730 :         }
; 4731 : 
; 4732 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00041	33 d2		 xor	 edx, edx
  00043	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  00047	b9 02 00 00 00	 mov	 ecx, 2
  0004c	48 f7 f1	 div	 rcx
  0004f	48 8b 4d 70	 mov	 rcx, QWORD PTR _Max$[rbp]
  00053	48 2b c8	 sub	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 39 45 68	 cmp	 QWORD PTR _Old$[rbp], rax
  0005d	76 06		 jbe	 SHORT $LN3@Calculate_

; 4733 :             return _Max;

  0005f	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00063	eb 2c		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4734 :         }
; 4735 : 
; 4736 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00065	33 d2		 xor	 edx, edx
  00067	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	48 f7 f1	 div	 rcx
  00073	48 8b 4d 68	 mov	 rcx, QWORD PTR _Old$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00081	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00085	48 8d 4d 00	 lea	 rcx, QWORD PTR _Masked$[rbp]
  00089	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4737 :     }

  00091	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 0
_Storage_max$ = 8
$T1 = 80
$T2 = 88
$T3 = 96
this$ = 128
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 4141 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4142 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0002a	48 8b c8	 mov	 rcx, rax
  0002d	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
  00032	48 89 45 00	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 4143 :         const size_type _Storage_max = // can always store small string

  00036	48 c7 45 50 08
	00 00 00	 mov	 QWORD PTR $T1[rbp], 8
  0003e	48 8d 55 50	 lea	 rdx, QWORD PTR $T1[rbp]
  00042	48 8d 4d 00	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00046	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 45 08	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 4144 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 4145 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00056	48 ff c8	 dec	 rax
  00059	48 89 45 58	 mov	 QWORD PTR $T2[rbp], rax
  0005d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00062	48 89 45 60	 mov	 QWORD PTR $T3[rbp], rax
  00066	48 8d 55 58	 lea	 rdx, QWORD PTR $T2[rbp]
  0006a	48 8d 4d 60	 lea	 rcx, QWORD PTR $T3[rbp]
  0006e	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 4146 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 4147 :         );
; 4148 :     }

  00076	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 80
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT

; 4119 :     _NODISCARD _CONSTEXPR20 _Ret_z_ const _Elem* c_str() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4120 :         return _Mypair._Myval2._Myptr();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 4121 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S4$ = 8
_To_delete$ = 16
this$ = 112
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3128 :     _CONSTEXPR20 ~basic_string() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3129 :         _Tidy_deallocate();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 3130 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3131 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S4$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S4$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 3132 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00044	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 45 10	 mov	 QWORD PTR _To_delete$[rbp], rax

; 3133 :         _Mypair._Myval2._Myproxy = nullptr;

  0004f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3134 :         _Delete_plain_internal(_Alproxy, _To_delete);

  0005a	48 8b 55 10	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00062	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3135 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3136 :     }

  00067	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b c8	 mov	 rcx, rax
  0006e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Ptr$ = 96
_Size$ = 104
?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes, COMDAT

; 2591 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2592 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2593 :         // but likely more impactful to throughput.
; 2594 : #if _HAS_CXX20
; 2595 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 35		 je	 SHORT $LN5@Start_elem

; 2596 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {

  0002c	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00034	eb 0b		 jmp	 SHORT $LN4@Start_elem
$LN2@Start_elem:
  00036	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Start_elem:
  00041	48 8b 45 68	 mov	 rax, QWORD PTR _Size$[rbp]
  00045	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00049	73 16		 jae	 SHORT $LN3@Start_elem

; 2597 :                 _STD construct_at(_Ptr + _Idx);

  0004b	48 8b 45 60	 mov	 rax, QWORD PTR _Ptr$[rbp]
  0004f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00053	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z ; std::construct_at<wchar_t,0>

; 2598 :             }

  0005f	eb d5		 jmp	 SHORT $LN2@Start_elem
$LN3@Start_elem:
$LN5@Start_elem:

; 2599 :         }
; 2600 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2601 :         (void) _Ptr;
; 2602 :         (void) _Size;
; 2603 : #endif // _HAS_CXX20
; 2604 :     }

  00061	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 83 c0 08	 add	 rax, 8
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 96
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00020	48 8b 7d 60	 mov	 rdi, QWORD PTR this$[rbp]
  00024	33 c0		 xor	 eax, eax
  00026	b9 10 00 00 00	 mov	 ecx, 16
  0002b	f3 aa		 rep stosb
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00035	5f		 pop	 rdi
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Idx$1 = 0
this$ = 96
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer, COMDAT

; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 2d		 je	 SHORT $LN5@Activate_S

; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {

  00027	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  0002f	eb 0b		 jmp	 SHORT $LN4@Activate_S
$LN2@Activate_S:
  00031	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00035	48 ff c0	 inc	 rax
  00038	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Activate_S:
  0003c	48 83 7d 00 08	 cmp	 QWORD PTR _Idx$1[rbp], 8
  00041	73 11		 jae	 SHORT $LN5@Activate_S

; 2251 :                 _Bx._Buf[_Idx] = value_type();

  00043	33 c0		 xor	 eax, eax
  00045	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00049	48 8b 55 00	 mov	 rdx, QWORD PTR _Idx$1[rbp]
  0004d	66 89 44 51 08	 mov	 WORD PTR [rcx+rdx*2+8], ax

; 2252 :             }

  00052	eb dd		 jmp	 SHORT $LN2@Activate_S
$LN5@Activate_S:

; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }

  00054	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 64
this$ = 96
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT

; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2243 :         return _BUF_SIZE <= _Myres;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 20 08	 cmp	 QWORD PTR [rax+32], 8
  00024	72 09		 jb	 SHORT $LN3@Large_stri
  00026	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv66[rbp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  0002f	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  00036	0f b6 45 40	 movzx	 eax, BYTE PTR tv66[rbp]

; 2244 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2234 :         const value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2235 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2236 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2237 :         }
; 2238 : 
; 2239 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2240 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2225 :         value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2226 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2227 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2228 :         }
; 2229 : 
; 2230 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2231 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty

; 2214 : 
; 2215 :     // length of internal buffer, [1, 16]:
; 2216 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2217 :     // roundup mask for allocated buffers, [0, 15]:
; 2218 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2219 :                                            : sizeof(value_type) <= 2 ? 7
; 2220 :                                            : sizeof(value_type) <= 4 ? 3
; 2221 :                                            : sizeof(value_type) <= 8 ? 1
; 2222 :                                                                      : 0;
; 2223 : 
; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2225 :         value_type* _Result = _Bx._Buf;
; 2226 :         if (_Large_string_engaged()) {
; 2227 :             _Result = _Unfancy(_Bx._Ptr);
; 2228 :         }
; 2229 : 
; 2230 :         return _Result;
; 2231 :     }
; 2232 : 
; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2234 :         const value_type* _Result = _Bx._Buf;
; 2235 :         if (_Large_string_engaged()) {
; 2236 :             _Result = _Unfancy(_Bx._Ptr);
; 2237 :         }
; 2238 : 
; 2239 :         return _Result;
; 2240 :     }
; 2241 : 
; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2243 :         return _BUF_SIZE <= _Myres;
; 2244 :     }
; 2245 : 
; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {
; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {
; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2251 :                 _Bx._Buf[_Idx] = value_type();
; 2252 :             }
; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }
; 2256 : 
; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {
; 2260 :             _Xran();
; 2261 :         }
; 2262 :     }
; 2263 : 
; 2264 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2265 :         // checks whether _Off is in the bounds of [0, size())
; 2266 :         if (_Mysize <= _Off) {
; 2267 :             _Xran();
; 2268 :         }
; 2269 :     }
; 2270 : 
; 2271 :     [[noreturn]] static void _Xran() {
; 2272 :         _Xout_of_range("invalid string position");
; 2273 :     }
; 2274 : 
; 2275 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2276 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2277 :         return (_STD min)(_Size, _Mysize - _Off);
; 2278 :     }
; 2279 : 
; 2280 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2281 :         // This constructor previously initialized _Ptr. Don't rely on the new behavior without
; 2282 :         // renaming `_String_val` (and fixing the visualizer).
; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers
; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2285 : 
; 2286 :         value_type _Buf[_BUF_SIZE];
; 2287 :         pointer _Ptr;
; 2288 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2289 :     };
; 2290 :     _Bxty _Bx;
; 2291 : 
; 2292 :     size_type _Mysize = 0; // current length of string

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2293 :     size_type _Myres  = 0; // current storage reserved for string

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

  0004c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$01@std@@YA_K_K@Z ; std::_Get_size_of_n<2>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 d1 e0	 shl	 rax, 1
  000b1	48 8b d0	 mov	 rdx, rax
  000b4	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b8	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bd	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4878 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4879 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4880 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4874 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4875 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4876 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
_Ptr$1 = 8
_Al$2 = 16
$T3 = 88
this$ = 112
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4846 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4847 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4848 :         _My_data._Orphan_all();

  00026	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4849 :         if (_My_data._Large_string_engaged()) {

  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 4d		 je	 SHORT $LN2@Tidy_deall

; 4850 :             _ASAN_STRING_REMOVE(*this);
; 4851 :             const pointer _Ptr = _My_data._Bx._Ptr;

  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4852 :             auto& _Al          = _Getal();

  0004b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	48 89 45 10	 mov	 QWORD PTR _Al$2[rbp], rax

; 4853 :             _Destroy_in_place(_My_data._Bx._Ptr);

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 83 c0 08	 add	 rax, 8
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4854 :             _My_data._Activate_SSO_buffer();

  00068	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer

; 4855 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00071	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00075	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00079	48 ff c0	 inc	 rax
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  00083	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$2[rbp]
  00087	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4856 :         }
; 4857 : 
; 4858 :         _My_data._Mysize = 0;

  0008c	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00090	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4859 :         _My_data._Myres  = _BUF_SIZE - 1;

  00098	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009c	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4860 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4861 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000a4	c6 45 58 00	 mov	 BYTE PTR $T3[rbp], 0
  000a8	b8 01 00 00 00	 mov	 eax, 1
  000ad	48 6b c0 00	 imul	 rax, rax, 0
  000b1	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000b5	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000ba	48 8d 55 58	 lea	 rdx, QWORD PTR $T3[rbp]
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000c6	90		 npad	 1

; 4862 :     }

  000c7	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000cb	5d		 pop	 rbp
  000cc	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
$T1 = 72
this$ = 96
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4835 :     _CONSTEXPR20 void _Tidy_init() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4836 :         // initialize basic_string data members
; 4837 :         auto& _My_data   = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4838 :         _My_data._Mysize = 0;

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4839 :         _My_data._Myres  = _BUF_SIZE - 1;

  0002f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00033	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4840 :         _My_data._Activate_SSO_buffer();

  0003b	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer

; 4841 : 
; 4842 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4843 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	c6 45 48 00	 mov	 BYTE PTR $T1[rbp], 0
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	48 6b c0 00	 imul	 rax, rax, 0
  00051	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00055	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  0005a	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4844 :     }

  00066	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 64
tv74 = 72
this$ = 96
_Requested$ = 104
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4739 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4740 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00029	48 89 45 40	 mov	 QWORD PTR tv76[rbp], rax
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00035	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  00039	4c 8b 45 40	 mov	 r8, QWORD PTR tv76[rbp]
  0003d	48 8b 55 48	 mov	 rdx, QWORD PTR tv74[rbp]
  00041	48 8b 4d 68	 mov	 rcx, QWORD PTR _Requested$[rbp]
  00045	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4741 :     }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 0
$T1 = 72
_Requested$ = 96
_Old$ = 104
_Max$ = 112
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4726 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4727 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _Requested$[rbp]
  00029	48 83 c8 0f	 or	 rax, 15
  0002d	48 89 45 00	 mov	 QWORD PTR _Masked$[rbp], rax

; 4728 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00035	48 39 45 00	 cmp	 QWORD PTR _Masked$[rbp], rax
  00039	76 06		 jbe	 SHORT $LN2@Calculate_

; 4729 :             return _Max;

  0003b	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  0003f	eb 50		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4730 :         }
; 4731 : 
; 4732 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00041	33 d2		 xor	 edx, edx
  00043	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  00047	b9 02 00 00 00	 mov	 ecx, 2
  0004c	48 f7 f1	 div	 rcx
  0004f	48 8b 4d 70	 mov	 rcx, QWORD PTR _Max$[rbp]
  00053	48 2b c8	 sub	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 39 45 68	 cmp	 QWORD PTR _Old$[rbp], rax
  0005d	76 06		 jbe	 SHORT $LN3@Calculate_

; 4733 :             return _Max;

  0005f	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00063	eb 2c		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4734 :         }
; 4735 : 
; 4736 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00065	33 d2		 xor	 edx, edx
  00067	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	48 f7 f1	 div	 rcx
  00073	48 8b 4d 68	 mov	 rcx, QWORD PTR _Old$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00081	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00085	48 8d 4d 00	 lea	 rcx, QWORD PTR _Masked$[rbp]
  00089	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4737 :     }

  00091	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
_TEXT	SEGMENT
tv83 = 64
tv81 = 72
tv79 = 80
this$ = 112
_Ptr$ = 120
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal, COMDAT

; 4601 :     _CONSTEXPR20 bool _Equal(_In_z_ const _Elem* const _Ptr) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4602 :         // compare [0, size()) with _Ptr for equality
; 4603 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00023	48 8b 4d 78	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00027	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002c	48 89 45 40	 mov	 QWORD PTR tv83[rbp], rax
  00030	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00038	48 89 45 48	 mov	 QWORD PTR tv81[rbp], rax
  0003c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b c8	 mov	 rcx, rax
  00043	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00048	48 89 45 50	 mov	 QWORD PTR tv79[rbp], rax
  0004c	4c 8b 4d 40	 mov	 r9, QWORD PTR tv83[rbp]
  00050	4c 8b 45 78	 mov	 r8, QWORD PTR _Ptr$[rbp]
  00054	48 8b 55 48	 mov	 rdx, QWORD PTR tv81[rbp]
  00058	48 8b 4d 50	 mov	 rcx, QWORD PTR tv79[rbp]
  0005c	e8 00 00 00 00	 call	 ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >

; 4604 :     }

  00061	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 0
_Storage_max$ = 8
$T1 = 80
$T2 = 88
$T3 = 96
this$ = 128
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 4141 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4142 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002a	48 8b c8	 mov	 rcx, rax
  0002d	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00032	48 89 45 00	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 4143 :         const size_type _Storage_max = // can always store small string

  00036	48 c7 45 50 10
	00 00 00	 mov	 QWORD PTR $T1[rbp], 16
  0003e	48 8d 55 50	 lea	 rdx, QWORD PTR $T1[rbp]
  00042	48 8d 4d 00	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00046	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 45 08	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 4144 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 4145 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00056	48 ff c8	 dec	 rax
  00059	48 89 45 58	 mov	 QWORD PTR $T2[rbp], rax
  0005d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00062	48 89 45 60	 mov	 QWORD PTR $T3[rbp], rax
  00066	48 8d 55 58	 lea	 rdx, QWORD PTR $T2[rbp]
  0006a	48 8d 4d 60	 lea	 rcx, QWORD PTR $T3[rbp]
  0006e	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 4146 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 4147 :         );
; 4148 :     }

  00076	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv89 = 64
tv87 = 72
this$ = 96
__$ReturnUdt$ = 104
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT

; 3937 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3938 :         return iterator(

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0002c	48 89 45 40	 mov	 QWORD PTR tv89[rbp], rax
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ; std::_Refancy<char *,0>
  00044	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00048	48 03 41 18	 add	 rax, QWORD PTR [rcx+24]
  0004c	48 89 45 48	 mov	 QWORD PTR tv87[rbp], rax
  00050	4c 8b 45 40	 mov	 r8, QWORD PTR tv89[rbp]
  00054	48 8b 55 48	 mov	 rdx, QWORD PTR tv87[rbp]
  00058	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0005c	e8 00 00 00 00	 call	 ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
  00061	48 8b 45 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3939 :             _Refancy<pointer>(_Mypair._Myval2._Myptr()) + static_cast<difference_type>(_Mypair._Myval2._Mysize),
; 3940 :             _STD addressof(_Mypair._Myval2));
; 3941 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv85 = 64
tv83 = 72
this$ = 96
__$ReturnUdt$ = 104
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT

; 3929 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3930 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0002c	48 89 45 40	 mov	 QWORD PTR tv85[rbp], rax
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ; std::_Refancy<char *,0>
  00044	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00048	4c 8b 45 40	 mov	 r8, QWORD PTR tv85[rbp]
  0004c	48 8b 55 48	 mov	 rdx, QWORD PTR tv83[rbp]
  00050	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00054	e8 00 00 00 00	 call	 ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
  00059	48 8b 45 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3931 :     }

  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3406 :     _CONSTEXPR20 basic_string& assign(_In_z_ const _Elem* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3407 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00024	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  00031	4c 8b c0	 mov	 r8, rax
  00034	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00038	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3408 :     }

  00041	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 0
$T2 = 72
$T3 = 73
this$ = 96
_Ptr$ = 104
_Count$ = 112
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 3386 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3387 :         // assign [_Ptr, _Ptr + _Count)
; 3388 :         if (_Count <= _Mypair._Myval2._Myres) {

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0002d	48 39 45 70	 cmp	 QWORD PTR _Count$[rbp], rax
  00031	77 51		 ja	 SHORT $LN2@assign

; 3389 :             _ASAN_STRING_MODIFY(*this, _Mypair._Myval2._Mysize, _Count);
; 3390 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00033	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003f	48 89 45 00	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 3391 :             _Mypair._Myval2._Mysize = _Count;

  00043	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 4d 70	 mov	 rcx, QWORD PTR _Count$[rbp]
  0004b	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3392 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  0004f	4c 8b 45 70	 mov	 r8, QWORD PTR _Count$[rbp]
  00053	48 8b 55 68	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00057	48 8b 4d 00	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  0005b	e8 00 00 00 00	 call	 ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3393 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00060	c6 45 48 00	 mov	 BYTE PTR $T2[rbp], 0
  00064	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  00068	48 8b 4d 00	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  0006c	48 03 c8	 add	 rcx, rax
  0006f	48 8b c1	 mov	 rax, rcx
  00072	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3394 :             return *this;

  0007e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00082	eb 16		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 3395 :         }
; 3396 : 
; 3397 :         return _Reallocate_for(

  00084	4c 8b 4d 68	 mov	 r9, QWORD PTR _Ptr$[rbp]
  00088	44 0f b6 45 49	 movzx	 r8d, BYTE PTR $T3[rbp]
  0008d	48 8b 55 70	 mov	 rdx, QWORD PTR _Count$[rbp]
  00091	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00095	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
$LN1@assign:

; 3398 :             _Count,
; 3399 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3400 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3401 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3402 :             },
; 3403 :             _Ptr);
; 3404 :     }

  0009a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0009e	5d		 pop	 rbp
  0009f	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 3215 :     _CONSTEXPR20 basic_string& operator=(_In_z_ const _Elem* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3216 :         return assign(_Ptr);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3217 :     }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
_Al$ = 0
_Right_al$ = 8
tv87 = 80
tv85 = 88
this$ = 112
_Right$ = 120
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 3165 :     _CONSTEXPR20 basic_string& operator=(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3166 :         if (this == _STD addressof(_Right)) {

  00023	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  0002c	48 39 45 70	 cmp	 QWORD PTR this$[rbp], rax
  00030	75 06		 jne	 SHORT $LN2@operator

; 3167 :             return *this;

  00032	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00036	eb 58		 jmp	 SHORT $LN1@operator
$LN2@operator:

; 3168 :         }
; 3169 : 
; 3170 :         auto& _Al             = _Getal();

  00038	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00041	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 3171 :         const auto& _Right_al = _Right._Getal();

  00045	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004e	48 89 45 08	 mov	 QWORD PTR _Right_al$[rbp], rax

; 3172 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 3173 :             if (_Al != _Right_al) {
; 3174 :                 auto&& _Alproxy       = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 3175 :                 auto&& _Right_alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Right_al);
; 3176 :                 _Container_proxy_ptr<_Alty> _New_proxy(_Right_alproxy, _Leave_proxy_unbound{}); // throws
; 3177 : 
; 3178 :                 if (_Right._Mypair._Myval2._Large_string_engaged()) {
; 3179 :                     const auto _New_size     = _Right._Mypair._Myval2._Mysize;
; 3180 :                     auto _New_capacity       = _Calculate_growth(_New_size, 0, _Right.max_size());
; 3181 :                     auto _Right_al_non_const = _Right_al;
; 3182 :                     ++_New_capacity;
; 3183 :                     const auto _New_ptr = _Allocate_at_least_helper(_Right_al_non_const, _New_capacity); // throws
; 3184 :                     --_New_capacity;
; 3185 : 
; 3186 :                     _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 3187 : 
; 3188 :                     _Traits::copy(_Unfancy(_New_ptr), _Unfancy(_Right._Mypair._Myval2._Bx._Ptr), _New_size + 1);
; 3189 :                     _Tidy_deallocate();
; 3190 :                     _Mypair._Myval2._Bx._Ptr = _New_ptr;
; 3191 :                     _Mypair._Myval2._Mysize  = _New_size;
; 3192 :                     _Mypair._Myval2._Myres   = _New_capacity;
; 3193 :                 } else {
; 3194 :                     _Copy_assign_val_from_small(_Right);
; 3195 :                 }
; 3196 : 
; 3197 :                 _Pocca(_Al, _Right_al);
; 3198 :                 _New_proxy._Bind(_Alproxy, _STD addressof(_Mypair._Myval2));
; 3199 :                 return *this;
; 3200 :             }
; 3201 :         }
; 3202 : 
; 3203 :         _Pocca(_Al, _Right_al);

  00052	48 8b 55 08	 mov	 rdx, QWORD PTR _Right_al$[rbp]
  00056	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >

; 3204 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0005f	48 8b 45 78	 mov	 rax, QWORD PTR _Right$[rbp]
  00063	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00067	48 89 45 50	 mov	 QWORD PTR tv87[rbp], rax
  0006b	48 8b 45 78	 mov	 rax, QWORD PTR _Right$[rbp]
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00077	48 89 45 58	 mov	 QWORD PTR tv85[rbp], rax
  0007b	4c 8b 45 50	 mov	 r8, QWORD PTR tv87[rbp]
  0007f	48 8b 55 58	 mov	 rdx, QWORD PTR tv85[rbp]
  00083	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00087	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 3205 :         return *this;

  0008c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
$LN1@operator:

; 3206 :     }

  00090	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00094	5d		 pop	 rbp
  00095	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S5$ = 8
_To_delete$ = 16
this$ = 112
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3128 :     _CONSTEXPR20 ~basic_string() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3129 :         _Tidy_deallocate();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3130 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3131 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S5$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S5$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 3132 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00044	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 45 10	 mov	 QWORD PTR _To_delete$[rbp], rax

; 3133 :         _Mypair._Myval2._Myproxy = nullptr;

  0004f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3134 :         _Delete_plain_internal(_Alproxy, _To_delete);

  0005a	48 8b 55 10	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00062	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3135 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3136 :     }

  00067	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b c8	 mov	 rcx, rax
  0006e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Ptr$ = 96
_Size$ = 104
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes, COMDAT

; 2591 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2592 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2593 :         // but likely more impactful to throughput.
; 2594 : #if _HAS_CXX20
; 2595 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 37		 je	 SHORT $LN5@Start_elem

; 2596 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {

  0002c	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00034	eb 0b		 jmp	 SHORT $LN4@Start_elem
$LN2@Start_elem:
  00036	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Start_elem:
  00041	48 8b 45 68	 mov	 rax, QWORD PTR _Size$[rbp]
  00045	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00049	73 18		 jae	 SHORT $LN3@Start_elem

; 2597 :                 _STD construct_at(_Ptr + _Idx);

  0004b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0004f	48 8b 4d 60	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00053	48 03 c8	 add	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ; std::construct_at<char,0>

; 2598 :             }

  00061	eb d3		 jmp	 SHORT $LN2@Start_elem
$LN3@Start_elem:
$LN5@Start_elem:

; 2599 :         }
; 2600 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2601 :         (void) _Ptr;
; 2602 :         (void) _Size;
; 2603 : #endif // _HAS_CXX20
; 2604 :     }

  00063	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2538 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00028	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  0002c	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00030	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00035	90		 npad	 1

; 2539 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0003a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	48 8b 55 68	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0004e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
  00057	90		 npad	 1

; 2540 :     }

  00058	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
$T3 = 66
tv94 = 72
tv78 = 72
tv92 = 80
tv76 = 80
this$ = 112
_Right$ = 120
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2490 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 48	 mov	 QWORD PTR tv78[rbp], rax
  0002b	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  0002f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0003b	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00040	48 89 45 50	 mov	 QWORD PTR tv76[rbp], rax
  00044	0f b6 45 41	 movzx	 eax, BYTE PTR $T2[rbp]
  00048	88 45 42	 mov	 BYTE PTR $T3[rbp], al
  0004b	4c 8b 45 50	 mov	 r8, QWORD PTR tv76[rbp]
  0004f	0f b6 55 42	 movzx	 edx, BYTE PTR $T3[rbp]
  00053	48 8b 4d 48	 mov	 rcx, QWORD PTR tv78[rbp]
  00057	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  0005c	90		 npad	 1

; 2491 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0005d	48 8b 45 78	 mov	 rax, QWORD PTR _Right$[rbp]
  00061	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00065	48 89 45 48	 mov	 QWORD PTR tv94[rbp], rax
  00069	48 8b 45 78	 mov	 rax, QWORD PTR _Right$[rbp]
  0006d	48 8b c8	 mov	 rcx, rax
  00070	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00075	48 89 45 50	 mov	 QWORD PTR tv92[rbp], rax
  00079	4c 8b 45 48	 mov	 r8, QWORD PTR tv94[rbp]
  0007d	48 8b 55 50	 mov	 rdx, QWORD PTR tv92[rbp]
  00081	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00085	e8 00 00 00 00	 call	 ??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<2,char const *>
  0008a	90		 npad	 1

; 2492 :     }

  0008b	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0008f	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 65
$T3 = 66
tv94 = 72
tv78 = 72
tv92 = 80
tv76 = 80
this$ = 112
_Right$ = 120
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv86 = 72
tv69 = 72
this$ = 96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2479 :     basic_string() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>

; 2480 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv86[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv86[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2481 :         _Tidy_init();

  00059	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2482 :     }

  00062	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00066	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 83 c0 08	 add	 rax, 8
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 96
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00020	48 8b 7d 60	 mov	 rdi, QWORD PTR this$[rbp]
  00024	33 c0		 xor	 eax, eax
  00026	b9 10 00 00 00	 mov	 ecx, 16
  0002b	f3 aa		 rep stosb
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00035	5f		 pop	 rdi
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Idx$1 = 0
this$ = 96
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer, COMDAT

; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 30		 je	 SHORT $LN5@Activate_S

; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {

  00027	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  0002f	eb 0b		 jmp	 SHORT $LN4@Activate_S
$LN2@Activate_S:
  00031	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00035	48 ff c0	 inc	 rax
  00038	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Activate_S:
  0003c	48 83 7d 00 10	 cmp	 QWORD PTR _Idx$1[rbp], 16
  00041	73 14		 jae	 SHORT $LN5@Activate_S

; 2251 :                 _Bx._Buf[_Idx] = value_type();

  00043	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00047	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 2252 :             }

  00055	eb da		 jmp	 SHORT $LN2@Activate_S
$LN5@Activate_S:

; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }

  00057	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 64
this$ = 96
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2243 :         return _BUF_SIZE <= _Myres;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00024	72 09		 jb	 SHORT $LN3@Large_stri
  00026	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv66[rbp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  0002f	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  00036	0f b6 45 40	 movzx	 eax, BYTE PTR tv66[rbp]

; 2244 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2234 :         const value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2235 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2236 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2237 :         }
; 2238 : 
; 2239 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2240 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2225 :         value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2226 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2227 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2228 :         }
; 2229 : 
; 2230 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2231 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2214 : 
; 2215 :     // length of internal buffer, [1, 16]:
; 2216 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2217 :     // roundup mask for allocated buffers, [0, 15]:
; 2218 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2219 :                                            : sizeof(value_type) <= 2 ? 7
; 2220 :                                            : sizeof(value_type) <= 4 ? 3
; 2221 :                                            : sizeof(value_type) <= 8 ? 1
; 2222 :                                                                      : 0;
; 2223 : 
; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2225 :         value_type* _Result = _Bx._Buf;
; 2226 :         if (_Large_string_engaged()) {
; 2227 :             _Result = _Unfancy(_Bx._Ptr);
; 2228 :         }
; 2229 : 
; 2230 :         return _Result;
; 2231 :     }
; 2232 : 
; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2234 :         const value_type* _Result = _Bx._Buf;
; 2235 :         if (_Large_string_engaged()) {
; 2236 :             _Result = _Unfancy(_Bx._Ptr);
; 2237 :         }
; 2238 : 
; 2239 :         return _Result;
; 2240 :     }
; 2241 : 
; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2243 :         return _BUF_SIZE <= _Myres;
; 2244 :     }
; 2245 : 
; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {
; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {
; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2251 :                 _Bx._Buf[_Idx] = value_type();
; 2252 :             }
; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }
; 2256 : 
; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {
; 2260 :             _Xran();
; 2261 :         }
; 2262 :     }
; 2263 : 
; 2264 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2265 :         // checks whether _Off is in the bounds of [0, size())
; 2266 :         if (_Mysize <= _Off) {
; 2267 :             _Xran();
; 2268 :         }
; 2269 :     }
; 2270 : 
; 2271 :     [[noreturn]] static void _Xran() {
; 2272 :         _Xout_of_range("invalid string position");
; 2273 :     }
; 2274 : 
; 2275 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2276 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2277 :         return (_STD min)(_Size, _Mysize - _Off);
; 2278 :     }
; 2279 : 
; 2280 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2281 :         // This constructor previously initialized _Ptr. Don't rely on the new behavior without
; 2282 :         // renaming `_String_val` (and fixing the visualizer).
; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers
; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2285 : 
; 2286 :         value_type _Buf[_BUF_SIZE];
; 2287 :         pointer _Ptr;
; 2288 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2289 :     };
; 2290 :     _Bxty _Bx;
; 2291 : 
; 2292 :     size_type _Mysize = 0; // current length of string

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2293 :     size_type _Myres  = 0; // current storage reserved for string

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

  0004c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
_Al$ = 88
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 740  :     _NODISCARD static _CONSTEXPR20 _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 741  :         return _Al;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 742  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 738  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 55 60	 mov	 rdx, QWORD PTR _Count$[rbp]
  000ae	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000b7	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2310 : [[noreturn]] inline void _Xlen_string() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2311 :     _Xlength_error("string too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen_strin:

; 2312 : }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 439  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 440  : #if _HAS_CXX20
; 441  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@assign

; 442  :             return _Primary_char_traits::assign(_Left, _Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00034	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Char_traits<char,int>::assign
  00039	eb 0d		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 443  :         }
; 444  : #endif // _HAS_CXX20
; 445  :         _Left = _Right;

  0003b	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  0003f	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00046	88 08		 mov	 BYTE PTR [rax], cl
$LN1@assign:

; 446  :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 64
tv69 = 72
_First$ = 96
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 386  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         // find length of null-terminated string
; 388  : #if _HAS_CXX17
; 389  : #ifdef __cpp_char8_t
; 390  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 391  : #if _HAS_U8_INTRINSICS
; 392  :             return __builtin_u8strlen(_First);
; 393  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 394  :             return _Primary_char_traits::length(_First);
; 395  : #endif // _HAS_U8_INTRINSICS
; 396  :         } else
; 397  : #endif // __cpp_char8_t
; 398  :         {
; 399  :             return __builtin_strlen(_First);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  0001f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00023	48 c7 45 48 ff
	ff ff ff	 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  0002b	48 ff 45 48	 inc	 QWORD PTR tv69[rbp]
  0002f	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]
  00033	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00037	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  0003b	75 ee		 jne	 SHORT $LL3@length
  0003d	48 8b 45 48	 mov	 rax, QWORD PTR tv69[rbp]

; 400  :         }
; 401  : #else // _HAS_CXX17
; 402  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 403  : #endif // _HAS_CXX17
; 404  :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 80
_First2$ = 88
_Count$ = 96
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 377  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 378  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 379  : #if _HAS_CXX17
; 380  :         return __builtin_memcmp(_First1, _First2, _Count);

  00025	4c 8b 45 60	 mov	 r8, QWORD PTR _Count$[rbp]
  00029	48 8b 55 58	 mov	 rdx, QWORD PTR _First2$[rbp]
  0002d	48 8b 4d 50	 mov	 rcx, QWORD PTR _First1$[rbp]
  00031	e8 00 00 00 00	 call	 memcmp

; 381  : #else // _HAS_CXX17
; 382  :         return _CSTD memcmp(_First1, _First2, _Count);
; 383  : #endif // _HAS_CXX17
; 384  :     }

  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z PROC	; std::_Char_traits<char,int>::assign, COMDAT

; 181  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 182  : #if _HAS_CXX20
; 183  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@assign

; 184  :             _STD construct_at(_STD addressof(_Left), _Right);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPEADAEAD@Z ; std::addressof<char>
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ; std::construct_at<char,char const &,0>

; 185  :         } else

  00041	eb 0d		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 186  : #endif // _HAS_CXX20
; 187  :         {
; 188  :             _Left = _Right;

  00043	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0004e	88 08		 mov	 BYTE PTR [rax], cl
$LN3@assign:

; 189  :         }
; 190  :     }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ENDP	; std::_Char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_Loop_forward$1 = 0
_Src$2 = 8
_Idx$3 = 16
_Idx$4 = 24
_First1$ = 112
_First2$ = 120
_Count$ = 128
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN16:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #if _HAS_CXX20
; 86   :         if (_STD is_constant_evaluated()) {

  00028	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	0f 84 db 00 00
	00		 je	 $LN11@move

; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 94   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 95   :             bool _Loop_forward = true;

  00038	c6 45 00 01	 mov	 BYTE PTR _Loop_forward$1[rbp], 1

; 96   : 
; 97   :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {

  0003c	48 8b 45 78	 mov	 rax, QWORD PTR _First2$[rbp]
  00040	48 89 45 08	 mov	 QWORD PTR _Src$2[rbp], rax
  00044	eb 0b		 jmp	 SHORT $LN4@move
$LN2@move:
  00046	48 8b 45 08	 mov	 rax, QWORD PTR _Src$2[rbp]
  0004a	48 ff c0	 inc	 rax
  0004d	48 89 45 08	 mov	 QWORD PTR _Src$2[rbp], rax
$LN4@move:
  00051	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00058	48 8b 4d 78	 mov	 rcx, QWORD PTR _First2$[rbp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 39 45 08	 cmp	 QWORD PTR _Src$2[rbp], rax
  00066	74 12		 je	 SHORT $LN3@move

; 98   :                 if (_First1 == _Src) {

  00068	48 8b 45 08	 mov	 rax, QWORD PTR _Src$2[rbp]
  0006c	48 39 45 70	 cmp	 QWORD PTR _First1$[rbp], rax
  00070	75 06		 jne	 SHORT $LN12@move

; 99   :                     _Loop_forward = false;

  00072	c6 45 00 00	 mov	 BYTE PTR _Loop_forward$1[rbp], 0

; 100  :                     break;

  00076	eb 02		 jmp	 SHORT $LN3@move
$LN12@move:

; 101  :                 }
; 102  :             }

  00078	eb cc		 jmp	 SHORT $LN2@move
$LN3@move:

; 103  : 
; 104  :             if (_Loop_forward) {

  0007a	0f b6 45 00	 movzx	 eax, BYTE PTR _Loop_forward$1[rbp]
  0007e	85 c0		 test	 eax, eax
  00080	74 47		 je	 SHORT $LN13@move

; 105  :                 for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00082	48 c7 45 10 00
	00 00 00	 mov	 QWORD PTR _Idx$3[rbp], 0
  0008a	eb 0b		 jmp	 SHORT $LN7@move
$LN5@move:
  0008c	48 8b 45 10	 mov	 rax, QWORD PTR _Idx$3[rbp]
  00090	48 ff c0	 inc	 rax
  00093	48 89 45 10	 mov	 QWORD PTR _Idx$3[rbp], rax
$LN7@move:
  00097	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0009e	48 39 45 10	 cmp	 QWORD PTR _Idx$3[rbp], rax
  000a2	74 23		 je	 SHORT $LN6@move

; 106  :                     _First1[_Idx] = _First2[_Idx];

  000a4	48 8b 45 10	 mov	 rax, QWORD PTR _Idx$3[rbp]
  000a8	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  000ac	48 03 c8	 add	 rcx, rax
  000af	48 8b c1	 mov	 rax, rcx
  000b2	48 8b 4d 10	 mov	 rcx, QWORD PTR _Idx$3[rbp]
  000b6	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  000ba	48 03 d1	 add	 rdx, rcx
  000bd	48 8b ca	 mov	 rcx, rdx
  000c0	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  000c3	88 08		 mov	 BYTE PTR [rax], cl

; 107  :                 }

  000c5	eb c5		 jmp	 SHORT $LN5@move
$LN6@move:

; 108  :             } else {

  000c7	eb 44		 jmp	 SHORT $LN14@move
$LN13@move:

; 109  :                 for (size_t _Idx = _Count; _Idx != 0; --_Idx) {

  000c9	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  000d0	48 89 45 18	 mov	 QWORD PTR _Idx$4[rbp], rax
  000d4	eb 0b		 jmp	 SHORT $LN10@move
$LN8@move:
  000d6	48 8b 45 18	 mov	 rax, QWORD PTR _Idx$4[rbp]
  000da	48 ff c8	 dec	 rax
  000dd	48 89 45 18	 mov	 QWORD PTR _Idx$4[rbp], rax
$LN10@move:
  000e1	48 83 7d 18 00	 cmp	 QWORD PTR _Idx$4[rbp], 0
  000e6	74 25		 je	 SHORT $LN14@move

; 110  :                     _First1[_Idx - 1] = _First2[_Idx - 1];

  000e8	48 8b 45 18	 mov	 rax, QWORD PTR _Idx$4[rbp]
  000ec	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  000f0	48 03 c8	 add	 rcx, rax
  000f3	48 8b c1	 mov	 rax, rcx
  000f6	48 8b 4d 18	 mov	 rcx, QWORD PTR _Idx$4[rbp]
  000fa	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  000fe	48 03 d1	 add	 rdx, rcx
  00101	48 8b ca	 mov	 rcx, rdx
  00104	0f b6 49 ff	 movzx	 ecx, BYTE PTR [rcx-1]
  00108	88 48 ff	 mov	 BYTE PTR [rax-1], cl

; 111  :                 }

  0010b	eb c9		 jmp	 SHORT $LN8@move
$LN14@move:

; 112  :             }
; 113  : 
; 114  :             return _First1;

  0010d	48 8b 45 70	 mov	 rax, QWORD PTR _First1$[rbp]
  00111	eb 18		 jmp	 SHORT $LN1@move
$LN11@move:

; 115  :         }
; 116  : #endif // _HAS_CXX20
; 117  : 
; 118  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00113	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  0011a	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  0011e	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  00122	e8 00 00 00 00	 call	 memmove

; 119  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 120  : 
; 121  :         return _First1;

  00127	48 8b 45 70	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@move:

; 122  :     }

  0012b	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0012f	5d		 pop	 rbp
  00130	c3		 ret	 0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_First1$ = 96
_First2$ = 104
_Count$ = 112
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #if _HAS_CXX20
; 55   :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 48		 je	 SHORT $LN5@copy

; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap
; 57   :             for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00031	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00039	eb 0b		 jmp	 SHORT $LN4@copy
$LN2@copy:
  0003b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003f	48 ff c0	 inc	 rax
  00042	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@copy:
  00046	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  0004a	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  0004e	74 23		 je	 SHORT $LN3@copy

; 58   :                 _First1[_Idx] = _First2[_Idx];

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00058	48 03 c8	 add	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00062	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00066	48 03 d1	 add	 rdx, rcx
  00069	48 8b ca	 mov	 rcx, rdx
  0006c	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0006f	88 08		 mov	 BYTE PTR [rax], cl

; 59   :             }

  00071	eb c8		 jmp	 SHORT $LN2@copy
$LN3@copy:

; 60   : 
; 61   :             return _First1;

  00073	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
  00077	eb 15		 jmp	 SHORT $LN1@copy
$LN5@copy:

; 62   :         }
; 63   : #endif // _HAS_CXX20
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00079	4c 8b 45 70	 mov	 r8, QWORD PTR _Count$[rbp]
  0007d	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00081	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00085	e8 00 00 00 00	 call	 memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

  0008a	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@copy:

; 69   :     }

  0008e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT

; 295  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 296  : #if _HAS_CXX20
; 297  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@assign

; 298  :             return _Primary_char_traits::assign(_Left, _Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00034	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z ; std::_Char_traits<wchar_t,unsigned short>::assign
  00039	eb 0e		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 299  :         }
; 300  : #endif // _HAS_CXX20
; 301  :         _Left = _Right;

  0003b	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  0003f	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00046	66 89 08	 mov	 WORD PTR [rax], cx
$LN1@assign:

; 302  :     }

  00049	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z PROC	; std::_Char_traits<wchar_t,unsigned short>::assign, COMDAT

; 181  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 182  : #if _HAS_CXX20
; 183  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@assign

; 184  :             _STD construct_at(_STD addressof(_Left), _Right);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@_W@std@@YAPEA_WAEA_W@Z ; std::addressof<wchar_t>
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ; std::construct_at<wchar_t,wchar_t const &,0>

; 185  :         } else

  00041	eb 0e		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 186  : #endif // _HAS_CXX20
; 187  :         {
; 188  :             _Left = _Right;

  00043	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0004e	66 89 08	 mov	 WORD PTR [rax], cx
$LN3@assign:

; 189  :         }
; 190  :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z ENDP	; std::_Char_traits<wchar_t,unsigned short>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>

; 252  :     } else

  00041	eb 2a		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00061	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00064	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     _Container_proxy* _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1448 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1449 :         _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1450 :     }

  00026	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT

; 1362 :     void _Orphan_me_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1363 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1364 :         _Orphan_me_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1365 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$ = 0
this$ = 96
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT

; 1346 :     _CONSTEXPR20 void _Orphan_me_unlocked_v3() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1347 :         if (!_Myproxy) { // already orphaned

  0001e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN10@Orphan_me_

; 1348 :             return;

  00028	e9 ce 00 00 00	 jmp	 $LN1@Orphan_me_
$LN10@Orphan_me_:

; 1349 :         }
; 1350 : 
; 1351 :         // adopted, remove self from list
; 1352 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_me_:

; 1353 :         while (*_Pnext && *_Pnext != this) {

  0003c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00040	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00044	74 1e		 je	 SHORT $LN6@Orphan_me_
  00046	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0004a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00051	74 11		 je	 SHORT $LN6@Orphan_me_

; 1354 :             _Pnext = &(*_Pnext)->_Mynextiter;

  00053	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00057	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 1355 :         }

  00062	eb d8		 jmp	 SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1356 : 
; 1357 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00064	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00068	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006c	74 02		 je	 SHORT $LN9@Orphan_me_
  0006e	eb 6b		 jmp	 SHORT $LN12@Orphan_me_
$LN9@Orphan_me_:
  00070	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00077	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0007c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00083	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00088	45 33 c9	 xor	 r9d, r9d
  0008b	41 b8 4d 05 00
	00		 mov	 r8d, 1357		; 0000054dH
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00098	b9 02 00 00 00	 mov	 ecx, 2
  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a3	83 f8 01	 cmp	 eax, 1
  000a6	75 03		 jne	 SHORT $LN14@Orphan_me_
  000a8	cc		 int	 3
  000a9	33 c0		 xor	 eax, eax
$LN14@Orphan_me_:
  000ab	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b4	41 b9 4d 05 00
	00		 mov	 r9d, 1357		; 0000054dH
  000ba	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d5	33 c0		 xor	 eax, eax
  000d7	85 c0		 test	 eax, eax
  000d9	75 95		 jne	 SHORT $LN9@Orphan_me_
$LN12@Orphan_me_:
  000db	33 c0		 xor	 eax, eax
  000dd	85 c0		 test	 eax, eax
  000df	75 83		 jne	 SHORT $LN6@Orphan_me_

; 1358 :         *_Pnext  = _Mynextiter;

  000e1	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000e5	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  000e9	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000ed	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1359 :         _Myproxy = nullptr;

  000f0	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  000f4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN1@Orphan_me_:

; 1360 :     }

  000fb	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000ff	5d		 pop	 rbp
  00100	c3		 ret	 0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT

; 1341 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1342 :         _Lockit _Lock(_LOCK_DEBUG);

  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1343 :         _Adopt_unlocked(_Parent);

  0002f	48 8b 55 68	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00033	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00037	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1344 :     }

  0003c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00046	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT

; 1324 :     _CONSTEXPR20 void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1325 :         if (!_Parent) {

  00020	48 83 7d 68 00	 cmp	 QWORD PTR _Parent$[rbp], 0
  00025	75 0b		 jne	 SHORT $LN2@Adopt_unlo

; 1326 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1327 :             return;

  00030	eb 52		 jmp	 SHORT $LN1@Adopt_unlo
$LN2@Adopt_unlo:

; 1328 :         }
; 1329 : 
; 1330 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00032	48 8b 45 68	 mov	 rax, QWORD PTR _Parent$[rbp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 45 00	 mov	 QWORD PTR _Parent_proxy$[rbp], rax

; 1331 :         if (_Myproxy != _Parent_proxy) { // change parentage

  0003d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00041	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00045	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00048	74 3a		 je	 SHORT $LN1@Adopt_unlo

; 1332 :             if (_Myproxy) { // adopted, remove self from list

  0004a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00052	74 09		 je	 SHORT $LN4@Adopt_unlo

; 1333 :                 _Orphan_me_unlocked_v3();

  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1334 :             }
; 1335 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  0005d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00065	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00069	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1336 :             _Parent_proxy->_Myfirstiter = this;

  0006d	48 8b 45 00	 mov	 rax, QWORD PTR _Parent_proxy$[rbp]
  00071	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00075	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1337 :             _Myproxy                    = _Parent_proxy;

  00079	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00081	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@Adopt_unlo:

; 1338 :         }
; 1339 :     }

  00084	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 64
this$ = 96
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 10		 je	 SHORT $LN3@Getcont
  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00033	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00035	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR tv68[rbp], 0
$LN4@Getcont:
  0003d	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]

; 1298 :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
this$ = 80
_Parent$ = 88
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@Adopt

; 1279 :             _Adopt_unlocked(_Parent);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1280 :         } else

  00039	eb 0d		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);

  0003b	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  0003f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
$LN3@Adopt:

; 1284 :         }
; 1285 :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Iterator_b

; 1268 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1269 :         } else

  00030	eb 09		 jmp	 SHORT $LN3@Iterator_b
$LN2@Iterator_b:

; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
$LN3@Iterator_b:

; 1273 :         }
; 1274 :     }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1243 : 
; 1244 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1245 :         *this = _Right;
; 1246 :     }
; 1247 : 
; 1248 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1249 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1250 : #if _HAS_CXX20
; 1251 :         if (_STD is_constant_evaluated()) {
; 1252 :             _Assign_unlocked(_Right);
; 1253 :         } else
; 1254 : #endif // _HAS_CXX20
; 1255 :         {
; 1256 :             _Assign_locked(_Right);
; 1257 :         }
; 1258 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1259 :         _Myproxy = _Right._Myproxy;
; 1260 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1261 :         return *this;
; 1262 :     }
; 1263 : 
; 1264 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {
; 1268 :             _Orphan_me_unlocked_v3();
; 1269 :         } else
; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();
; 1273 :         }
; 1274 :     }
; 1275 : 
; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {
; 1279 :             _Adopt_unlocked(_Parent);
; 1280 :         } else
; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);
; 1284 :         }
; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1288 :         if (_Parent) { // have a parent, do adoption
; 1289 :             _Myproxy = _Parent->_Myproxy;
; 1290 :         } else { // no future parent, just disown current parent
; 1291 :             _Myproxy = nullptr;
; 1292 :         }
; 1293 :     }
; 1294 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1295 : 
; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1298 :     }
; 1299 : 
; 1300 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1301 : 
; 1302 :     mutable _Container_proxy* _Myproxy    = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1303 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1229 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1230 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1231 :         _Orphan_all_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1232 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
$T2 = 72
this$ = 96
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1369 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1370 :     if (!_Myproxy) { // no proxy, already done

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	75 02		 jne	 SHORT $LN5@Orphan_all

; 1371 :         return;

  00025	eb 45		 jmp	 SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1372 :     }
; 1373 : 
; 1374 :     // proxy allocated, drain it
; 1375 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

  00027	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR $T2[rbp], 0
  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
  00046	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
  0004a	eb 0c		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
$LN4@Orphan_all:
  00058	48 83 7d 00 00	 cmp	 QWORD PTR _Pnext$1[rbp], 0
  0005d	74 0d		 je	 SHORT $LN1@Orphan_all

; 1376 :         _Pnext->_Myproxy = nullptr;

  0005f	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00063	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1377 :     }

  0006a	eb e0		 jmp	 SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 1378 : }

  0006c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1380 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1381 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1382 : #if _HAS_CXX20
; 1383 :     if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Orphan_all

; 1384 :         _Orphan_all_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1385 :     } else

  00030	eb 09		 jmp	 SHORT $LN3@Orphan_all
$LN2@Orphan_all:

; 1386 : #endif // _HAS_CXX20
; 1387 :     {
; 1388 :         _Orphan_all_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN3@Orphan_all:

; 1389 :     }
; 1390 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1391 : }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1199 : 
; 1200 :     _Container_base12(const _Container_base12&)            = delete;
; 1201 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1202 : 
; 1203 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1204 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1205 : 
; 1206 :     template <class _Alloc>
; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1209 :         _Construct_in_place(*_New_proxy, this);
; 1210 :         _Myproxy            = _New_proxy;
; 1211 :         _New_proxy->_Mycont = this;
; 1212 :     }
; 1213 : 
; 1214 :     template <class _Alloc>
; 1215 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1216 :         // pre: no iterators refer to the existing proxy
; 1217 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1218 :         _Construct_in_place(*_New_proxy, this);
; 1219 :         _New_proxy->_Mycont = this;
; 1220 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1221 :     }
; 1222 : 
; 1223 :     _Container_proxy* _Myproxy = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Mycont_$ = 88
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1191 : 
; 1192 :     const _Container_base12* _Mycont       = nullptr;
; 1193 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 0
_Ptr_container$ = 8
_Min_back_shift$ = 16
_Back_shift$ = 24
_Ptr$ = 112
_Bytes$ = 120
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 154  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 156  :     _Bytes += _Non_user_size;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00027	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002a	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002e	48 8b 4d 78	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 157  : 
; 158  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

  00035	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 00	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 159  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00040	b8 08 00 00 00	 mov	 eax, 8
  00045	48 6b c0 ff	 imul	 rax, rax, -1
  00049	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0004d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00051	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 160  : 
; 161  :     // If the following asserts, it likely means that we are performing
; 162  :     // an aligned delete on memory coming from an unaligned allocation.
; 163  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00055	b8 08 00 00 00	 mov	 eax, 8
  0005a	48 6b c0 fe	 imul	 rax, rax, -2
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00062	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0006c	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00070	75 02		 jne	 SHORT $LN14@Adjust_man
  00072	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00074	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0007a	83 c0 09	 add	 eax, 9
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00084	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00090	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00095	45 33 c9	 xor	 r9d, r9d
  00098	44 8b c0	 mov	 r8d, eax
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  000a2	b9 02 00 00 00	 mov	 ecx, 2
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 03		 jne	 SHORT $LN19@Adjust_man
  000b2	cc		 int	 3
  000b3	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b5	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000bb	83 c0 09	 add	 eax, 9
  000be	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000c7	44 8b c8	 mov	 r9d, eax
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000eb	33 c0		 xor	 eax, eax
  000ed	85 c0		 test	 eax, eax
  000ef	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 164  : 
; 165  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 166  :     // in range [_Min_back_shift, _Non_user_size]
; 167  : #ifdef _DEBUG
; 168  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f5	48 c7 45 10 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 169  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 170  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 171  : #endif // _DEBUG
; 172  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00101	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00105	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00108	48 2b c1	 sub	 rax, rcx
  0010b	48 89 45 18	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 173  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010f	48 83 7d 18 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00114	72 09		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7d 18 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0011b	77 02		 ja	 SHORT $LN16@Adjust_man
  0011d	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  0011f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00125	83 c0 13	 add	 eax, 19
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  0012f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00134	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0013b	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00140	45 33 c9	 xor	 r9d, r9d
  00143	44 8b c0	 mov	 r8d, eax
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0014d	b9 02 00 00 00	 mov	 ecx, 2
  00152	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00158	83 f8 01	 cmp	 eax, 1
  0015b	75 03		 jne	 SHORT $LN20@Adjust_man
  0015d	cc		 int	 3
  0015e	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00160	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00166	83 c0 13	 add	 eax, 19
  00169	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00172	44 8b c8	 mov	 r9d, eax
  00175	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00183	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0018a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00190	33 c0		 xor	 eax, eax
  00192	85 c0		 test	 eax, eax
  00194	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  00196	33 c0		 xor	 eax, eax
  00198	85 c0		 test	 eax, eax
  0019a	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 174  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001a0	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  001a4	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001a8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 175  : }

  001ab	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  001af	5d		 pop	 rbp
  001b0	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 85   :         void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 86   :         return ::operator new(_Bytes);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 87   :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 64
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 330  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2DED1E19_exception
  00015	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 331  :     _THROW(bad_array_new_length{});

  0001a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0001e	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0002a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0002e	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 332  : }

  00033	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 140  :         : bad_alloc("bad array new length")

  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00022	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00026	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc

; 141  :     {

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 142  :     }

  00039	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 129  :         : exception(_Message, 1)

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception

; 130  :     {

  00033	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 131  :     }

  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 64
this$ = 96
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00024	74 0e		 je	 SHORT $LN3@what
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002e	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00032	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0003b	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR tv69[rbp]

; 96   :     }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 __std_exception_destroy

; 91   :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 96
_Other$ = 104
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00010	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         : _Data()

  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 8b f8	 mov	 rdi, rax
  0003a	33 c0		 xor	 eax, eax
  0003c	b9 10 00 00 00	 mov	 ecx, 16
  00041	f3 aa		 rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00043	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 8b 4d 68	 mov	 rcx, QWORD PTR _Other$[rbp]
  0004f	48 83 c1 08	 add	 rcx, 8
  00053	48 8b d0	 mov	 rdx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  0005b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 96
_Message$ = 104
__formal$ = 112
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00015	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00021	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00031	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         : _Data()

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 83 c0 08	 add	 rax, 8
  0003c	48 8b f8	 mov	 rdi, rax
  0003f	33 c0		 xor	 eax, eax
  00041	b9 10 00 00 00	 mov	 ecx, 16
  00046	f3 aa		 rep stosb

; 67   :         _Data._What = _Message;

  00048	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 4d 68	 mov	 rcx, QWORD PTR _Message$[rbp]
  00050	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 68   :     }

  00054	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 635  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__595ABB90_limits
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 636  :         return LLONG_MAX;

  00017	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 637  :     }

  00021	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 178  : _EXPORT_STD _NODISCARD constexpr bool is_constant_evaluated() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9A2CA802_xtr1common
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  :     return __builtin_is_constant_evaluated();

  00017	32 c0		 xor	 al, al

; 180  : }

  00019	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 80
_Where$ = 88
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__84C50014_vcruntime_new@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 169  :         (void)_Size;
; 170  :         return _Where;

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
__formal$ = 96
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Shader.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 80
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3E42A31D_D3D12Shader@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
