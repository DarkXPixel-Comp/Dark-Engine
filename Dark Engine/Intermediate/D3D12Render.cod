; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33030.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskXY
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?g_XMLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLg10
PUBLIC	?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLg10
PUBLIC	?g_UByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UByteMax
PUBLIC	?g_ByteMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMin
PUBLIC	?g_ByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMax
PUBLIC	?g_ShortMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMin
PUBLIC	?g_ShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMax
PUBLIC	?g_UShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UShortMax
PUBLIC	__pobjectentryfirst
PUBLIC	__pobjectentrymid
PUBLIC	__pobjectentrylast
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?D3D12_DEFAULT@@3UCD3DX12_DEFAULT@@B		; D3D12_DEFAULT
PUBLIC	IID_IXAudio2Extension
PUBLIC	IID_IXAudio2
msvcjmc	SEGMENT
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__4A250794_concurrencysal@h DB 01H
__64794009_sal@h DB 01H
__A3E7195B_vadefs@h DB 01H
__978626E5_vcruntime@h DB 01H
__73193115_excpt@h DB 01H
__EF35C9F2_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__1B0272D9_corecrt@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__61CC25A1_errno@h DB 01H
__4CB5F942_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__659C5902_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__E15BF856_windows@h DB 01H
__C868A340_OCIdl@h DB 01H
__90AD1CBB_dxgicommon@h DB 01H
__DBA3F304_dxgiformat@h DB 01H
__4B98FDD9_d3dcommon@h DB 01H
__30CE95B1_d3d12sdklayers@h DB 01H
__AD50D478_d3d12@h DB 01H
__EBD162FD_dxgitype@h DB 01H
__F473F334_dxgi@h DB 01H
__3532CEB3_dxgi1_2@h DB 01H
__34F0A484_dxgi1_3@h DB 01H
__31BFB201_dxgi1_4@h DB 01H
__307DD836_dxgi1_5@h DB 01H
__323B666F_dxgi1_6@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__B9985323_float@h DB 01H
__51ADDFC3_intrin0@inl@h DB 01H
__4B899F3E_setjmp@h DB 01H
__A40231C8_mmintrin@h DB 01H
__FA77ED4C_malloc@h DB 01H
__17534AB1_xmmintrin@h DB 01H
__7231C37D_emmintrin@h DB 01H
__AD90ABF4_pmmintrin@h DB 01H
__1D49D876_tmmintrin@h DB 01H
__3472CDF5_smmintrin@h DB 01H
__51104439_nmmintrin@h DB 01H
__84ABBE77_wmmintrin@h DB 01H
__4F3FF370_zmmintrin@h DB 01H
__782B51BA_immintrin@h DB 01H
__C2E8B0FF_ammintrin@h DB 01H
__6DBF2349_intrin@h DB 01H
__19139D6C_assert@h DB 01H
__DBEA773D_stdint@h DB 01H
__85ADA900_DirectXMathConvert@inl DB 01H
__411BBCFA_DirectXMathVector@inl DB 01H
__4AFE615D_DirectXMathMatrix@inl DB 01H
__98B66FFE_DirectXMathMisc@inl DB 01H
__E6E853B5_DirectXMath@h DB 01H
__CAFE1B4D_d3d11shader@h DB 01H
__F3732788_d3d12shader@h DB 01H
__2CACEFC0_d3dcompiler@h DB 01H
__F2FF8333_hstring@h DB 01H
__4BAE0D45_inspectable@h DB 01H
__2E21A007_weakreference@h DB 01H
__ADF9C41F_activation@h DB 01H
__847F1726_roapi@h DB 01H
__0AE89165_def@h DB 01H
__84C50014_vcruntime_new@h DB 01H
__7A6EC116_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__087FBF63_internal@h DB 01H
__F7423081_client@h DB 01H
__12FD3F40_WinString@h DB 01H
__E5B2708F_crtdefs@h DB 01H
__6F9C91B0_new@h DB 01H
__247BB969_restrictedErrorInfo@h DB 01H
__05F5D399_roerrorapi@h DB 01H
__73CE9EEE_implements@h DB 01H
__94D81D1E_ftm@h DB 01H
__5611F633_intsafe@h DB 01H
__5DD10A16_corewrappers@h DB 01H
__B8B3BDBE_module@h DB 01H
__D6FCE5BE_eventtoken@h DB 01H
__3D51D5E6_event@h DB 01H
__0691033D_wrl@h DB 01H
__B629FA8A_d3dx12@h DB 01H
__DC39B1D9_D3D12@h DB 01H
__B51A3A23_Core@h DB 01H
__B9040E87_Renderer@h DB 01H
__ED560F7A_VertexTypes@h DB 01H
__735B63F8_xkeycheck@h DB 01H
__142C9C9C_yvals_core@h DB 01H
__BE829F50_climits DB 01H
__9A2CA802_xtr1common DB 01H
__FC9FC984_intrin0@h DB 01H
__F3EA4CCC___msvc_bit_utils@hpp DB 01H
__87335CDF_cstdint DB 01H
__3A6DBDA2_cstdlib DB 01H
__3FBCF6F4_cfloat DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4CF83D73_cstdio DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D673EB20_cwchar DB 01H
__595ABB90_limits DB 01H
__61229A4B_use_ansi@h DB 01H
__8C2D0B1D_yvals@h DB 01H
__9FA6670F_cstddef DB 01H
__3DF2A533_type_traits DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__35BB339F_eh@h DB 01H
__7280C444_vcruntime_exception@h DB 01H
__2DED1E19_exception DB 01H
__A5D71DBC_new DB 01H
__27E192CF_xatomic@h DB 01H
__50E371A7_initializer_list DB 01H
__339AE60A_concepts DB 01H
__C3788713_compare DB 01H
__0D603829_utility DB 01H
__874288EA___msvc_iter_core@hpp DB 01H
__76FF1542_cstring DB 01H
__B7320FC0_xutility DB 01H
__A0E057FF_tuple DB 01H
__67F55BEA_xmemory DB 01H
__A0A2F5C0_xpolymorphic_allocator@h DB 01H
__C671E263___msvc_sanitizer_annotate_container@hpp DB 01H
__14F7CB70_vector DB 01H
__FBEF5BAE_Array@h DB 01H
__59AEE840_cassert DB 01H
__95B36E16_iosfwd DB 01H
__1326DD76_xstring DB 01H
__A4A32444_stdexcept DB 01H
__EEE0DC84_DescriptorHeap@h DB 01H
__93AC6E75_vcruntime_typeinfo@h DB 01H
__C7EDFCD9_typeinfo DB 01H
__4F9CF3B8_xatomic_wait@h DB 01H
__0A9237D2_time@h DB 01H
__C070D2B6_ctime DB 01H
__01F6EC81_xtimec@h DB 01H
__006CADF8_xthreads@h DB 01H
__326FE752_atomic DB 01H
__E5F4B71E_memory DB 01H
__4333DAD4_cctype DB 01H
__91273182_string DB 01H
__9024636E_DarkString@h DB 01H
__92B9F28F_CommandLine@h DB 01H
__FCC6D126_Delegate@h DB 01H
__7671EFE0_WindowsWindow@h DB 01H
__4C7DEF31_D3D12Types@h DB 01H
__06C34EBE_cmath DB 01H
__52656974_list DB 01H
__B566F9C5_xbit_ops@h DB 01H
__1B8E3698_xnode_handle@h DB 01H
__696C8ED8_xhash DB 01H
__3DA11C4D_unordered_map DB 01H
__98E9BF8D_TUniquePtr@h DB 01H
__EAA52A7A_D3D12Camera@h DB 01H
__68B439B4_D3D12Texture@h DB 01H
__466C4D22_D3D12Utils@h DB 01H
__45275B9D_D3D12Resource@h DB 01H
__C6A116CD_D3D12Render@h DB 01H
__B9FFAD7A_UObject@h DB 01H
__349F89FE_ActorComponent@h DB 01H
__C0395B86_TList@h DB 01H
__1FF1BD98_D3D12Mesh@h DB 01H
__CF36E38C_D3D12Material@h DB 01H
__E9AE02A5_D3D12Model@h DB 01H
__6AE9EDAC_DarkMathUtility@h DB 01H
__7E164BFB_USceneComponent@h DB 01H
__4CA7DCC5_Mouse@h DB 01H
__BF4148EC_Keyboard@h DB 01H
__1B2D56BD_InputCore@h DB 01H
__1A51089F_Actor@h DB 01H
__C9CFF5D2_RotateComponent@h DB 01H
__59F10418_CameraActor@h DB 01H
__4C3DB073_D3D12Scene@h DB 01H
__46118574_World@h DB 01H
__4818932A_unordered_set DB 01H
__014E33A8_TMemory@h DB 01H
__C1566CF7_basetyps@h DB 01H
__9F144151_mmreg@h DB 01H
__25E01902_audiosessiontypes@h DB 01H
__E36B8921_xaudio2@h DB 01H
__F7972D0B_share@h DB 01H
__E9739B8C___msvc_system_error_abi@hpp DB 01H
__D1D94988_cerrno DB 01H
__57B442CC_xcall_once@h DB 01H
__24B81E12_xerrc@h DB 01H
__E8E950EC_system_error DB 01H
__C9B1E011_xfacet DB 01H
__24FAA3FC___msvc_xlocinfo_types@hpp DB 01H
__791C33B7_locale@h DB 01H
__A9C16173_clocale DB 01H
__D8641F11_xlocinfo DB 01H
__CC18A947_xlocale DB 01H
__E1816802_xiosbase DB 01H
__A6039CF8_streambuf DB 01H
__C0945C43___msvc_filebuf@hpp DB 01H
__A69EB880_iterator DB 01H
__529FCF50_xlocnum DB 01H
__5D1A27AA_ios DB 01H
__DF087383_ostream DB 01H
__BCD846B9_istream DB 01H
__4A903650_fstream DB 01H
__6A70D710_ratio DB 01H
__E71D1BFE___msvc_chrono@hpp DB 01H
__F491F32A_vcruntime_startup@h DB 01H
__005E73E1_corecrt_startup@h DB 01H
__8B12B2C4_process@h DB 01H
__57ED3434_stop_token DB 01H
__3EB9CFA8_thread DB 01H
__78DDDD40_mutex DB 01H
__CE362511_Logger@hpp DB 01H
__E48B5707_Audio@h DB 01H
__7FDD34FA_DEditor@h DB 01H
__0F108736_xfilesystem_abi@h DB 01H
__3E632381___msvc_tzdb@hpp DB 01H
__D30FB2B2_forward_list DB 01H
__4722581B_xsmf_control@h DB 01H
__DEE6A3C1_optional DB 01H
__7F768539_sstream DB 01H
__7C79B603_xloctime DB 01H
__B5ECD415___msvc_format_ucd_tables@hpp DB 01H
__8C7168E8___msvc_print@hpp DB 01H
__9971FA6E_bit DB 01H
__39D77923_xcharconv@h DB 01H
__486BF2EB_xcharconv_ryu_tables@h DB 01H
__9E967C73_xcharconv_ryu@h DB 01H
__8E5CDAAA_xcharconv_tables@h DB 01H
__A8BD61A6_charconv DB 01H
__CC57EFBC_xlocbuf DB 01H
__E0145E3B_xlocmes DB 01H
__79FDDA68_xlocmon DB 01H
__4E1945B3_locale DB 01H
__D123F1F4_format DB 01H
__401A80EB_iomanip DB 01H
__3DB7BD1A_chrono DB 01H
__D22613FB_DEngine@h DB 01H
__FABEF7B5_CoreDefines@h DB 01H
__72E31227_D3D12PSO@h DB 01H
__49A16877_GameTimer@h DB 01H
__F9EF3DD8_D3D12Render@cpp DB 01H
__7BF4187B_predefined C++ types (compiler internal) DB 01H
msvcjmc	ENDS
;	COMDAT IID_IXAudio2
CONST	SEGMENT
IID_IXAudio2 DD	02b02e3cfH
	DW	02e0bH
	DW	04ec3H
	DB	0beH
	DB	045H
	DB	01bH
	DB	02aH
	DB	03fH
	DB	0e7H
	DB	021H
	DB	0dH
CONST	ENDS
;	COMDAT IID_IXAudio2Extension
CONST	SEGMENT
IID_IXAudio2Extension DD 084ac29bbH
	DW	0d619H
	DW	044d2H
	DB	0b1H
	DB	097H
	DB	0e4H
	DB	0acH
	DB	0f7H
	DB	0dfH
	DB	03eH
	DB	0d6H
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __pobjectentrylast
minATL$__z	SEGMENT
__pobjectentrylast DQ 0000000000000000H
minATL$__z	ENDS
;	COMDAT __pobjectentrymid
minATL$__m	SEGMENT
__pobjectentrymid DQ 0000000000000000H
minATL$__m	ENDS
;	COMDAT __pobjectentryfirst
minATL$__a	SEGMENT
__pobjectentryfirst DQ 0000000000000000H
minATL$__a	ENDS
;	COMDAT ?g_UShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UShortMax@DirectX@@3UXMVECTORF32@1@B DD 0477fff00r ; 65535 ; DirectX::g_UShortMax
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
CONST	ENDS
;	COMDAT ?g_ShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMax@DirectX@@3UXMVECTORF32@1@B DD 046fffe00r ; 32767 ; DirectX::g_ShortMax
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
CONST	ENDS
;	COMDAT ?g_ShortMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMin@DirectX@@3UXMVECTORF32@1@B DD 0c6fffe00r ; -32767 ; DirectX::g_ShortMin
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
CONST	ENDS
;	COMDAT ?g_ByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMax@DirectX@@3UXMVECTORF32@1@B DD 042fe0000r ; 127 ; DirectX::g_ByteMax
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
CONST	ENDS
;	COMDAT ?g_ByteMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMin@DirectX@@3UXMVECTORF32@1@B DD 0c2fe0000r ; -127 ; DirectX::g_ByteMin
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
CONST	ENDS
;	COMDAT ?g_UByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UByteMax@DirectX@@3UXMVECTORF32@1@B DD 0437f0000r ; 255 ; DirectX::g_UByteMax
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
CONST	ENDS
;	COMDAT ?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B DD 03e9a209br ; 0.30103 ; DirectX::g_XMInvLg10
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
CONST	ENDS
;	COMDAT ?g_XMLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLg10@DirectX@@3UXMVECTORF32@1@B DD 040549a78r ; 3.32193 ; DirectX::g_XMLg10
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976562
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskXY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z	; operator&
PUBLIC	fabsf
PUBLIC	?XMConvertToRadians@DirectX@@YAMM@Z		; DirectX::XMConvertToRadians
PUBLIC	??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORF32::operator __m128
PUBLIC	??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORI32::operator __m128
PUBLIC	??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORU32::operator __m128
PUBLIC	??0XMFLOAT2@DirectX@@QEAA@MM@Z			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT3@DirectX@@QEAA@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT4@DirectX@@QEAA@MMMM@Z		; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ; DirectX::XMLoadFloat3
PUBLIC	?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4
PUBLIC	?XMVectorZero@DirectX@@YQ?AT__m128@@XZ		; DirectX::XMVectorZero
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z	; DirectX::XMVectorSelect
PUBLIC	?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z	; DirectX::XMVectorNegate
PUBLIC	?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z	; DirectX::XMVector3Equal
PUBLIC	?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z	; DirectX::XMVector3IsInfinite
PUBLIC	?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVector3Dot
PUBLIC	?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVector3Cross
PUBLIC	?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z	; DirectX::XMVector3Normalize
PUBLIC	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ; DirectX::XMMatrixMultiply
PUBLIC	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
PUBLIC	?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z ; DirectX::XMMatrixLookToLH
PUBLIC	?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixPerspectiveFovLH
PUBLIC	?XMScalarNearEqual@DirectX@@YA_NMMM@Z		; DirectX::XMScalarNearEqual
PUBLIC	?XMScalarSinCos@DirectX@@YAXPEAM0M@Z		; DirectX::XMScalarSinCos
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z ; CD3DX12_HEAP_PROPERTIES::CD3DX12_HEAP_PROPERTIES
PUBLIC	?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z ; CD3DX12_RESOURCE_BARRIER::Transition
PUBLIC	??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z ; CD3DX12_CPU_DESCRIPTOR_HANDLE::CD3DX12_CPU_DESCRIPTOR_HANDLE
PUBLIC	??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z ; CD3DX12_RESOURCE_DESC::CD3DX12_RESOURCE_DESC
PUBLIC	?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z ; CD3DX12_RESOURCE_DESC::Buffer
PUBLIC	?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z ; CD3DX12_RESOURCE_DESC::Tex2D
PUBLIC	??0Renderer@@QEAA@XZ				; Renderer::Renderer
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	wmemcpy
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z	; std::_Fnv1a_append_bytes
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z	; std::_Char_traits<char,int>::assign
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0logic_error@std@@QEAA@PEBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UEAA@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QEAA@AEBV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UEAAPEAXI@Z		; std::logic_error::`scalar deleting destructor'
PUBLIC	??0out_of_range@std@@QEAA@PEBD@Z		; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UEAA@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QEAA@AEBV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UEAAPEAXI@Z		; std::out_of_range::`scalar deleting destructor'
PUBLIC	?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ ; DirectX::DescriptorHeap::GetFirstCpuHandle
PUBLIC	?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetGpuHandle
PUBLIC	?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
PUBLIC	?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ ; DirectX::DescriptorHeap::Heap
PUBLIC	?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::InternalRelease
PUBLIC	??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::~ComPtr<ID3D12DescriptorHeap>
PUBLIC	?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::Get
PUBLIC	??1DescriptorHeap@DirectX@@QEAA@XZ		; DirectX::DescriptorHeap::~DescriptorHeap
PUBLIC	??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z		; DirectX::DescriptorHeap::`scalar deleting destructor'
PUBLIC	??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>
PUBLIC	?GetWitdh@FWindowsWindow@@QEAAIXZ		; FWindowsWindow::GetWitdh
PUBLIC	?GetHeight@FWindowsWindow@@QEAAIXZ		; FWindowsWindow::GetHeight
PUBLIC	?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ	; FWindowsWindow::GetHandle
PUBLIC	?GetRefreshRate@FWindowsWindow@@QEAAIXZ		; FWindowsWindow::GetRefreshRate
PUBLIC	?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z ; FWindowsWindowManager::GetWindow
PUBLIC	?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
PUBLIC	??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?CalcConstantBufferByteSize@D3DUtil@@SAII@Z	; D3DUtil::CalcConstantBufferByteSize
PUBLIC	?InitPipelines@D3DUtil@@SAXXZ			; D3DUtil::InitPipelines
PUBLIC	?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z ; D3DUtil::GetPipeline
PUBLIC	?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z ; D3DUtil::GetViewProjMatrix
PUBLIC	??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()
PUBLIC	?_Do_hash@?$hash@I@std@@SA_KAEBI@Z		; std::hash<unsigned int>::_Do_hash
PUBLIC	??R?$equal_to@I@std@@QEBA_NAEBI0@Z		; std::equal_to<unsigned int>::operator()
PUBLIC	?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z ; std::list<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >::_Make_iter
PUBLIC	??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::find<void>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator->
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
PUBLIC	?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ ; std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >::get
PUBLIC	?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalAddRef
PUBLIC	?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
PUBLIC	??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
PUBLIC	??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
PUBLIC	?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
PUBLIC	??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
PUBLIC	??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
PUBLIC	??0D3D12Renderer@@QEAA@XZ			; D3D12Renderer::D3D12Renderer
PUBLIC	?Init@D3D12Renderer@@UEAAHXZ			; D3D12Renderer::Init
PUBLIC	?Shutdown@D3D12Renderer@@UEAAXXZ		; D3D12Renderer::Shutdown
PUBLIC	?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z ; D3D12Renderer::BeginFrame
PUBLIC	?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z	; D3D12Renderer::Render
PUBLIC	?RenderObj@D3D12Renderer@@QEAAXXZ		; D3D12Renderer::RenderObj
PUBLIC	?RenderScene@D3D12Renderer@@QEAAXXZ		; D3D12Renderer::RenderScene
PUBLIC	?EndFrame@D3D12Renderer@@UEAAXXZ		; D3D12Renderer::EndFrame
PUBLIC	?OnResize@D3D12Renderer@@QEAAXJJ@Z		; D3D12Renderer::OnResize
PUBLIC	?Update@D3D12Renderer@@QEAAXXZ			; D3D12Renderer::Update
PUBLIC	?Signal@D3D12Renderer@@AEAA_KAEA_K@Z		; D3D12Renderer::Signal
PUBLIC	?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z	; D3D12Renderer::WaitForFenceValue
PUBLIC	?WaitFrame@D3D12Renderer@@AEAAXXZ		; D3D12Renderer::WaitFrame
PUBLIC	?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::InternalRelease
PUBLIC	??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ComPtr<IDXGIFactory7>
PUBLIC	??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::~ComPtr<IDXGIFactory7>
PUBLIC	??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator->
PUBLIC	??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::ComPtr<ID3D12Device8>
PUBLIC	??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::~ComPtr<ID3D12Device8>
PUBLIC	?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get
PUBLIC	??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
PUBLIC	??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::InternalRelease
PUBLIC	??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ComPtr<IDXGIAdapter1>
PUBLIC	??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::~ComPtr<IDXGIAdapter1>
PUBLIC	??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ComPtr<ID3D12CommandAllocator>
PUBLIC	??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::~ComPtr<ID3D12CommandAllocator>
PUBLIC	?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::Get
PUBLIC	??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator->
PUBLIC	??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ReleaseAndGetAddressOf
PUBLIC	?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalAddRef
PUBLIC	?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
PUBLIC	??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
PUBLIC	??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>
PUBLIC	?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::Get
PUBLIC	??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
PUBLIC	??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ComPtr<ID3D12CommandQueue>
PUBLIC	??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::~ComPtr<ID3D12CommandQueue>
PUBLIC	?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::Get
PUBLIC	??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->
PUBLIC	??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ReleaseAndGetAddressOf
PUBLIC	??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z ; std::default_delete<DirectX::DescriptorHeap>::operator()
PUBLIC	??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >
PUBLIC	??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
PUBLIC	?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::release
PUBLIC	?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first
PUBLIC	?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::InternalRelease
PUBLIC	??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ComPtr<IDXGISwapChain4>
PUBLIC	??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::~ComPtr<IDXGISwapChain4>
PUBLIC	??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->
PUBLIC	??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
PUBLIC	??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
PUBLIC	??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
PUBLIC	??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::ComPtr<ID3D12Fence>
PUBLIC	?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::Get
PUBLIC	??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
PUBLIC	??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::ReleaseAndGetAddressOf
PUBLIC	??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >::operator()
PUBLIC	??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::~unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >
PUBLIC	??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator->
PUBLIC	?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::release
PUBLIC	?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first
PUBLIC	??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>
PUBLIC	??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator=<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
PUBLIC	?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<DirectX::XMMATRIX>::GetResource
PUBLIC	?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<D3D12MaterialConstants>::GetResource
PUBLIC	?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z ; std::allocator<D3D12Model *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z ; std::allocator<D3D12Model *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::select_on_container_copy_construction
PUBLIC	??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::vector<D3D12Model *,std::allocator<D3D12Model *> >
PUBLIC	??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_end
PUBLIC	?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::max_size
PUBLIC	?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Xlength
PUBLIC	?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<D3D12Model *> >::_Vector_val<std::_Simple_types<D3D12Model *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first
PUBLIC	?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ ; D3D12Scene::GetModels
PUBLIC	?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ	; D3D12Scene::GetCamera
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
PUBLIC	?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::max
PUBLIC	?max@?$duration_values@_J@chrono@std@@SA_JXZ	; std::chrono::duration_values<__int64>::max
PUBLIC	??$_Hash_representation@I@std@@YA_KAEBI@Z	; std::_Hash_representation<unsigned int>
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ ; DEngine::GetWindowManager
PUBLIC	?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ ; Microsoft::WRL::ComPtr<ID3D12PipelineState>::Get
PUBLIC	?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ ; Microsoft::WRL::ComPtr<ID3D12RootSignature>::Get
PUBLIC	?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z ; TransitionResource
PUBLIC	??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
PUBLIC	??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
PUBLIC	?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::ComPtr<ID3D12Debug>
PUBLIC	??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::~ComPtr<ID3D12Debug>
PUBLIC	??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator->
PUBLIC	??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::ReleaseAndGetAddressOf
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Debug> >
PUBLIC	??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ; TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIFactory7> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Device8> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::operator void * *
PUBLIC	??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IDXGISwapChain>::As<IDXGISwapChain4>
PUBLIC	??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>
PUBLIC	??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::operator void * *
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Fence> >
PUBLIC	??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z ; std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>
PUBLIC	??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource><ID3D12Resource>
PUBLIC	??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ ; std::allocator<D3D12PassConstants>::allocator<D3D12PassConstants>
PUBLIC	?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::deallocate
PUBLIC	?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::max_size
PUBLIC	??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
PUBLIC	??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::~vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
PUBLIC	?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::resize
PUBLIC	?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::max_size
PUBLIC	?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::capacity
PUBLIC	??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::operator[]
PUBLIC	?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Change_array
PUBLIC	?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Tidy
PUBLIC	?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
PUBLIC	?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<D3D12PassConstants> >::_Vector_val<std::_Simple_types<D3D12PassConstants> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first
PUBLIC	??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z ; D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>
PUBLIC	??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ ; D3D12UploadBufferResource<D3D12PassConstants>::~D3D12UploadBufferResource<D3D12PassConstants>
PUBLIC	?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z ; D3D12UploadBufferResource<D3D12PassConstants>::CopyData
PUBLIC	?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<D3D12PassConstants>::GetResource
PUBLIC	??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z ; D3D12UploadBufferResource<D3D12PassConstants>::`scalar deleting destructor'
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,0>
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12Model *>
PUBLIC	??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1><std::allocator<D3D12Model *> >
PUBLIC	??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>
PUBLIC	?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > *>::pointer_to
PUBLIC	??$_Convert_size@_K_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64,unsigned __int64>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
PUBLIC	??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12Model *> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z	; std::construct_at<char,char const &,0>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
PUBLIC	??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
PUBLIC	??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find<unsigned int>
PUBLIC	??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z	; std::_Fnv1a_append_value<unsigned int>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::deallocate
PUBLIC	?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::max_size
PUBLIC	?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::push_back
PUBLIC	?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::max_size
PUBLIC	?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::capacity
PUBLIC	?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
PUBLIC	??0?$IIContainer@XJJ@@QEAA@XZ			; IIContainer<void,long,long>::IIContainer<void,long,long>
PUBLIC	??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ; TMethodContainter<D3D12Renderer,void,long,long>::TMethodContainter<D3D12Renderer,void,long,long>
PUBLIC	?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z ; TMethodContainter<D3D12Renderer,void,long,long>::Call
PUBLIC	??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
PUBLIC	??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >::~_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >
PUBLIC	??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z ; std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_one_at_back<IIContainer<void,long,long> * const &>
PUBLIC	??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12PassConstants>
PUBLIC	??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,D3D12UploadBufferResource<D3D12PassConstants> * &>
PUBLIC	??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,std::nullptr_t>
PUBLIC	??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::DescriptorHeap *,DirectX::DescriptorHeap * &>
PUBLIC	??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::DescriptorHeap *,std::nullptr_t>
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > const >
PUBLIC	??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z	; std::construct_at<char,0>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<D3D12Model *> >
PUBLIC	??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find_last<unsigned int>
PUBLIC	??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><DirectX::DescriptorHeap * &>
PUBLIC	??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><D3D12UploadBufferResource<D3D12PassConstants> * &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ; std::ranges::_Unwrap_iter<D3D12Model * *,D3D12Model * *>
PUBLIC	??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ; std::ranges::_Unwrap_sent<D3D12Model * *,D3D12Model * *>
PUBLIC	??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
PUBLIC	??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z ; std::to_address<D3D12Model *>
PUBLIC	??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z ; std::_Unfancy<D3D12Model *>
PUBLIC	??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z ; std::_Copy_memmove<D3D12Model * *,D3D12Model * *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Uninitialized_backout_al<std::allocator<D3D12Model *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::~_Uninitialized_backout_al<std::allocator<D3D12Model *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Release
PUBLIC	??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Emplace_back<D3D12Model * &>
PUBLIC	??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_back_with_unused_capacity<IIContainer<void,long,long> * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1><>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z ; std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0>::_Kfn<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >
PUBLIC	??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
PUBLIC	??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::construct<D3D12Model *,D3D12Model * &>
PUBLIC	??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z ; std::_Construct_in_place<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z ; std::_Unfancy<IIContainer<void,long,long> *>
PUBLIC	??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>
PUBLIC	??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >
PUBLIC	??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z ; std::construct_at<D3D12Model *,D3D12Model * &,0>
PUBLIC	??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z ; std::addressof<IIContainer<void,long,long> *>
PUBLIC	??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &,0>
PUBLIC	??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_Get_unwrapped<IIContainer<void,long,long> * * const &>
PUBLIC	??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z ; std::_Copy_memmove<IIContainer<void,long,long> * *,IIContainer<void,long,long> * *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::~_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Release
PUBLIC	??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Emplace_back<IIContainer<void,long,long> *>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<D3D12PassConstants> >
PUBLIC	??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<>
PUBLIC	??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_To_address<IIContainer<void,long,long> * *>
PUBLIC	??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z ; std::to_address<IIContainer<void,long,long> *>
PUBLIC	??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> *>
PUBLIC	??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z ; std::_Get_unwrapped<D3D12PassConstants * const &>
PUBLIC	??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z ; std::_Unfancy<D3D12PassConstants>
PUBLIC	??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z ; std::_Copy_memmove<D3D12PassConstants *,D3D12PassConstants *>
PUBLIC	??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<D3D12PassConstants>
PUBLIC	??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants>
PUBLIC	??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z		; std::_Get_size_of_n<1012>
PUBLIC	??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> *,0>
PUBLIC	??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z ; std::_To_address<D3D12PassConstants *>
PUBLIC	??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ; std::to_address<D3D12PassConstants>
PUBLIC	??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants,D3D12PassConstants>
PUBLIC	??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ; std::construct_at<D3D12PassConstants,0>
PUBLIC	??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z ; std::construct_at<D3D12PassConstants,D3D12PassConstants,0>
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1KM@DJALCFKP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA ; `DirectX::XMLoadFloat3'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	?__LINE__Var@?0??XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@2@UXMMATRIX@2@@Z@4JA ; `DirectX::XMStoreFloat4x4'::`1'::__LINE__Var
PUBLIC	??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA ; `DirectX::XMMatrixLookToLH'::`1'::__LINE__Var
PUBLIC	??_C@_1FM@KOIPKFLA@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1EG@DOFHPLOD@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@ ; `string'
PUBLIC	??_C@_1FK@IBPGMKAB@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1EE@JAOFAOOK@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@ ; `string'
PUBLIC	??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA ; `DirectX::XMMatrixPerspectiveFovLH'::`1'::__LINE__Var
PUBLIC	??_C@_1GK@EFPMNDEN@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	??_C@_1GA@CLJELBLH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	??_C@_1KG@LKCFMLEG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPEAM0M@Z@4JA ; `DirectX::XMScalarSinCos'::`1'::__LINE__Var
PUBLIC	??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@		; `string'
PUBLIC	??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@		; `string'
PUBLIC	??_7Renderer@@6B@				; Renderer::`vftable'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@ ; `string'
PUBLIC	??_C@_1HC@EFHFIDCI@?$AAm?$AA_?$AAd?$AAe?$AAs?$AAc?$AA?4?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@ ; `string'
PUBLIC	_TI3?AVout_of_range@std@@
PUBLIC	_CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BN@LHAFBJPG@D3DX12_GPU_DESCRIPTOR_HANDLE@ ; `string'
PUBLIC	??_C@_0BN@OLKEIKPG@D3DX12_CPU_DESCRIPTOR_HANDLE@ ; `string'
PUBLIC	?BACK_BUFFER_COUNT@D3D12Renderer@@0IB		; D3D12Renderer::BACK_BUFFER_COUNT
PUBLIC	??_7D3D12Renderer@@6B@				; D3D12Renderer::`vftable'
PUBLIC	??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	_GUID_344488b7_6846_474b_b989_f027448245e0
PUBLIC	_GUID_a4966eed_76db_44da_84c1_ee9a7afb20a8
PUBLIC	_GUID_9218e6bb_f944_4f7e_a75c_b1b2c7b701f3
PUBLIC	_GUID_29038f61_3839_4626_91fd_086879011a05
PUBLIC	_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
PUBLIC	_GUID_696442be_a72e_4059_bc79_5b5c98040fad
PUBLIC	_GUID_6102dee4_af59_4b09_b999_b44d73f09b24
PUBLIC	_GUID_c3827890_e548_4cfa_96cf_5689a9370f80
PUBLIC	_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
PUBLIC	??_C@_0BB@LMDDHACE@Resources?1uv?4dds@		; `string'
PUBLIC	??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_0FN@EEGLACMD@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1LK@GCOFKPID@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ ; `string'
PUBLIC	??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_7?$IIContainer@XJJ@@6B@			; IIContainer<void,long,long>::`vftable'
PUBLIC	??_7?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@ ; TMethodContainter<D3D12Renderer,void,long,long>::`vftable'
PUBLIC	_GUID_3d585d5a_bd4a_489e_b1f4_3dbcb6452ffb
PUBLIC	??_R4Renderer@@6B@				; Renderer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderer@@@8				; Renderer `RTTI Type Descriptor'
PUBLIC	??_R3Renderer@@8				; Renderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Renderer@@8				; Renderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Renderer@@8			; Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$IIContainer@XJJ@@6B@			; IIContainer<void,long,long>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$IIContainer@XJJ@@@8			; IIContainer<void,long,long> `RTTI Type Descriptor'
PUBLIC	??_R3?$IIContainer@XJJ@@8			; IIContainer<void,long,long>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$IIContainer@XJJ@@8			; IIContainer<void,long,long>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$IIContainer@XJJ@@8		; IIContainer<void,long,long>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4D3D12Renderer@@6B@				; D3D12Renderer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVD3D12Renderer@@@8			; D3D12Renderer `RTTI Type Descriptor'
PUBLIC	??_R3D3D12Renderer@@8				; D3D12Renderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2D3D12Renderer@@8				; D3D12Renderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@D3D12Renderer@@8			; D3D12Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@ ; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@@8 ; TMethodContainter<D3D12Renderer,void,long,long> `RTTI Type Descriptor'
PUBLIC	??_R3?$TMethodContainter@VD3D12Renderer@@XJJ@@8	; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TMethodContainter@VD3D12Renderer@@XJJ@@8	; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TMethodContainter@VD3D12Renderer@@XJJ@@8 ; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3638b88e
PUBLIC	__real@3727c5ac
PUBLIC	__real@37a7c5ac
PUBLIC	__real@37cfb4c2
PUBLIC	__real@39500bf1
PUBLIC	__real@3ab609aa
PUBLIC	__real@3c088886
PUBLIC	__real@3c8efa35
PUBLIC	__real@3d2aaaa3
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e22f983
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fbd70a4
PUBLIC	__real@3fc90fdb
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40c90fdb
PUBLIC	__real@42c80000
PUBLIC	__real@43480000
PUBLIC	__real@b2cd365b
PUBLIC	__real@b48bdd11
PUBLIC	__real@bf800000
PUBLIC	__real@bfc90fdb
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YAXPEAX_K1P6AX0@Z2@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	strlen:PROC
EXTRN	__imp_WaitForSingleObject:PROC
EXTRN	__imp_CreateEventW:PROC
EXTRN	D3D12CreateDevice:PROC
EXTRN	D3D12GetDebugInterface:PROC
EXTRN	CreateDXGIFactory2:PROC
EXTRN	fabs:PROC
EXTRN	__imp_cosf:PROC
EXTRN	__imp_sinf:PROC
EXTRN	__imp__wassert:PROC
EXTRN	__imp__calloc_dbg:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	?SetVsync@Renderer@@UEAAXH@Z:PROC		; Renderer::SetVsync
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	??_Elogic_error@std@@UEAAPEAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UEAAPEAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	??0DescriptorHeap@DirectX@@QEAA@PEAUID3D12Device@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@_K@Z:PROC ; DirectX::DescriptorHeap::DescriptorHeap
EXTRN	?Shutdown@D3DUtil@@SAXXZ:PROC			; D3DUtil::Shutdown
EXTRN	?InitStaticSamples@D3DUtil@@SAXXZ:PROC		; D3DUtil::InitStaticSamples
EXTRN	?CreatePipeline@D3DUtil@@SAIW4eShaderType@@@Z:PROC ; D3DUtil::CreatePipeline
EXTRN	?GetDevice@D3DUtil@@SAPEAUID3D12Device8@@XZ:PROC ; D3DUtil::GetDevice
EXTRN	?LoadTexture@D3DUtil@@SAPEAVD3D12Texture@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; D3DUtil::LoadTexture
EXTRN	?FillConstantBuffer@D3D12Model@@QEAAXXZ:PROC	; D3D12Model::FillConstantBuffer
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	?DeltaTime@FGameTimer@@SAMXZ:PROC		; FGameTimer::DeltaTime
EXTRN	?TotalTime@FGameTimer@@SAMXZ:PROC		; FGameTimer::TotalTime
EXTRN	_CxxThrowException:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?Pipelines@D3DUtil@@0V?$unordered_map@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@U?$hash@I@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@A:BYTE ; D3DUtil::Pipelines
EXTRN	?GEngine@@3VDEngine@@A:BYTE			; GEngine
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fabsf DD	imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$fabsf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMConvertToRadians@DirectX@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?XMConvertToRadians@DirectX@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT2@DirectX@@QEAA@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0XMFLOAT2@DirectX@@QEAA@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT4@DirectX@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??0XMFLOAT4@DirectX@@QEAA@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+191
	DD	imagerel $unwind$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+218
	DD	imagerel $unwind$?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorZero@DirectX@@YQ?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?XMVectorZero@DirectX@@YQ?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z DD imagerel $LN7
	DD	imagerel $LN7+163
	DD	imagerel $unwind$?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z DD imagerel $LN5
	DD	imagerel $LN5+174
	DD	imagerel $unwind$?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+224
	DD	imagerel $unwind$?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+285
	DD	imagerel $unwind$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD imagerel $LN3
	DD	imagerel $LN3+479
	DD	imagerel $unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+2015
	DD	imagerel $unwind$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z DD imagerel $LN3
	DD	imagerel $LN3+439
	DD	imagerel $unwind$?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z DD imagerel $LN7
	DD	imagerel $LN7+794
	DD	imagerel $unwind$?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z DD imagerel $LN8
	DD	imagerel $LN8+790
	DD	imagerel $unwind$?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMScalarNearEqual@DirectX@@YA_NMMM@Z DD imagerel $LN5
	DD	imagerel $LN5+101
	DD	imagerel $unwind$?XMScalarNearEqual@DirectX@@YA_NMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMScalarSinCos@DirectX@@YAXPEAM0M@Z DD imagerel $LN11
	DD	imagerel $LN11+557
	DD	imagerel $unwind$?XMScalarSinCos@DirectX@@YAXPEAM0M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z DD imagerel $LN3
	DD	imagerel $LN3+186
	DD	imagerel $unwind$??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Renderer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??0Renderer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_constant_evaluated@std@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?is_constant_evaluated@std@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z DD imagerel $LN6
	DD	imagerel $LN6+136
	DD	imagerel $unwind$?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+433
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+257
	DD	imagerel $unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+148
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0logic_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??0logic_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1logic_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1logic_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0logic_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0logic_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Glogic_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Glogic_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0out_of_range@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??0out_of_range@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1out_of_range@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1out_of_range@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0out_of_range@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0out_of_range@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gout_of_range@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gout_of_range@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+232
	DD	imagerel $unwind$?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+183
	DD	imagerel $unwind$?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1DescriptorHeap@DirectX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1DescriptorHeap@DirectX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+72
	DD	imagerel $unwind$??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWitdh@FWindowsWindow@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?GetWitdh@FWindowsWindow@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHeight@FWindowsWindow@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?GetHeight@FWindowsWindow@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRefreshRate@FWindowsWindow@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?GetRefreshRate@FWindowsWindow@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+213
	DD	imagerel $unwind$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cos@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?cos@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sin@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?sin@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcConstantBufferByteSize@D3DUtil@@SAII@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?CalcConstantBufferByteSize@D3DUtil@@SAII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitPipelines@D3DUtil@@SAXXZ DD imagerel $LN6
	DD	imagerel $LN6+67
	DD	imagerel $unwind$?InitPipelines@D3DUtil@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z DD imagerel $LN4
	DD	imagerel $LN4+639
	DD	imagerel $unwind$?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Do_hash@?$hash@I@std@@SA_KAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Do_hash@?$hash@I@std@@SA_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$equal_to@I@std@@QEBA_NAEBI0@Z DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$??R?$equal_to@I@std@@QEBA_NAEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z DD imagerel $LN5
	DD	imagerel $LN5+137
	DD	imagerel $unwind$??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD imagerel $LN21
	DD	imagerel $LN21+320
	DD	imagerel $unwind$??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0D3D12Renderer@@QEAA@XZ DD imagerel $LN18
	DD	imagerel $LN18+461
	DD	imagerel $unwind$??0D3D12Renderer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA DD imagerel ?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@D3D12Renderer@@UEAAHXZ DD imagerel $LN22
	DD	imagerel $LN22+3872
	DD	imagerel $unwind$?Init@D3D12Renderer@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA DD imagerel ?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA
	DD	imagerel ?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Shutdown@D3D12Renderer@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?Shutdown@D3D12Renderer@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z DD imagerel $LN14
	DD	imagerel $LN14+1395
	DD	imagerel $unwind$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA DD imagerel ?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA
	DD	imagerel ?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z DD imagerel $LN13
	DD	imagerel $LN13+3594
	DD	imagerel $unwind$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA DD imagerel ?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderObj@D3D12Renderer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?RenderObj@D3D12Renderer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderScene@D3D12Renderer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?RenderScene@D3D12Renderer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndFrame@D3D12Renderer@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?EndFrame@D3D12Renderer@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OnResize@D3D12Renderer@@QEAAXJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?OnResize@D3D12Renderer@@QEAAXJJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@D3D12Renderer@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?Update@D3D12Renderer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Signal@D3D12Renderer@@AEAA_KAEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$?Signal@D3D12Renderer@@AEAA_KAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitFrame@D3D12Renderer@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+354
	DD	imagerel $unwind$?WaitFrame@D3D12Renderer@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+187
	DD	imagerel $unwind$??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN12
	DD	imagerel $LN12+438
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+131
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+183
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$duration_values@_J@chrono@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?max@?$duration_values@_J@chrono@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Hash_representation@I@std@@YA_KAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$_Hash_representation@I@std@@YA_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+341
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+341
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z DD imagerel $LN5
	DD	imagerel $LN5+181
	DD	imagerel $unwind$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA DD imagerel ?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
	DD	imagerel ?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA DD imagerel ?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
	DD	imagerel ?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DD imagerel $LN6
	DD	imagerel $LN6+141
	DD	imagerel $unwind$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA DD imagerel ?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA
	DD	imagerel ?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z DD imagerel $LN8
	DD	imagerel $LN8+177
	DD	imagerel $unwind$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z DD imagerel $LN8
	DD	imagerel $LN8+178
	DD	imagerel $unwind$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z DD imagerel $LN8
	DD	imagerel $LN8+148
	DD	imagerel $unwind$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+219
	DD	imagerel $unwind$??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+278
	DD	imagerel $unwind$?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+220
	DD	imagerel $unwind$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+162
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA+26
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z DD imagerel $LN7
	DD	imagerel $LN7+569
	DD	imagerel $unwind$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA DD imagerel ?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA DD imagerel ?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA+32
	DD	imagerel $unwind$?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+193
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z DD imagerel $LN6
	DD	imagerel $LN6+241
	DD	imagerel $unwind$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+528
	DD	imagerel $unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+98
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+86
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+260
	DD	imagerel $unwind$?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+162
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA+26
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$IIContainer@XJJ@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$IIContainer@XJJ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+307
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+266
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z DD imagerel $LN9
	DD	imagerel $LN9+357
	DD	imagerel $unwind$??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN13
	DD	imagerel $LN13+462
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+386
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z DD imagerel $LN5
	DD	imagerel $LN5+103
	DD	imagerel $unwind$??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+243
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+335
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+124
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+260
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@b48bdd11
CONST	SEGMENT
__real@b48bdd11 DD 0b48bdd11r			; -2.60516e-07
CONST	ENDS
;	COMDAT __real@b2cd365b
CONST	SEGMENT
__real@b2cd365b DD 0b2cd365br			; -2.38899e-08
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fbd70a4
CONST	SEGMENT
__real@3fbd70a4 DD 03fbd70a4r			; 1.48
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e22f983
CONST	SEGMENT
__real@3e22f983 DD 03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d2aaaa3
CONST	SEGMENT
__real@3d2aaaa3 DD 03d2aaaa3r			; 0.0416666
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3c088886
CONST	SEGMENT
__real@3c088886 DD 03c088886r			; 0.00833333
CONST	ENDS
;	COMDAT __real@3ab609aa
CONST	SEGMENT
__real@3ab609aa DD 03ab609aar			; 0.00138884
CONST	ENDS
;	COMDAT __real@39500bf1
CONST	SEGMENT
__real@39500bf1 DD 039500bf1r			; 0.000198409
CONST	ENDS
;	COMDAT __real@37cfb4c2
CONST	SEGMENT
__real@37cfb4c2 DD 037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT __real@37a7c5ac
CONST	SEGMENT
__real@37a7c5ac DD 037a7c5acr			; 2e-05
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@3638b88e
CONST	SEGMENT
__real@3638b88e DD 03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TMethodContainter@VD3D12Renderer@@XJJ@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TMethodContainter@VD3D12Renderer@@XJJ@@8 DD imagerel ??_R0?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@@8 ; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$TMethodContainter@VD3D12Renderer@@XJJ@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TMethodContainter@VD3D12Renderer@@XJJ@@8
rdata$r	SEGMENT
??_R2?$TMethodContainter@VD3D12Renderer@@XJJ@@8 DD imagerel ??_R1A@?0A@EA@?$TMethodContainter@VD3D12Renderer@@XJJ@@8 ; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$IIContainer@XJJ@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$TMethodContainter@VD3D12Renderer@@XJJ@@8
rdata$r	SEGMENT
??_R3?$TMethodContainter@VD3D12Renderer@@XJJ@@8 DD 00H	; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$TMethodContainter@VD3D12Renderer@@XJJ@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@@8
data$rs	SEGMENT
??_R0?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@@8 DQ FLAT:??_7type_info@@6B@ ; TMethodContainter<D3D12Renderer,void,long,long> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@
rdata$r	SEGMENT
??_R4?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@ DD 01H ; TMethodContainter<D3D12Renderer,void,long,long>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$TMethodContainter@VD3D12Renderer@@XJJ@@@8
	DD	imagerel ??_R3?$TMethodContainter@VD3D12Renderer@@XJJ@@8
	DD	imagerel ??_R4?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@D3D12Renderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@D3D12Renderer@@8 DD imagerel ??_R0?AVD3D12Renderer@@@8 ; D3D12Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3D3D12Renderer@@8
rdata$r	ENDS
;	COMDAT ??_R2D3D12Renderer@@8
rdata$r	SEGMENT
??_R2D3D12Renderer@@8 DD imagerel ??_R1A@?0A@EA@D3D12Renderer@@8 ; D3D12Renderer::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Renderer@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3D3D12Renderer@@8
rdata$r	SEGMENT
??_R3D3D12Renderer@@8 DD 00H				; D3D12Renderer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2D3D12Renderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVD3D12Renderer@@@8
data$rs	SEGMENT
??_R0?AVD3D12Renderer@@@8 DQ FLAT:??_7type_info@@6B@	; D3D12Renderer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVD3D12Renderer@@', 00H
data$rs	ENDS
;	COMDAT ??_R4D3D12Renderer@@6B@
rdata$r	SEGMENT
??_R4D3D12Renderer@@6B@ DD 01H				; D3D12Renderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVD3D12Renderer@@@8
	DD	imagerel ??_R3D3D12Renderer@@8
	DD	imagerel ??_R4D3D12Renderer@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$IIContainer@XJJ@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$IIContainer@XJJ@@8 DD imagerel ??_R0?AV?$IIContainer@XJJ@@@8 ; IIContainer<void,long,long>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$IIContainer@XJJ@@8
rdata$r	ENDS
;	COMDAT ??_R2?$IIContainer@XJJ@@8
rdata$r	SEGMENT
??_R2?$IIContainer@XJJ@@8 DD imagerel ??_R1A@?0A@EA@?$IIContainer@XJJ@@8 ; IIContainer<void,long,long>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$IIContainer@XJJ@@8
rdata$r	SEGMENT
??_R3?$IIContainer@XJJ@@8 DD 00H			; IIContainer<void,long,long>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$IIContainer@XJJ@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$IIContainer@XJJ@@@8
data$rs	SEGMENT
??_R0?AV?$IIContainer@XJJ@@@8 DQ FLAT:??_7type_info@@6B@ ; IIContainer<void,long,long> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$IIContainer@XJJ@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$IIContainer@XJJ@@6B@
rdata$r	SEGMENT
??_R4?$IIContainer@XJJ@@6B@ DD 01H			; IIContainer<void,long,long>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$IIContainer@XJJ@@@8
	DD	imagerel ??_R3?$IIContainer@XJJ@@8
	DD	imagerel ??_R4?$IIContainer@XJJ@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD imagerel ??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD imagerel ??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@logic_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 01H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVout_of_range@std@@@8
	DD	imagerel ??_R3out_of_range@std@@8
	DD	imagerel ??_R4out_of_range@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD imagerel ??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD imagerel ??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 01H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVlogic_error@std@@@8
	DD	imagerel ??_R3logic_error@std@@8
	DD	imagerel ??_R4logic_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Renderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Renderer@@8 DD imagerel ??_R0?AVRenderer@@@8 ; Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Renderer@@8
rdata$r	ENDS
;	COMDAT ??_R2Renderer@@8
rdata$r	SEGMENT
??_R2Renderer@@8 DD imagerel ??_R1A@?0A@EA@Renderer@@8	; Renderer::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Renderer@@8
rdata$r	SEGMENT
??_R3Renderer@@8 DD 00H					; Renderer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Renderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderer@@@8
data$rs	SEGMENT
??_R0?AVRenderer@@@8 DQ FLAT:??_7type_info@@6B@		; Renderer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRenderer@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Renderer@@6B@
rdata$r	SEGMENT
??_R4Renderer@@6B@ DD 01H				; Renderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVRenderer@@@8
	DD	imagerel ??_R3Renderer@@8
	DD	imagerel ??_R4Renderer@@6B@
rdata$r	ENDS
;	COMDAT _GUID_3d585d5a_bd4a_489e_b1f4_3dbcb6452ffb
CONST	SEGMENT
_GUID_3d585d5a_bd4a_489e_b1f4_3dbcb6452ffb DD 03d585d5aH
	DW	0bd4aH
	DW	0489eH
	DB	0b1H
	DB	0f4H
	DB	03dH
	DB	0bcH
	DB	0b6H
	DB	045H
	DB	02fH
	DB	0fbH
CONST	ENDS
;	COMDAT ??_7?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@
CONST	SEGMENT
??_7?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@ DQ FLAT:??_R4?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@ ; TMethodContainter<D3D12Renderer,void,long,long>::`vftable'
	DQ	FLAT:?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z
CONST	ENDS
;	COMDAT ??_7?$IIContainer@XJJ@@6B@
CONST	SEGMENT
??_7?$IIContainer@XJJ@@6B@ DQ FLAT:??_R4?$IIContainer@XJJ@@6B@ ; IIContainer<void,long,long>::`vftable'
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
CONST	SEGMENT
??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ DB 'cannot derefe'
	DB	'rence end list iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@GCOFKPID@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1LK@GCOFKPID@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@EEGLACMD@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0FN@EEGLACMD@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\list', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized list iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\vector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LMDDHACE@Resources?1uv?4dds@
CONST	SEGMENT
??_C@_0BB@LMDDHACE@Resources?1uv?4dds@ DB 'Resources/uv.dds', 00H ; `string'
CONST	ENDS
;	COMDAT _GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
CONST	SEGMENT
_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76 DD 0a753dcfH
	DW	0c4d8H
	DW	04b91H
	DB	0adH
	DB	0f6H
	DB	0beH
	DB	05aH
	DB	060H
	DB	0d9H
	DB	05aH
	DB	076H
CONST	ENDS
;	COMDAT _GUID_c3827890_e548_4cfa_96cf_5689a9370f80
CONST	SEGMENT
_GUID_c3827890_e548_4cfa_96cf_5689a9370f80 DD 0c3827890H
	DW	0e548H
	DW	04cfaH
	DB	096H
	DB	0cfH
	DB	056H
	DB	089H
	DB	0a9H
	DB	037H
	DB	0fH
	DB	080H
CONST	ENDS
;	COMDAT _GUID_6102dee4_af59_4b09_b999_b44d73f09b24
CONST	SEGMENT
_GUID_6102dee4_af59_4b09_b999_b44d73f09b24 DD 06102dee4H
	DW	0af59H
	DW	04b09H
	DB	0b9H
	DB	099H
	DB	0b4H
	DB	04dH
	DB	073H
	DB	0f0H
	DB	09bH
	DB	024H
CONST	ENDS
;	COMDAT _GUID_696442be_a72e_4059_bc79_5b5c98040fad
CONST	SEGMENT
_GUID_696442be_a72e_4059_bc79_5b5c98040fad DD 0696442beH
	DW	0a72eH
	DW	04059H
	DB	0bcH
	DB	079H
	DB	05bH
	DB	05cH
	DB	098H
	DB	04H
	DB	0fH
	DB	0adH
CONST	ENDS
;	COMDAT _GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
CONST	SEGMENT
_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed DD 0ec870a6H
	DW	05d7eH
	DW	04c22H
	DB	08cH
	DB	0fcH
	DB	05bH
	DB	0aaH
	DB	0e0H
	DB	076H
	DB	016H
	DB	0edH
CONST	ENDS
;	COMDAT _GUID_29038f61_3839_4626_91fd_086879011a05
CONST	SEGMENT
_GUID_29038f61_3839_4626_91fd_086879011a05 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _GUID_9218e6bb_f944_4f7e_a75c_b1b2c7b701f3
CONST	SEGMENT
_GUID_9218e6bb_f944_4f7e_a75c_b1b2c7b701f3 DD 09218e6bbH
	DW	0f944H
	DW	04f7eH
	DB	0a7H
	DB	05cH
	DB	0b1H
	DB	0b2H
	DB	0c7H
	DB	0b7H
	DB	01H
	DB	0f3H
CONST	ENDS
;	COMDAT _GUID_a4966eed_76db_44da_84c1_ee9a7afb20a8
CONST	SEGMENT
_GUID_a4966eed_76db_44da_84c1_ee9a7afb20a8 DD 0a4966eedH
	DW	076dbH
	DW	044daH
	DB	084H
	DB	0c1H
	DB	0eeH
	DB	09aH
	DB	07aH
	DB	0fbH
	DB	020H
	DB	0a8H
CONST	ENDS
;	COMDAT _GUID_344488b7_6846_474b_b989_f027448245e0
CONST	SEGMENT
_GUID_344488b7_6846_474b_b989_f027448245e0 DD 0344488b7H
	DW	06846H
	DW	0474bH
	DB	0b9H
	DB	089H
	DB	0f0H
	DB	027H
	DB	044H
	DB	082H
	DB	045H
	DB	0e0H
CONST	ENDS
;	COMDAT ??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xlocnum', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA DD 047H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xlocale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7D3D12Renderer@@6B@
CONST	SEGMENT
??_7D3D12Renderer@@6B@ DQ FLAT:??_R4D3D12Renderer@@6B@	; D3D12Renderer::`vftable'
	DQ	FLAT:?Init@D3D12Renderer@@UEAAHXZ
	DQ	FLAT:?Shutdown@D3D12Renderer@@UEAAXXZ
	DQ	FLAT:?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
	DQ	FLAT:?EndFrame@D3D12Renderer@@UEAAXXZ
	DQ	FLAT:?SetVsync@Renderer@@UEAAXH@Z
CONST	ENDS
;	COMDAT ?BACK_BUFFER_COUNT@D3D12Renderer@@0IB
CONST	SEGMENT
?BACK_BUFFER_COUNT@D3D12Renderer@@0IB DD 02H		; D3D12Renderer::BACK_BUFFER_COUNT
CONST	ENDS
;	COMDAT ??_C@_0BN@OLKEIKPG@D3DX12_CPU_DESCRIPTOR_HANDLE@
CONST	SEGMENT
??_C@_0BN@OLKEIKPG@D3DX12_CPU_DESCRIPTOR_HANDLE@ DB 'D3DX12_CPU_DESCRIPTO'
	DB	'R_HANDLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LHAFBJPG@D3DX12_GPU_DESCRIPTOR_HANDLE@
CONST	SEGMENT
??_C@_0BN@LHAFBJPG@D3DX12_GPU_DESCRIPTOR_HANDLE@ DB 'D3DX12_GPU_DESCRIPTO'
	DB	'R_HANDLE', 00H				; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0logic_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
data$r	SEGMENT
??_R0?AVlogic_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVlogic_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0out_of_range@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
data$r	SEGMENT
??_R0?AVout_of_range@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVout_of_range@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
_CTA3?AVout_of_range@std@@ DD 03H
	DD	imagerel _CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVout_of_range@std@@
xdata$x	SEGMENT
_TI3?AVout_of_range@std@@ DD 00H
	DD	imagerel ??1out_of_range@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@
CONST	SEGMENT
??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'p', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@EFHFIDCI@?$AAm?$AA_?$AAd?$AAe?$AAs?$AAc?$AA?4?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1HC@EFHFIDCI@?$AAm?$AA_?$AAd?$AAe?$AAs?$AAc?$AA?4?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5@ DB 'm'
	DB	00H, '_', 00H, 'd', 00H, 'e', 00H, 's', 00H, 'c', 00H, '.', 00H
	DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H, '&'
	DB	00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, '1', 00H, '2', 00H
	DB	'_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H, 'R', 00H, 'I'
	DB	00H, 'P', 00H, 'T', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'H', 00H
	DB	'E', 00H, 'A', 00H, 'P', 00H, '_', 00H, 'F', 00H, 'L', 00H, 'A'
	DB	00H, 'G', 00H, '_', 00H, 'S', 00H, 'H', 00H, 'A', 00H, 'D', 00H
	DB	'E', 00H, 'R', 00H, '_', 00H, 'V', 00H, 'I', 00H, 'S', 00H, 'I'
	DB	00H, 'B', 00H, 'L', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@
CONST	SEGMENT
??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'n', 00H, 'a', 00H, 'h', 00H, 'm', 00H, 'u'
	DB	00H, '\', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's'
	DB	00H, '\', 00H, 'D', 00H, 'a', 00H, 'r', 00H, 'k', 00H, ' ', 00H
	DB	'E', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, '\'
	DB	00H, 'D', 00H, 'a', 00H, 'r', 00H, 'k', 00H, ' ', 00H, 'E', 00H
	DB	'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H, 'e', 00H, '\', 00H, 'S'
	DB	00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\', 00H
	DB	'T', 00H, 'h', 00H, 'i', 00H, 'r', 00H, 'd', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'y', 00H, '\', 00H, 'D', 00H, 'T', 00H
	DB	'K', 00H, '1', 00H, '2', 00H, '\', 00H, 'D', 00H, 'e', 00H, 's'
	DB	00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, 'H', 00H, 'e', 00H, 'a', 00H, 'p', 00H, '.', 00H, 'h'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DQ FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DQ	FLAT:??_Eout_of_range@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DQ FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DQ	FLAT:??_Elogic_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fi'
	DB	'les\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.'
	DB	'33030\include\xmemory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 09aH ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7Renderer@@6B@
CONST	SEGMENT
??_7Renderer@@6B@ DQ FLAT:??_R4Renderer@@6B@		; Renderer::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetVsync@Renderer@@UEAAXH@Z
CONST	ENDS
;	COMDAT ??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@
CONST	SEGMENT
??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@ DB 'p', 00H, 'C', 00H, 'o', 00H, 's'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@
CONST	SEGMENT
??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@ DB 'p', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPEAM0M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPEAM0M@Z@4JA DD 0907H ; `DirectX::XMScalarSinCos'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KG@LKCFMLEG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1KG@LKCFMLEG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'K', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '1', 00H, '0', 00H, '\', 00H, 'I'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '.', 00H, '2'
	DB	00H, '2', 00H, '6', 00H, '2', 00H, '1', 00H, '.', 00H, '0', 00H
	DB	'\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'c', 00H, '.'
	DB	00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@CLJELBLH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1GA@CLJELBLH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'A', 00H
	DB	's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'R', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'.', 00H, '0', 00H, 'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@EFPMNDEN@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1GK@EFPMNDEN@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'F', 00H
	DB	'o', 00H, 'v', 00H, 'A', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e'
	DB	00H, 'Y', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H
	DB	'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ' ', 00H, '*', 00H
	DB	' ', 00H, '2', 00H, '.', 00H, '0', 00H, 'f', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA DD 098dH ; `DirectX::XMMatrixPerspectiveFovLH'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'F', 00H
	DB	'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, 'N', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'.', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'N'
	DB	00H, 'e', 00H, 'a', 00H, 'r', 00H, 'Z', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, '.', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'F', 00H, 'a', 00H, 'r', 00H, 'Z', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, '.', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@JAOFAOOK@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@
CONST	SEGMENT
??_C@_1EE@JAOFAOOK@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '3', 00H, 'I', 00H, 's', 00H, 'I', 00H, 'n'
	DB	00H, 'f', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'(', 00H, 'U', 00H, 'p', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@IBPGMKAB@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@
CONST	SEGMENT
??_C@_1FK@IBPGMKAB@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '3', 00H, 'E', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, '(', 00H, 'U', 00H, 'p', 00H, 'D', 00H, 'i', 00H
	DB	'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, ',', 00H, ' ', 00H, 'X', 00H, 'M', 00H, 'V', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'Z', 00H, 'e', 00H, 'r'
	DB	00H, 'o', 00H, '(', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@DOFHPLOD@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@
CONST	SEGMENT
??_C@_1EG@DOFHPLOD@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '3', 00H, 'I', 00H, 's', 00H, 'I', 00H, 'n'
	DB	00H, 'f', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'(', 00H, 'E', 00H, 'y', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@KOIPKFLA@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@
CONST	SEGMENT
??_C@_1FM@KOIPKFLA@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '3', 00H, 'E', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, '(', 00H, 'E', 00H, 'y', 00H, 'e', 00H, 'D', 00H
	DB	'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ',', 00H, ' ', 00H, 'X', 00H, 'M', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 'Z', 00H, 'e'
	DB	00H, 'r', 00H, 'o', 00H, '(', 00H, ')', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA DD 08a5H ; `DirectX::XMMatrixLookToLH'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'K', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '1', 00H, '0', 00H, '\', 00H, 'I'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '.', 00H, '2'
	DB	00H, '2', 00H, '6', 00H, '2', 00H, '1', 00H, '.', 00H, '0', 00H
	DB	'\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'x', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@2@UXMMATRIX@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@2@UXMMATRIX@2@@Z@4JA DD 0837H ; `DirectX::XMStoreFloat4x4'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn@ DB 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA DD 01e8H ; `DirectX::XMLoadFloat3'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe@ DB 'p', 00H, 'S', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KM@DJALCFKP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1KM@DJALCFKP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'K', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '1', 00H, '0', 00H, '\', 00H, 'I'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '.', 00H, '2'
	DB	00H, '2', 00H, '6', 00H, '2', 00H, '1', 00H, '.', 00H, '0', 00H
	DB	'\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z DD 025051601H
	DD	0d2112316H
	DD	0600c700dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z DD 025041c01H
	DD	0117231cH
	DD	050100014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0edH, 02H
	DB	02H
	DB	'l'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DD 025042111H
	DD	011c2321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z DD 025041c01H
	DD	0117231cH
	DD	050100014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'X'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z DD 025031c11H
	DD	0f217231cH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'i', 03H
	DB	02H
	DB	09eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 025041c19H
	DD	0117231cH
	DD	050100016H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b1H, 02H
	DB	02H
	DB	'h'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD 025042111H
	DD	011c2321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 025041c01H
	DD	0117231cH
	DD	050100014H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0c1H, 03H
	DB	02H
	DB	0bdH, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z DD 025041c19H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z DD 025041c01H
	DD	0117231cH
	DD	050100014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z DD 025042101H
	DD	011c2321H
	DD	050150012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035041201H
	DD	010d3312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a5H, 03H
	DB	02H
	DB	'h'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z DD 025042111H
	DD	011c2321H
	DD	050150016H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z DD 025031801H
	DD	0d2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$IIContainer@XJJ@@QEAA@XZ DD 05030d01H
	DD	0720a030dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD 025031911H
	DD	0d2142319H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z DD 025042101H
	DD	011c2321H
	DD	050150012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0e6H
	DB	00H
	DB	01cH
	DB	02H
	DB	0e5H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
	DD	imagerel $ip2state$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z DD 025041c11H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z DB 0aH
	DB	00H
	DB	00H
	DB	0deH
	DB	02H
	DB	'P'
	DB	04H
	DB	'j'
	DB	02H
	DB	'&'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z
	DD	imagerel $ip2state$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z DD 025042111H
	DD	011c2321H
	DD	050150014H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z DD 025061d01H
	DD	0118231dH
	DD	07011009cH
	DD	0500f6010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z DB 08H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	'('
	DB	04H
	DB	'i', 07H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z
	DD	imagerel $ip2state$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z DD 045061d11H
	DD	0118431dH
	DD	07011002aH
	DD	0500f6010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD 025031911H
	DD	0d2142319H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z DD 025042101H
	DD	011c2321H
	DD	050150012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'n'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z
	DD	imagerel $ip2state$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z DD 025031c11H
	DD	0f217231cH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	0a0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z
	DD	imagerel $ip2state$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z DD 035042111H
	DD	011c3321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	09eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z
	DD	imagerel $ip2state$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z DD 035042111H
	DD	011c3321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z DB 060H
	DD	imagerel $ip2state$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z DD 025031719H
	DD	0f2122317H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'b'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DB 028H
	DD	imagerel $stateUnwindMap$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
	DD	imagerel $ip2state$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z DD 025031c11H
	DD	0f217231cH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z DB 08H
	DB	00H
	DB	00H
	DB	'B'
	DB	04H
	DB	0eaH
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z DB 028H
	DD	imagerel $stateUnwindMap$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z
	DD	imagerel $ip2state$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z DD 035042111H
	DD	011c3321H
	DD	050150014H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120014H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120014H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Hash_representation@I@std@@YA_KAEBI@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$duration_values@_J@chrono@std@@SA_JXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 035041c01H
	DD	0117331cH
	DD	050100012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 035051d01H
	DD	0118331dH
	DD	070110019H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z DD 025041701H
	DD	01122317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z DD 025041701H
	DD	01122317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ DB 060H
	DD	imagerel $ip2state$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ DD 025030f19H
	DD	0b20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitFrame@D3D12Renderer@@AEAAXXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Signal@D3D12Renderer@@AEAA_KAEA_K@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@D3D12Renderer@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OnResize@D3D12Renderer@@QEAAXJJ@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndFrame@D3D12Renderer@@UEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderScene@D3D12Renderer@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderObj@D3D12Renderer@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z DB 06H
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0c9H, '5'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
	DD	imagerel $ip2state$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z DD 045061911H
	DD	01144319H
	DD	0700d00dcH
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0b5H, 014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z
	DD	imagerel $ip2state$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z DD 025041711H
	DD	01122317H
	DD	0500b0034H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Shutdown@D3D12Renderer@@UEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Init@D3D12Renderer@@UEAAHXZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	098H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Init@D3D12Renderer@@UEAAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Init@D3D12Renderer@@UEAAHXZ DB 028H
	DD	imagerel $stateUnwindMap$?Init@D3D12Renderer@@UEAAHXZ
	DD	imagerel $ip2state$?Init@D3D12Renderer@@UEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@D3D12Renderer@@UEAAHXZ DD 065061411H
	DD	010f6314H
	DD	07008006eH
	DD	050066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Init@D3D12Renderer@@UEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0D3D12Renderer@@QEAA@XZ DB 01aH
	DB	00H
	DB	00H
	DB	0b6H
	DB	02H
	DB	'"'
	DB	04H
	DB	'"'
	DB	06H
	DB	'"'
	DB	08H
	DB	'"'
	DB	0aH
	DB	'"'
	DB	0cH
	DB	'"'
	DB	0eH
	DB	'"'
	DB	010H
	DB	'"'
	DB	012H
	DB	'"'
	DB	014H
	DB	'"'
	DB	016H
	DB	0f9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0D3D12Renderer@@QEAA@XZ DB 016H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0D3D12Renderer@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0D3D12Renderer@@QEAA@XZ
	DD	imagerel $ip2state$??0D3D12Renderer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0D3D12Renderer@@QEAA@XZ DD 035030f11H
	DD	0d20a330fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0D3D12Renderer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ DB 060H
	DD	imagerel $ip2state$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ DD 025030f19H
	DD	0b20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$equal_to@I@std@@QEBA_NAEBI0@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Do_hash@?$hash@I@std@@SA_KAEBI@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z DD 025061901H
	DD	01142319H
	DD	0700d0056H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z DD 025041101H
	DD	010c2311H
	DD	050050012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitPipelines@D3DUtil@@SAXXZ DD 025030b01H
	DD	0d206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcConstantBufferByteSize@D3DUtil@@SAII@Z DD 025030e01H
	DD	0b209230eH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sin@@YAMM@Z DD 025031001H
	DD	0b20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cos@@YAMM@Z DD 025031001H
	DD	0b20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z DD 025031601H
	DD	0f2112316H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRefreshRate@FWindowsWindow@@QEAAIXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHeight@FWindowsWindow@@QEAAIXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWitdh@FWindowsWindow@@QEAAIXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1DescriptorHeap@DirectX@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gout_of_range@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0out_of_range@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1out_of_range@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0out_of_range@std@@QEAA@PEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Glogic_error@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0logic_error@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1logic_error@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0logic_error@std@@QEAA@PEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 025031411H
	DD	0d20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025041001H
	DD	0c20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035041701H
	DD	01123317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025030e01H
	DD	0f209230eH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025041501H
	DD	0c2102315H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025041a01H
	DD	0c215231aH
	DD	050107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025041501H
	DD	0e2102315H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_constant_evaluated@std@@YA_NXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Renderer@@QEAA@XZ DD 05030d01H
	DD	0720a030dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z DD 065042001H
	DD	011b6320H
	DD	050140014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z DD 065042101H
	DD	011c6321H
	DD	050150014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z DD 025031d01H
	DD	0b218231dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z DD 025052201H
	DD	011d2322H
	DD	070160013H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z DD 025031d01H
	DD	0b218231dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD 025031319H
	DD	0b20e2313H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMScalarSinCos@DirectX@@YAXPEAM0M@Z DD 025031d01H
	DD	0f218231dH
	DD	05011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMScalarNearEqual@DirectX@@YA_NMMM@Z DD 025031c01H
	DD	0d217231cH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z DD 025042501H
	DD	01202325H
	DD	05019002eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z DD 025063401H
	DD	010b2310H
	DD	070040044H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z DD 025041a01H
	DD	0109230eH
	DD	050020034H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z DD 025041e01H
	DD	010d2312H
	DD	050060084H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD 025041a01H
	DD	0109230eH
	DD	05002003cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z DD 025042601H
	DD	0109230eH
	DD	050020028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z DD 025042601H
	DD	0109230eH
	DD	050020020H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z DD 025041a01H
	DD	0109230eH
	DD	05002001aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z DD 025042601H
	DD	0109230eH
	DD	050020016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z DD 025041a01H
	DD	0109230eH
	DD	050020014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z DD 025043201H
	DD	0109230eH
	DD	05002001cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD 025032201H
	DD	0d21d2322H
	DD	05019H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorZero@DirectX@@YQ?AT__m128@@XZ DD 025030b01H
	DD	0d206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z DD 025041e01H
	DD	010d2312H
	DD	050060014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z DD 025041201H
	DD	010d2312H
	DD	050060018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT4@DirectX@@QEAA@MMMM@Z DD 025032101H
	DD	0b21c2321H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD 025032101H
	DD	0b21c2321H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT2@DirectX@@QEAA@MM@Z DD 025031b01H
	DD	0b216231bH
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMConvertToRadians@DirectX@@YAMM@Z DD 025031001H
	DD	0b20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fabsf DD 025031001H
	DD	0b20b2310H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z DD 025031201H
	DD	0b20d2312H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 112
<_Args_0>$ = 120
??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z PROC ; std::construct_at<D3D12PassConstants,D3D12PassConstants,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001d	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00022	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00026	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0002b	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00030	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00034	48 8b 7d 40	 mov	 rdi, QWORD PTR $T1[rbp]
  00038	48 8b 75 78	 mov	 rsi, QWORD PTR <_Args_0>$[rbp]
  0003c	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00041	f3 a4		 rep movsb
  00043	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5f		 pop	 rdi
  0004c	5e		 pop	 rsi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z ENDP ; std::construct_at<D3D12PassConstants,D3D12PassConstants,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 112
??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z PROC ; std::construct_at<D3D12PassConstants,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00020	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00025	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002a	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0002e	48 8b 7d 40	 mov	 rdi, QWORD PTR $T1[rbp]
  00032	33 c0		 xor	 eax, eax
  00034	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00039	f3 aa		 rep stosb
  0003b	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  0003f	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ENDP ; std::construct_at<D3D12PassConstants,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants,D3D12PassConstants>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@UD3D12PassConstants@@U1@$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@$$QEAU1@@Z ; std::construct_at<D3D12PassConstants,D3D12PassConstants,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants,D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z PROC ; std::to_address<D3D12PassConstants>, COMDAT

; 328  : _NODISCARD constexpr _Ty* to_address(_Ty* const _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 329  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 330  :     return _Val;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 331  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ENDP ; std::to_address<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z
_TEXT	SEGMENT
_Val$ = 80
??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z PROC ; std::_To_address<D3D12PassConstants *>, COMDAT

; 4377 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4378 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4379 :     return _STD to_address(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ??$to_address@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ; std::to_address<D3D12PassConstants>

; 4380 : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z ENDP ; std::_To_address<D3D12PassConstants *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z PROC ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1012>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 69 78 7d
	d4 46 c2 40 00	 mov	 rax, 18228007977973865	; 0040c246d47d7869H
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 69 78 7d
	d4 46 c2 40 00	 mov	 rax, 18228007977973865	; 0040c246d47d7869H
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 69 45 60 f4
	03 00 00	 imul	 rax, QWORD PTR _Count$[rbp], 1012 ; 000003f4H
$LN3@Get_size_o:

; 75   : }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1012>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00024	e8 00 00 00 00	 call	 ??$construct_at@UD3D12PassConstants@@$$V$0A@@std@@YAPEAUD3D12PassConstants@@QEAU1@@Z ; std::construct_at<D3D12PassConstants,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00029	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z
_TEXT	SEGMENT
tv74 = 64
tv72 = 72
this$ = 96
<_Vals_0>$ = 104
??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<D3D12PassConstants>, COMDAT

; 1800 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1801 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z ; std::_Unfancy<D3D12PassConstants>
  0002d	48 89 45 40	 mov	 QWORD PTR tv74[rbp], rax
  00031	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00039	48 89 45 48	 mov	 QWORD PTR tv72[rbp], rax
  0003d	4c 8b 45 68	 mov	 r8, QWORD PTR <_Vals_0>$[rbp]
  00041	48 8b 55 40	 mov	 rdx, QWORD PTR tv74[rbp]
  00045	48 8b 4d 48	 mov	 rcx, QWORD PTR tv72[rbp]
  00049	e8 00 00 00 00	 call	 ??$construct@UD3D12PassConstants@@U1@@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants,D3D12PassConstants>

; 1802 :         ++_Last;

  0004e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 05 f4 03 00
	00		 add	 rax, 1012		; 000003f4H
  0005c	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00060	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1803 :     }

  00064	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 0
_LastPtr$ = 8
_DestPtr$ = 16
_First_ch$ = 24
_Last_ch$ = 32
_Dest_ch$ = 40
_Count$ = 48
_First$ = 144
_Last$ = 152
_Dest$ = 160
??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z PROC ; std::_Copy_memmove<D3D12PassConstants *,D3D12PassConstants *>, COMDAT

; 4509 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4510 :     auto _FirstPtr              = _To_address(_First);

  00028	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z ; std::_To_address<D3D12PassConstants *>
  00034	48 89 45 00	 mov	 QWORD PTR _FirstPtr$[rbp], rax

; 4511 :     auto _LastPtr               = _To_address(_Last);

  00038	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  0003f	e8 00 00 00 00	 call	 ??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z ; std::_To_address<D3D12PassConstants *>
  00044	48 89 45 08	 mov	 QWORD PTR _LastPtr$[rbp], rax

; 4512 :     auto _DestPtr               = _To_address(_Dest);

  00048	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Dest$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$_To_address@PEAUD3D12PassConstants@@@std@@YA?A_PAEBQEAUD3D12PassConstants@@@Z ; std::_To_address<D3D12PassConstants *>
  00054	48 89 45 10	 mov	 QWORD PTR _DestPtr$[rbp], rax

; 4513 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _FirstPtr$[rbp]
  0005c	48 89 45 18	 mov	 QWORD PTR _First_ch$[rbp], rax

; 4514 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _LastPtr$[rbp]
  00064	48 89 45 20	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 4515 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

  00068	48 8b 45 10	 mov	 rax, QWORD PTR _DestPtr$[rbp]
  0006c	48 89 45 28	 mov	 QWORD PTR _Dest_ch$[rbp], rax

; 4516 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00070	48 8b 45 18	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00074	48 8b 4d 20	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 45 30	 mov	 QWORD PTR _Count$[rbp], rax

; 4517 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00082	4c 8b 45 30	 mov	 r8, QWORD PTR _Count$[rbp]
  00086	48 8b 55 18	 mov	 rdx, QWORD PTR _First_ch$[rbp]
  0008a	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0008e	e8 00 00 00 00	 call	 memmove

; 4518 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4519 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00093	48 8b 45 30	 mov	 rax, QWORD PTR _Count$[rbp]
  00097	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0009b	48 03 c8	 add	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx

; 4520 :     } else {
; 4521 :         return _Dest + (_LastPtr - _FirstPtr);
; 4522 :     }
; 4523 : }

  000a1	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z ENDP ; std::_Copy_memmove<D3D12PassConstants *,D3D12PassConstants *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z PROC ; std::_Unfancy<D3D12PassConstants>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z ENDP ; std::_Unfancy<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z PROC ; std::_Get_unwrapped<D3D12PassConstants * const &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _It$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z ENDP ; std::_Get_unwrapped<D3D12PassConstants * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> *>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@PEAV?$IIContainer@XJJ@@PEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> *,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z PROC ; std::to_address<IIContainer<void,long,long> *>, COMDAT

; 328  : _NODISCARD constexpr _Ty* to_address(_Ty* const _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 329  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 330  :     return _Val;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 331  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z ENDP ; std::to_address<IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z
_TEXT	SEGMENT
_Val$ = 80
??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z PROC ; std::_To_address<IIContainer<void,long,long> * *>, COMDAT

; 4377 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4378 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4379 :     return _STD to_address(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ??$to_address@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@@Z ; std::to_address<IIContainer<void,long,long> *>

; 4380 : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z ENDP ; std::_To_address<IIContainer<void,long,long> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv73 = 64
tv71 = 72
this$ = 96
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<>, COMDAT

; 1800 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1801 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00023	e8 00 00 00 00	 call	 ??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z ; std::_Unfancy<D3D12PassConstants>
  00028	48 89 45 40	 mov	 QWORD PTR tv73[rbp], rax
  0002c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00030	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00034	48 89 45 48	 mov	 QWORD PTR tv71[rbp], rax
  00038	48 8b 55 40	 mov	 rdx, QWORD PTR tv73[rbp]
  0003c	48 8b 4d 48	 mov	 rcx, QWORD PTR tv71[rbp]
  00040	e8 00 00 00 00	 call	 ??$construct@UD3D12PassConstants@@$$V@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SAXAEAV?$allocator@UD3D12PassConstants@@@1@QEAUD3D12PassConstants@@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::construct<D3D12PassConstants>

; 1802 :         ++_Last;

  00045	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004d	48 05 f4 03 00
	00		 add	 rax, 1012		; 000003f4H
  00053	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00057	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1803 :     }

  0005b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ
_TEXT	SEGMENT
this$ = 80
?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Release, COMDAT

; 1805 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1806 :         _First = _Last;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00027	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1807 :         return _Last;

  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1808 :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >, COMDAT

; 1795 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1796 :         _Destroy_range(_First, _Last, _Al);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >

; 1797 :     }

  00037	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z
_TEXT	SEGMENT
this$ = 80
_Dest$ = 88
_Al_$ = 96
??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >, COMDAT

; 1790 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00038	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b 4d 60	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00044	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z PROC ; std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >, COMDAT

; 1926 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1927 :     // move [_First, _Last) to raw _Dest, using _Al
; 1928 :     // note: only called internally from elsewhere in the STL
; 1929 :     using _Ptrval     = typename _Alloc::value_type*;
; 1930 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  00034	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z ; std::_Get_unwrapped<D3D12PassConstants * const &>
  00039	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 1931 :     const auto _ULast = _Get_unwrapped(_Last);

  0003d	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  00044	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAUD3D12PassConstants@@@std@@YA?A_TAEBQEAUD3D12PassConstants@@@Z ; std::_Get_unwrapped<D3D12PassConstants * const &>
  00049	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 1932 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1933 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1934 : #if _HAS_CXX20
; 1935 :         if (!_STD is_constant_evaluated())

  0004d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00052	0f b6 c0	 movzx	 eax, al
  00055	85 c0		 test	 eax, eax
  00057	75 4a		 jne	 SHORT $LN5@Uninitiali

; 1936 : #endif // _HAS_CXX20
; 1937 :         {
; 1938 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00059	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00060	e8 00 00 00 00	 call	 ??$_Unfancy@UD3D12PassConstants@@@std@@YAPEAUD3D12PassConstants@@PEAU1@@Z ; std::_Unfancy<D3D12PassConstants>
  00065	4c 8b c0	 mov	 r8, rax
  00068	48 8b 55 08	 mov	 rdx, QWORD PTR _ULast$[rbp]
  0006c	48 8b 4d 00	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  00070	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAUD3D12PassConstants@@PEAU1@@std@@YAPEAUD3D12PassConstants@@PEAU1@00@Z ; std::_Copy_memmove<D3D12PassConstants *,D3D12PassConstants *>

; 1939 :             return _Dest + (_ULast - _UFirst);

  00075	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00079	48 8b 4d 08	 mov	 rcx, QWORD PTR _ULast$[rbp]
  0007d	48 2b c8	 sub	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 99		 cdq
  00085	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0008a	48 f7 f9	 idiv	 rcx
  0008d	48 69 c0 f4 03
	00 00		 imul	 rax, rax, 1012		; 000003f4H
  00094	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0009b	48 03 c8	 add	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx
  000a1	eb 5b		 jmp	 SHORT $LN1@Uninitiali
$LN5@Uninitiali:

; 1940 :         }
; 1941 :     }
; 1942 : 
; 1943 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  000a3	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  000aa	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Dest$[rbp]
  000b1	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000b5	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  000ba	90		 npad	 1

; 1944 :     for (; _UFirst != _ULast; ++_UFirst) {

  000bb	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  000bd	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000c1	48 05 f4 03 00
	00		 add	 rax, 1012		; 000003f4H
  000c7	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
  000cb	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  000cf	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  000d3	74 0f		 je	 SHORT $LN3@Uninitiali

; 1945 :         _Backout._Emplace_back(_STD move(*_UFirst));

  000d5	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000d9	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000dd	e8 00 00 00 00	 call	 ??$_Emplace_back@UD3D12PassConstants@@@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX$$QEAUD3D12PassConstants@@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<D3D12PassConstants>

; 1946 :     }

  000e2	eb d9		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1947 : 
; 1948 :     return _Backout._Release();

  000e4	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000e8	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Release
  000ed	48 89 45 68	 mov	 QWORD PTR $T1[rbp], rax
  000f1	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000f5	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  000fa	48 8b 45 68	 mov	 rax, QWORD PTR $T1[rbp]
$LN1@Uninitiali:

; 1949 : }

  000fe	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ENDP ; std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<D3D12PassConstants> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z
_TEXT	SEGMENT
tv74 = 64
tv72 = 72
this$ = 96
<_Vals_0>$ = 104
??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Emplace_back<IIContainer<void,long,long> *>, COMDAT

; 1800 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1801 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z ; std::_Unfancy<IIContainer<void,long,long> *>
  0002d	48 89 45 40	 mov	 QWORD PTR tv74[rbp], rax
  00031	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00039	48 89 45 48	 mov	 QWORD PTR tv72[rbp], rax
  0003d	4c 8b 45 68	 mov	 r8, QWORD PTR <_Vals_0>$[rbp]
  00041	48 8b 55 40	 mov	 rdx, QWORD PTR tv74[rbp]
  00045	48 8b 4d 48	 mov	 rcx, QWORD PTR tv72[rbp]
  00049	e8 00 00 00 00	 call	 ??$construct@PEAV?$IIContainer@XJJ@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> *>

; 1802 :         ++_Last;

  0004e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 83 c0 08	 add	 rax, 8
  0005a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0005e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1803 :     }

  00062	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00066	5d		 pop	 rbp
  00067	c3		 ret	 0
??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Emplace_back<IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
_TEXT	SEGMENT
this$ = 80
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Release, COMDAT

; 1805 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1806 :         _First = _Last;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00027	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1807 :         return _Last;

  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1808 :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::~_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 1795 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1796 :         _Destroy_range(_First, _Last, _Al);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >

; 1797 :     }

  00037	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::~_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z
_TEXT	SEGMENT
this$ = 80
_Dest$ = 88
_Al_$ = 96
??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 1790 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00038	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b 4d 60	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00044	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 0
_LastPtr$ = 8
_DestPtr$ = 16
_First_ch$ = 24
_Last_ch$ = 32
_Dest_ch$ = 40
_Count$ = 48
_First$ = 144
_Last$ = 152
_Dest$ = 160
??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<IIContainer<void,long,long> * *,IIContainer<void,long,long> * *>, COMDAT

; 4509 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4510 :     auto _FirstPtr              = _To_address(_First);

  00028	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_To_address<IIContainer<void,long,long> * *>
  00034	48 89 45 00	 mov	 QWORD PTR _FirstPtr$[rbp], rax

; 4511 :     auto _LastPtr               = _To_address(_Last);

  00038	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  0003f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_To_address<IIContainer<void,long,long> * *>
  00044	48 89 45 08	 mov	 QWORD PTR _LastPtr$[rbp], rax

; 4512 :     auto _DestPtr               = _To_address(_Dest);

  00048	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Dest$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAV?$IIContainer@XJJ@@@std@@YA?A_PAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_To_address<IIContainer<void,long,long> * *>
  00054	48 89 45 10	 mov	 QWORD PTR _DestPtr$[rbp], rax

; 4513 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _FirstPtr$[rbp]
  0005c	48 89 45 18	 mov	 QWORD PTR _First_ch$[rbp], rax

; 4514 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _LastPtr$[rbp]
  00064	48 89 45 20	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 4515 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

  00068	48 8b 45 10	 mov	 rax, QWORD PTR _DestPtr$[rbp]
  0006c	48 89 45 28	 mov	 QWORD PTR _Dest_ch$[rbp], rax

; 4516 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00070	48 8b 45 18	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00074	48 8b 4d 20	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 45 30	 mov	 QWORD PTR _Count$[rbp], rax

; 4517 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00082	4c 8b 45 30	 mov	 r8, QWORD PTR _Count$[rbp]
  00086	48 8b 55 18	 mov	 rdx, QWORD PTR _First_ch$[rbp]
  0008a	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0008e	e8 00 00 00 00	 call	 memmove

; 4518 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4519 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00093	48 8b 45 30	 mov	 rax, QWORD PTR _Count$[rbp]
  00097	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0009b	48 03 c8	 add	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx

; 4520 :     } else {
; 4521 :         return _Dest + (_LastPtr - _FirstPtr);
; 4522 :     }
; 4523 : }

  000a1	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<IIContainer<void,long,long> * *,IIContainer<void,long,long> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z PROC ; std::_Get_unwrapped<IIContainer<void,long,long> * * const &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _It$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z ENDP ; std::_Get_unwrapped<IIContainer<void,long,long> * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z PROC ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z ENDP ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z PROC ; std::addressof<IIContainer<void,long,long> *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z ENDP ; std::addressof<IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z PROC ; std::construct_at<D3D12Model *,D3D12Model * &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z ENDP ; std::construct_at<D3D12Model *,D3D12Model * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 0
$T1 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >, COMDAT

; 2025 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2026 :     // value-initialize _Count objects to raw _First, using _Al
; 2027 :     using _Ptrty = typename _Alloc::value_type*;
; 2028 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2029 : #if _HAS_CXX20
; 2030 :         if (!_STD is_constant_evaluated())
; 2031 : #endif // _HAS_CXX20
; 2032 :         {
; 2033 :             auto _PFirst = _Unfancy(_First);
; 2034 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2035 :             return _First + _Count;
; 2036 :         }
; 2037 :     }
; 2038 : 
; 2039 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  00028	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0002f	48 8b 55 70	 mov	 rdx, QWORD PTR _First$[rbp]
  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00037	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@PEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  0003c	90		 npad	 1

; 2040 :     for (; 0 < _Count; --_Count) {

  0003d	eb 0b		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003f	48 8b 45 78	 mov	 rax, QWORD PTR _Count$[rbp]
  00043	48 ff c8	 dec	 rax
  00046	48 89 45 78	 mov	 QWORD PTR _Count$[rbp], rax
$LN4@Uninitiali:
  0004a	48 83 7d 78 00	 cmp	 QWORD PTR _Count$[rbp], 0
  0004f	76 0b		 jbe	 SHORT $LN3@Uninitiali

; 2041 :         _Backout._Emplace_back();

  00051	48 8d 4d 00	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00055	e8 00 00 00 00	 call	 ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Emplace_back<>

; 2042 :     }

  0005a	eb e3		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 2043 : 
; 2044 :     return _Backout._Release();

  0005c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00060	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAPEAUD3D12PassConstants@@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::_Release
  00065	48 89 45 58	 mov	 QWORD PTR $T1[rbp], rax
  00069	48 8d 4d 00	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0006d	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  00072	48 8b 45 58	 mov	 rax, QWORD PTR $T1[rbp]

; 2045 : }

  00076	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 0
$T1 = 88
_First$ = 112
_Count$ = 120
_Al$ = 128
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >::~_Uninitialized_backout_al<std::allocator<D3D12PassConstants> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Oldsize$ = 32
_Newcapacity$ = 40
_Newvec$ = 48
_Appended_first$ = 56
_Appended_last$ = 64
tv138 = 136
this$ = 160
_Newsize$ = 168
_Val$ = 176
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1510 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1511 :         if (_Newsize > max_size()) {

  00028	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::max_size
  00034	48 39 85 a8 00
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Resize_rea

; 1512 :             _Xlength();

  0003d	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Xlength
$LN2@Resize_rea:

; 1513 :         }
; 1514 : 
; 1515 :         auto& _Al         = _Getal();

  00042	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  0004e	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 1516 :         auto& _My_data    = _Mypair._Myval2;

  00052	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1517 :         pointer& _Myfirst = _My_data._Myfirst;

  0005d	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00061	48 83 c0 08	 add	 rax, 8
  00065	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1518 :         pointer& _Mylast  = _My_data._Mylast;

  00069	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0006d	48 83 c0 10	 add	 rax, 16
  00071	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1519 : 
; 1520 :         const auto _Oldsize    = static_cast<size_type>(_Mylast - _Myfirst);

  00075	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00079	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0007d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00080	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00083	48 2b c1	 sub	 rax, rcx
  00086	48 99		 cdq
  00088	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0008d	48 f7 f9	 idiv	 rcx
  00090	48 89 45 20	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 1521 :         size_type _Newcapacity = _Calculate_growth(_Newsize);

  00094	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Newsize$[rbp]
  0009b	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Calculate_growth
  000a7	48 89 45 28	 mov	 QWORD PTR _Newcapacity$[rbp], rax

; 1522 : 
; 1523 :         const pointer _Newvec         = _Allocate_at_least_helper(_Al, _Newcapacity);

  000ab	48 8d 55 28	 lea	 rdx, QWORD PTR _Newcapacity$[rbp]
  000af	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000b3	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@AEAV?$allocator@UD3D12PassConstants@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<D3D12PassConstants> >
  000b8	48 89 45 30	 mov	 QWORD PTR _Newvec$[rbp], rax

; 1524 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000bc	48 69 45 20 f4
	03 00 00	 imul	 rax, QWORD PTR _Oldsize$[rbp], 1012 ; 000003f4H
  000c4	48 8b 4d 30	 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000c8	48 03 c8	 add	 rcx, rax
  000cb	48 8b c1	 mov	 rax, rcx
  000ce	48 89 45 38	 mov	 QWORD PTR _Appended_first$[rbp], rax

; 1525 :         pointer _Appended_last        = _Appended_first;

  000d2	48 8b 45 38	 mov	 rax, QWORD PTR _Appended_first$[rbp]
  000d6	48 89 45 40	 mov	 QWORD PTR _Appended_last$[rbp], rax

; 1526 : 
; 1527 :         _TRY_BEGIN
; 1528 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1529 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1530 :         } else {
; 1531 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1532 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

  000da	48 8b 45 20	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  000de	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  000e5	48 2b c8	 sub	 rcx, rax
  000e8	48 8b c1	 mov	 rax, rcx
  000eb	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  000ef	48 8b d0	 mov	 rdx, rax
  000f2	48 8b 4d 38	 mov	 rcx, QWORD PTR _Appended_first$[rbp]
  000f6	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >
  000fb	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv138[rbp], rax
  00102	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR tv138[rbp]
  00109	48 89 45 40	 mov	 QWORD PTR _Appended_last$[rbp], rax

; 1533 :         }
; 1534 : 
; 1535 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1536 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  0010d	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  00111	4c 8b 45 30	 mov	 r8, QWORD PTR _Newvec$[rbp]
  00115	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00119	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0011c	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00120	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00123	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@QEAU1@0PEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Uninitialized_move<D3D12PassConstants *,std::allocator<D3D12PassConstants> >
  00128	90		 npad	 1
  00129	eb 00		 jmp	 SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1537 :         } else {
; 1538 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1539 :         }
; 1540 :         _CATCH_ALL
; 1541 :         _Destroy_range(_Appended_first, _Appended_last, _Al);
; 1542 :         _Al.deallocate(_Newvec, _Newcapacity);
; 1543 :         _RERAISE;
; 1544 :         _CATCH_END
; 1545 : 
; 1546 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  0012b	4c 8b 4d 28	 mov	 r9, QWORD PTR _Newcapacity$[rbp]
  0012f	4c 8b 85 a8 00
	00 00		 mov	 r8, QWORD PTR _Newsize$[rbp]
  00136	48 8b 55 30	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0013a	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00141	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Change_array

; 1547 :     }

  00146	48 8d a5 90 00
	00 00		 lea	 rsp, QWORD PTR [rbp+144]
  0014d	5d		 pop	 rbp
  0014e	c3		 ret	 0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Oldsize$ = 32
_Newcapacity$ = 40
_Newvec$ = 48
_Appended_first$ = 56
_Appended_last$ = 64
tv138 = 136
this$ = 160
_Newsize$ = 168
_Val$ = 176
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1540 :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1541 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

  0000e	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00012	48 8b 55 40	 mov	 rdx, QWORD PTR _Appended_last$[rbp]
  00016	48 8b 4d 38	 mov	 rcx, QWORD PTR _Appended_first$[rbp]
  0001a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >

; 1542 :         _Al.deallocate(_Newvec, _Newcapacity);

  0001f	4c 8b 45 28	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00023	48 8b 55 30	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::deallocate

; 1543 :         _RERAISE;

  00030	33 d2		 xor	 edx, edx
  00032	33 c9		 xor	 ecx, ecx
  00034	e8 00 00 00 00	 call	 _CxxThrowException
  00039	90		 npad	 1

; 1544 :         _CATCH_END

  0003a	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$0
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
  00047	cc		 int	 3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z PROC ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 1926 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1927 :     // move [_First, _Last) to raw _Dest, using _Al
; 1928 :     // note: only called internally from elsewhere in the STL
; 1929 :     using _Ptrval     = typename _Alloc::value_type*;
; 1930 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  00034	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_Get_unwrapped<IIContainer<void,long,long> * * const &>
  00039	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 1931 :     const auto _ULast = _Get_unwrapped(_Last);

  0003d	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  00044	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAPEAV?$IIContainer@XJJ@@@std@@YA?A_TAEBQEAPEAV?$IIContainer@XJJ@@@Z ; std::_Get_unwrapped<IIContainer<void,long,long> * * const &>
  00049	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 1932 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1933 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1934 : #if _HAS_CXX20
; 1935 :         if (!_STD is_constant_evaluated())

  0004d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00052	0f b6 c0	 movzx	 eax, al
  00055	85 c0		 test	 eax, eax
  00057	75 3b		 jne	 SHORT $LN5@Uninitiali

; 1936 : #endif // _HAS_CXX20
; 1937 :         {
; 1938 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00059	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00060	e8 00 00 00 00	 call	 ??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z ; std::_Unfancy<IIContainer<void,long,long> *>
  00065	4c 8b c0	 mov	 r8, rax
  00068	48 8b 55 08	 mov	 rdx, QWORD PTR _ULast$[rbp]
  0006c	48 8b 4d 00	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  00070	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@00@Z ; std::_Copy_memmove<IIContainer<void,long,long> * *,IIContainer<void,long,long> * *>

; 1939 :             return _Dest + (_ULast - _UFirst);

  00075	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00079	48 8b 4d 08	 mov	 rcx, QWORD PTR _ULast$[rbp]
  0007d	48 2b c8	 sub	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 c1 f8 03	 sar	 rax, 3
  00087	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0008e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]
  00092	eb 59		 jmp	 SHORT $LN1@Uninitiali
$LN5@Uninitiali:

; 1940 :         }
; 1941 :     }
; 1942 : 
; 1943 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  00094	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0009b	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Dest$[rbp]
  000a2	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@PEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
  000ab	90		 npad	 1

; 1944 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	eb 0c		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  000ae	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000b2	48 83 c0 08	 add	 rax, 8
  000b6	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
  000ba	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  000be	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  000c2	74 0f		 je	 SHORT $LN3@Uninitiali

; 1945 :         _Backout._Emplace_back(_STD move(*_UFirst));

  000c4	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000c8	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000cc	e8 00 00 00 00	 call	 ??$_Emplace_back@PEAV?$IIContainer@XJJ@@@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAX$$QEAPEAV?$IIContainer@XJJ@@@Z ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Emplace_back<IIContainer<void,long,long> *>

; 1946 :     }

  000d1	eb db		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1947 : 
; 1948 :     return _Backout._Release();

  000d3	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000d7	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::_Release
  000dc	48 89 45 68	 mov	 QWORD PTR $T1[rbp], rax
  000e0	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000e4	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::~_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
  000e9	48 8b 45 68	 mov	 rax, QWORD PTR $T1[rbp]
$LN1@Uninitiali:

; 1949 : }

  000ed	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000f1	5d		 pop	 rbp
  000f2	c3		 ret	 0
??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ENDP ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >::~_Uninitialized_backout_al<std::allocator<IIContainer<void,long,long> *> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z PROC ; std::_Unfancy<IIContainer<void,long,long> *>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z ENDP ; std::_Unfancy<IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z PROC ; std::_Construct_in_place<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z ; std::addressof<IIContainer<void,long,long> *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEAV?$IIContainer@XJJ@@AEBQEAV1@$0A@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAPEAV1@@Z ; std::addressof<IIContainer<void,long,long> *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z ENDP ; std::_Construct_in_place<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::construct<D3D12Model *,D3D12Model * &>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@PEAVD3D12Model@@AEAPEAV1@$0A@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@AEAPEAV1@@Z ; std::construct_at<D3D12Model *,D3D12Model * &,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::construct<D3D12Model *,D3D12Model * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xhash
;	COMDAT ??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z
_TEXT	SEGMENT
tv73 = 64
tv76 = 72
this$ = 96
_Keyval1$ = 104
_Keyval2$ = 112
??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>, COMDAT

; 154  :         noexcept(_Nothrow_compare<_Keyeq, _Keyty1, _Keyty2>) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__696C8ED8_xhash
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  :         // test if _Keyval1 NOT equal to _Keyval2
; 156  :         return !static_cast<bool>(_Mypair._Myval2._Get_first()(_Keyval1, _Keyval2));

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
  00031	48 89 45 40	 mov	 QWORD PTR tv73[rbp], rax
  00035	4c 8b 45 70	 mov	 r8, QWORD PTR _Keyval2$[rbp]
  00039	48 8b 55 68	 mov	 rdx, QWORD PTR _Keyval1$[rbp]
  0003d	48 8b 4d 40	 mov	 rcx, QWORD PTR tv73[rbp]
  00041	e8 00 00 00 00	 call	 ??R?$equal_to@I@std@@QEBA_NAEBI0@Z ; std::equal_to<unsigned int>::operator()
  00046	0f b6 c0	 movzx	 eax, al
  00049	85 c0		 test	 eax, eax
  0004b	75 09		 jne	 SHORT $LN3@operator
  0004d	c7 45 48 01 00
	00 00		 mov	 DWORD PTR tv76[rbp], 1
  00054	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00056	c7 45 48 00 00
	00 00		 mov	 DWORD PTR tv76[rbp], 0
$LN4@operator:
  0005d	0f b6 45 48	 movzx	 eax, BYTE PTR tv76[rbp]

; 157  :     }

  00061	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\unordered_map
;	COMDAT ??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z PROC ; std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0>::_Kfn<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >, COMDAT

; 54   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) noexcept { // extract key from element value

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DA11C4D_unordered_map
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 55   :         return _Val.first;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 56   :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z ENDP ; std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0>::_Kfn<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  00046	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 75   : }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ ; std::allocator<D3D12PassConstants>::allocator<D3D12PassConstants>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<D3D12PassConstants> >::_Vector_val<std::_Simple_types<D3D12PassConstants> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Oldsize$ = 32
_Newlast$1 = 40
_Oldcapacity$2 = 48
_Oldlast$3 = 56
this$ = 144
_Newsize$ = 152
_Val$ = 160
??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize<std::_Value_init_tag>, COMDAT

; 1550 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1551 :         // trim or append elements, provide strong guarantee
; 1552 :         auto& _Al           = _Getal();

  00028	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  00034	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 1553 :         auto& _My_data      = _Mypair._Myval2;

  00038	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1554 :         pointer& _Myfirst   = _My_data._Myfirst;

  00043	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1555 :         pointer& _Mylast    = _My_data._Mylast;

  0004f	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00053	48 83 c0 10	 add	 rax, 16
  00057	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1556 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0005b	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0005f	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  00063	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00066	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00069	48 2b c1	 sub	 rax, rcx
  0006c	48 99		 cdq
  0006e	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00073	48 f7 f9	 idiv	 rcx
  00076	48 89 45 20	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 1557 :         if (_Newsize < _Oldsize) { // trim

  0007a	48 8b 45 20	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  0007e	48 39 85 98 00
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  00085	73 51		 jae	 SHORT $LN2@Resize

; 1558 :             const pointer _Newlast = _Myfirst + _Newsize;

  00087	48 69 85 98 00
	00 00 f4 03 00
	00		 imul	 rax, QWORD PTR _Newsize$[rbp], 1012 ; 000003f4H
  00092	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  00096	48 03 01	 add	 rax, QWORD PTR [rcx]
  00099	48 89 45 28	 mov	 QWORD PTR _Newlast$1[rbp], rax

; 1559 :             _Orphan_range(_Newlast, _Mylast);

  0009d	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000a1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000a4	48 8b 55 28	 mov	 rdx, QWORD PTR _Newlast$1[rbp]
  000a8	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000af	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range

; 1560 :             _Destroy_range(_Newlast, _Mylast, _Al);

  000b4	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  000b8	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000bc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000bf	48 8b 4d 28	 mov	 rcx, QWORD PTR _Newlast$1[rbp]
  000c3	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >

; 1561 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1562 :             _Mylast = _Newlast;

  000c8	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000cc	48 8b 4d 28	 mov	 rcx, QWORD PTR _Newlast$1[rbp]
  000d0	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1563 :             return;

  000d3	e9 a1 00 00 00	 jmp	 $LN1@Resize
$LN2@Resize:

; 1564 :         }
; 1565 : 
; 1566 :         if (_Newsize > _Oldsize) { // append

  000d8	48 8b 45 20	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  000dc	48 39 85 98 00
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  000e3	0f 86 90 00 00
	00		 jbe	 $LN3@Resize

; 1567 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000e9	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ed	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  000f1	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000f4	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000f8	48 2b c1	 sub	 rax, rcx
  000fb	48 99		 cdq
  000fd	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00102	48 f7 f9	 idiv	 rcx
  00105	48 89 45 30	 mov	 QWORD PTR _Oldcapacity$2[rbp], rax

; 1568 :             if (_Newsize > _Oldcapacity) { // reallocate

  00109	48 8b 45 30	 mov	 rax, QWORD PTR _Oldcapacity$2[rbp]
  0010d	48 39 85 98 00
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  00114	76 1c		 jbe	 SHORT $LN4@Resize

; 1569 :                 _Resize_reallocate(_Newsize, _Val);

  00116	4c 8b 85 a0 00
	00 00		 mov	 r8, QWORD PTR _Val$[rbp]
  0011d	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00124	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0012b	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize_reallocate<std::_Value_init_tag>

; 1570 :                 return;

  00130	eb 47		 jmp	 SHORT $LN1@Resize
$LN4@Resize:

; 1571 :             }
; 1572 : 
; 1573 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1574 :             const pointer _Oldlast = _Mylast;

  00132	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00136	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00139	48 89 45 38	 mov	 QWORD PTR _Oldlast$3[rbp], rax

; 1575 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1576 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1577 :             } else {
; 1578 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1579 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

  0013d	48 8b 45 20	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  00141	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  00148	48 2b c8	 sub	 rcx, rax
  0014b	48 8b c1	 mov	 rax, rcx
  0014e	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00152	48 8b d0	 mov	 rdx, rax
  00155	48 8b 4d 38	 mov	 rcx, QWORD PTR _Oldlast$3[rbp]
  00159	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAPEAUD3D12PassConstants@@PEAU1@_KAEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<D3D12PassConstants> >
  0015e	48 8b 4d 18	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00162	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1580 :             }
; 1581 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1582 :             _Orphan_range(_Oldlast, _Oldlast);

  00165	4c 8b 45 38	 mov	 r8, QWORD PTR _Oldlast$3[rbp]
  00169	48 8b 55 38	 mov	 rdx, QWORD PTR _Oldlast$3[rbp]
  0016d	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00174	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1583 :         }
; 1584 : 
; 1585 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1586 :     }

  00179	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00180	5d		 pop	 rbp
  00181	c3		 ret	 0
??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Whereoff$ = 32
_Oldsize$ = 40
_Newsize$ = 48
_Newcapacity$ = 56
_Newvec$ = 64
_Constructed_last$ = 72
_Constructed_first$ = 80
this$ = 176
_Whereptr$ = 184
<_Val_0>$ = 192
??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>, COMDAT

; 811  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 812  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 813  :         _Alty& _Al        = _Getal();

  00028	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  00034	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 814  :         auto& _My_data    = _Mypair._Myval2;

  00038	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 815  :         pointer& _Myfirst = _My_data._Myfirst;

  00043	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 816  :         pointer& _Mylast  = _My_data._Mylast;

  0004f	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00053	48 83 c0 10	 add	 rax, 16
  00057	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 817  : 
; 818  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 819  : 
; 820  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0005b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00069	48 2b c8	 sub	 rcx, rax
  0006c	48 8b c1	 mov	 rax, rcx
  0006f	48 c1 f8 03	 sar	 rax, 3
  00073	48 89 45 20	 mov	 QWORD PTR _Whereoff$[rbp], rax

; 821  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00077	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0007b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 2b c1	 sub	 rax, rcx
  00088	48 c1 f8 03	 sar	 rax, 3
  0008c	48 89 45 28	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 822  : 
; 823  :         if (_Oldsize == max_size()) {

  00090	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00097	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::max_size
  0009c	48 39 45 28	 cmp	 QWORD PTR _Oldsize$[rbp], rax
  000a0	75 05		 jne	 SHORT $LN2@Emplace_re

; 824  :             _Xlength();

  000a2	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Xlength
$LN2@Emplace_re:

; 825  :         }
; 826  : 
; 827  :         const size_type _Newsize = _Oldsize + 1;

  000a7	48 8b 45 28	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  000ab	48 ff c0	 inc	 rax
  000ae	48 89 45 30	 mov	 QWORD PTR _Newsize$[rbp], rax

; 828  :         size_type _Newcapacity   = _Calculate_growth(_Newsize);

  000b2	48 8b 55 30	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  000b6	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bd	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Calculate_growth
  000c2	48 89 45 38	 mov	 QWORD PTR _Newcapacity$[rbp], rax

; 829  : 
; 830  :         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);

  000c6	48 8d 55 38	 lea	 rdx, QWORD PTR _Newcapacity$[rbp]
  000ca	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000ce	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<IIContainer<void,long,long> *> >
  000d3	48 89 45 40	 mov	 QWORD PTR _Newvec$[rbp], rax

; 831  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000d7	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  000db	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  000df	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  000e4	48 89 45 48	 mov	 QWORD PTR _Constructed_last$[rbp], rax

; 832  :         pointer _Constructed_first      = _Constructed_last;

  000e8	48 8b 45 48	 mov	 rax, QWORD PTR _Constructed_last$[rbp]
  000ec	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 833  : 
; 834  :         _TRY_BEGIN
; 835  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000f0	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  000f4	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  000f8	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 ??$_Unfancy@PEAV?$IIContainer@XJJ@@@std@@YAPEAPEAV?$IIContainer@XJJ@@PEAPEAV1@@Z ; std::_Unfancy<IIContainer<void,long,long> *>
  00104	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR <_Val_0>$[rbp]
  0010b	48 8b d0	 mov	 rdx, rax
  0010e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  00112	e8 00 00 00 00	 call	 ??$construct@PEAV?$IIContainer@XJJ@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SAXAEAV?$allocator@PEAV?$IIContainer@XJJ@@@1@QEAPEAV?$IIContainer@XJJ@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::construct<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>

; 836  :         _Constructed_first = _Newvec + _Whereoff;

  00117	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  0011b	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  0011f	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00123	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 837  : 
; 838  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00127	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0012b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012e	48 39 85 b8 00
	00 00		 cmp	 QWORD PTR _Whereptr$[rbp], rax
  00135	75 1d		 jne	 SHORT $LN4@Emplace_re

; 839  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 840  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  00137	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  0013b	4c 8b 45 40	 mov	 r8, QWORD PTR _Newvec$[rbp]
  0013f	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00143	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00146	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0014a	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0014d	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >

; 841  :             } else {
; 842  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 843  :             }
; 844  :         } else { // provide basic guarantee

  00152	eb 4b		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 845  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

  00154	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  00158	4c 8b 45 40	 mov	 r8, QWORD PTR _Newvec$[rbp]
  0015c	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  00163	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00167	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0016a	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >

; 846  :             _Constructed_first = _Newvec;

  0016f	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  00173	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 847  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00177	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  0017b	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  0017f	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00184	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  00188	4c 8b c0	 mov	 r8, rax
  0018b	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0018f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00192	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00199	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Uninitialized_move<IIContainer<void,long,long> * *,std::allocator<IIContainer<void,long,long> *> >
  0019e	90		 npad	 1
$LN5@Emplace_re:
  0019f	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 848  :         }
; 849  :         _CATCH_ALL
; 850  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 851  :         _Al.deallocate(_Newvec, _Newcapacity);
; 852  :         _RERAISE;
; 853  :         _CATCH_END
; 854  : 
; 855  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001a1	4c 8b 4d 38	 mov	 r9, QWORD PTR _Newcapacity$[rbp]
  001a5	4c 8b 45 30	 mov	 r8, QWORD PTR _Newsize$[rbp]
  001a9	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  001ad	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001b4	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Change_array

; 856  :         return _Newvec + _Whereoff;

  001b9	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  001bd	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  001c1	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 857  :     }

  001c5	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  001cc	5d		 pop	 rbp
  001cd	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Whereoff$ = 32
_Oldsize$ = 40
_Newsize$ = 48
_Newcapacity$ = 56
_Newvec$ = 64
_Constructed_last$ = 72
_Constructed_first$ = 80
this$ = 176
_Whereptr$ = 184
<_Val_0>$ = 192
?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>'::`1'::catch$0

; 849  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z$0:

; 850  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

  0000e	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00012	48 8b 55 48	 mov	 rdx, QWORD PTR _Constructed_last$[rbp]
  00016	48 8b 4d 50	 mov	 rcx, QWORD PTR _Constructed_first$[rbp]
  0001a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >

; 851  :         _Al.deallocate(_Newvec, _Newcapacity);

  0001f	4c 8b 45 38	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00023	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::deallocate

; 852  :         _RERAISE;

  00030	33 d2		 xor	 edx, edx
  00032	33 c9		 xor	 ecx, ecx
  00034	e8 00 00 00 00	 call	 _CxxThrowException
  00039	90		 npad	 1

; 853  :         _CATCH_END

  0003a	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
  00047	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 0
_Mylast$ = 8
_Result$ = 16
this$ = 112
<_Val_0>$ = 120
??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_back_with_unused_capacity<IIContainer<void,long,long> * const &>, COMDAT

; 788  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 789  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 790  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 791  :         pointer& _Mylast = _My_data._Mylast;

  0002b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002f	48 83 c0 10	 add	 rax, 16
  00033	48 89 45 08	 mov	 QWORD PTR _Mylast$[rbp], rax

; 792  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 793  :         if constexpr (conjunction_v<is_nothrow_constructible<_Ty, _Valty...>,
; 794  :                           _Uses_default_construct<_Alloc, _Ty*, _Valty...>>) {
; 795  :             _ASAN_VECTOR_MODIFY(1);
; 796  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00037	48 8b 55 78	 mov	 rdx, QWORD PTR <_Val_0>$[rbp]
  0003b	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0003f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00042	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAV?$IIContainer@XJJ@@AEBQEAV1@@std@@YAXAEAPEAV?$IIContainer@XJJ@@AEBQEAV1@@Z ; std::_Construct_in_place<IIContainer<void,long,long> *,IIContainer<void,long,long> * const &>

; 797  :         } else {
; 798  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 799  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 800  :             _ASAN_VECTOR_RELEASE_GUARD;
; 801  :         }
; 802  : 
; 803  :         _Orphan_range(_Mylast, _Mylast);

  00047	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0004b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0004e	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00052	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00055	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range

; 804  :         _Ty& _Result = *_Mylast;

  0005e	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 89 45 10	 mov	 QWORD PTR _Result$[rbp], rax

; 805  :         ++_Mylast;

  00069	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0006d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00070	48 83 c0 08	 add	 rax, 8
  00074	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 806  : 
; 807  :         return _Result;

  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Result$[rbp]

; 808  :     }

  0007f	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00083	5d		 pop	 rbp
  00084	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_back_with_unused_capacity<IIContainer<void,long,long> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z PROC ; std::construct_at<char *,char * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ENDP ; std::construct_at<char *,char * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z
_TEXT	SEGMENT
tv74 = 64
tv72 = 72
this$ = 96
<_Vals_0>$ = 104
??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Emplace_back<D3D12Model * &>, COMDAT

; 1800 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1801 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z ; std::_Unfancy<D3D12Model *>
  0002d	48 89 45 40	 mov	 QWORD PTR tv74[rbp], rax
  00031	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00039	48 89 45 48	 mov	 QWORD PTR tv72[rbp], rax
  0003d	4c 8b 45 68	 mov	 r8, QWORD PTR <_Vals_0>$[rbp]
  00041	48 8b 55 40	 mov	 rdx, QWORD PTR tv74[rbp]
  00045	48 8b 4d 48	 mov	 rcx, QWORD PTR tv72[rbp]
  00049	e8 00 00 00 00	 call	 ??$construct@PEAVD3D12Model@@AEAPEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SAXAEAV?$allocator@PEAVD3D12Model@@@1@QEAPEAVD3D12Model@@AEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::construct<D3D12Model *,D3D12Model * &>

; 1802 :         ++_Last;

  0004e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 83 c0 08	 add	 rax, 8
  0005a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0005e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1803 :     }

  00062	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00066	5d		 pop	 rbp
  00067	c3		 ret	 0
??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Emplace_back<D3D12Model * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
_TEXT	SEGMENT
this$ = 80
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Release, COMDAT

; 1805 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1806 :         _First = _Last;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00027	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1807 :         return _Last;

  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1808 :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::~_Uninitialized_backout_al<std::allocator<D3D12Model *> >, COMDAT

; 1795 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1796 :         _Destroy_range(_First, _Last, _Al);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12Model *> >

; 1797 :     }

  00037	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::~_Uninitialized_backout_al<std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z
_TEXT	SEGMENT
this$ = 80
_Dest$ = 88
_Al_$ = 96
??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Uninitialized_backout_al<std::allocator<D3D12Model *> >, COMDAT

; 1790 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00038	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b 4d 60	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00044	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Uninitialized_backout_al<std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 0
_LastPtr$ = 8
_DestPtr$ = 16
_First_ch$ = 24
_Last_ch$ = 32
_Dest_ch$ = 40
_Count$ = 48
_First$ = 144
_Last$ = 152
_Dest$ = 160
??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<D3D12Model * *,D3D12Model * *>, COMDAT

; 4509 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4510 :     auto _FirstPtr              = _To_address(_First);

  00028	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
  00034	48 89 45 00	 mov	 QWORD PTR _FirstPtr$[rbp], rax

; 4511 :     auto _LastPtr               = _To_address(_Last);

  00038	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  0003f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
  00044	48 89 45 08	 mov	 QWORD PTR _LastPtr$[rbp], rax

; 4512 :     auto _DestPtr               = _To_address(_Dest);

  00048	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Dest$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
  00054	48 89 45 10	 mov	 QWORD PTR _DestPtr$[rbp], rax

; 4513 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _FirstPtr$[rbp]
  0005c	48 89 45 18	 mov	 QWORD PTR _First_ch$[rbp], rax

; 4514 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _LastPtr$[rbp]
  00064	48 89 45 20	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 4515 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

  00068	48 8b 45 10	 mov	 rax, QWORD PTR _DestPtr$[rbp]
  0006c	48 89 45 28	 mov	 QWORD PTR _Dest_ch$[rbp], rax

; 4516 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00070	48 8b 45 18	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00074	48 8b 4d 20	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 45 30	 mov	 QWORD PTR _Count$[rbp], rax

; 4517 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00082	4c 8b 45 30	 mov	 r8, QWORD PTR _Count$[rbp]
  00086	48 8b 55 18	 mov	 rdx, QWORD PTR _First_ch$[rbp]
  0008a	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0008e	e8 00 00 00 00	 call	 memmove

; 4518 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4519 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00093	48 8b 45 30	 mov	 rax, QWORD PTR _Count$[rbp]
  00097	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0009b	48 03 c8	 add	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx

; 4520 :     } else {
; 4521 :         return _Dest + (_LastPtr - _FirstPtr);
; 4522 :     }
; 4523 : }

  000a1	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<D3D12Model * *,D3D12Model * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z PROC ; std::_Unfancy<D3D12Model *>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z ENDP ; std::_Unfancy<D3D12Model *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z PROC ; std::to_address<D3D12Model *>, COMDAT

; 328  : _NODISCARD constexpr _Ty* to_address(_Ty* const _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 329  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 330  :     return _Val;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 331  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z ENDP ; std::to_address<D3D12Model *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z
_TEXT	SEGMENT
_Val$ = 80
??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z PROC ; std::_To_address<D3D12Model * *>, COMDAT

; 4377 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4378 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4379 :     return _STD to_address(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ??$to_address@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@QEAPEAV1@@Z ; std::to_address<D3D12Model *>

; 4380 : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ENDP ; std::_To_address<D3D12Model * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z
_TEXT	SEGMENT
_Se$ = 80
??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z PROC ; std::ranges::_Unwrap_sent<D3D12Model * *,D3D12Model * *>, COMDAT

; 2510 :         !_Unwrappable_sentinel_for<_Sent, _Iter> || _Has_nothrow_unwrapped<_Sent>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2511 :         _STL_INTERNAL_STATIC_ASSERT(sentinel_for<remove_cvref_t<_Sent>, remove_cvref_t<_Iter>>);
; 2512 :         if constexpr (is_pointer_v<remove_cvref_t<_Sent>>) {
; 2513 :             return _Se + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Se$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2514 :         } else if constexpr (_Unwrappable_sentinel_for<_Sent, _Iter>) {
; 2515 :             return static_cast<_Sent&&>(_Se)._Unwrapped();
; 2516 :         } else {
; 2517 :             return static_cast<_Sent&&>(_Se);
; 2518 :         }
; 2519 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ENDP ; std::ranges::_Unwrap_sent<D3D12Model * *,D3D12Model * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z PROC ; std::ranges::_Unwrap_iter<D3D12Model * *,D3D12Model * *>, COMDAT

; 2497 :         !_Unwrappable_sentinel_for<_Sent, _Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2498 :         _STL_INTERNAL_STATIC_ASSERT(sentinel_for<remove_cvref_t<_Sent>, remove_cvref_t<_Iter>>);
; 2499 :         if constexpr (is_pointer_v<remove_cvref_t<_Iter>>) {
; 2500 :             return _It + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _It$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2501 :         } else if constexpr (_Unwrappable_sentinel_for<_Sent, _Iter>) {
; 2502 :             return static_cast<_Iter&&>(_It)._Unwrapped();
; 2503 :         } else {
; 2504 :             return static_cast<_Iter&&>(_It);
; 2505 :         }
; 2506 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ENDP ; std::ranges::_Unwrap_iter<D3D12Model * *,D3D12Model * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 705  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 706  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 707  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 708  :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@deallocate

; 709  :             _Al.deallocate(_Ptr, _Count);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Count$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0003d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 710  :         } else

  00042	eb 11		 jmp	 SHORT $LN3@deallocate
$LN2@deallocate:

; 711  : #endif // _HAS_CXX20
; 712  :         {
; 713  :             (void) _Al;
; 714  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00044	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00050	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN3@deallocate:

; 715  :         }
; 716  :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
<_Val2_0>$ = 96
??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z PROC ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><D3D12UploadBufferResource<D3D12PassConstants> * &>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  0002c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ENDP ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><D3D12UploadBufferResource<D3D12PassConstants> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
<_Val2_0>$ = 96
??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><DirectX::DescriptorHeap * &>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  0002c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><DirectX::DescriptorHeap * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xhash
;	COMDAT ??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z
_TEXT	SEGMENT
_Bucket$ = 0
_Where$ = 8
_End$ = 16
_Bucket_lo$ = 24
tv143 = 96
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
_Hashval$ = 152
??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find_last<unsigned int>, COMDAT

; 1566 :     _NODISCARD _Hash_find_last_result<_Nodeptr> _Find_last(const _Keyty& _Keyval, const size_t _Hashval) const {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__696C8ED8_xhash
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1567 :         // find the insertion point for _Keyval and whether an element identical to _Keyval is already in the container
; 1568 :         const size_type _Bucket = _Hashval & _Mask;

  0002d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00038	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Hashval$[rbp]
  0003f	48 23 c8	 and	 rcx, rax
  00042	48 8b c1	 mov	 rax, rcx
  00045	48 89 45 00	 mov	 QWORD PTR _Bucket$[rbp], rax

; 1569 :         _Nodeptr _Where         = _Vec._Mypair._Myval2._Myfirst[(_Bucket << 1) + 1]._Ptr;

  00049	48 8b 45 00	 mov	 rax, QWORD PTR _Bucket$[rbp]
  0004d	48 d1 e0	 shl	 rax, 1
  00050	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0005b	48 8b 44 c1 08	 mov	 rax, QWORD PTR [rcx+rax*8+8]
  00060	48 89 45 08	 mov	 QWORD PTR _Where$[rbp], rax

; 1570 :         const _Nodeptr _End     = _List._Mypair._Myval2._Myhead;

  00064	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0006f	48 89 45 10	 mov	 QWORD PTR _End$[rbp], rax

; 1571 :         if (_Where == _End) {

  00073	48 8b 45 10	 mov	 rax, QWORD PTR _End$[rbp]
  00077	48 39 45 08	 cmp	 QWORD PTR _Where$[rbp], rax
  0007b	75 29		 jne	 SHORT $LN5@Find_last

; 1572 :             return {_End, _Nodeptr{}};

  0007d	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00084	48 8b 4d 10	 mov	 rcx, QWORD PTR _End$[rbp]
  00088	48 89 08	 mov	 QWORD PTR [rax], rcx
  0008b	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00092	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0009a	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000a1	e9 b9 00 00 00	 jmp	 $LN1@Find_last
$LN5@Find_last:

; 1573 :         }
; 1574 : 
; 1575 :         const _Nodeptr _Bucket_lo = _Vec._Mypair._Myval2._Myfirst[_Bucket << 1]._Ptr;

  000a6	48 8b 45 00	 mov	 rax, QWORD PTR _Bucket$[rbp]
  000aa	48 d1 e0	 shl	 rax, 1
  000ad	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b4	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  000b8	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  000bc	48 89 45 18	 mov	 QWORD PTR _Bucket_lo$[rbp], rax
$LN2@Find_last:

; 1576 :         for (;;) {
; 1577 :             // Search backwards to maintain sorted [_Bucket_lo, _Bucket_hi] when !_Standard
; 1578 :             if (!_Traitsobj(_Keyval, _Traits::_Kfn(_Where->_Myval))) {

  000c0	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c7	48 89 45 60	 mov	 QWORD PTR tv143[rbp], rax
  000cb	48 8b 45 08	 mov	 rax, QWORD PTR _Where$[rbp]
  000cf	48 83 c0 10	 add	 rax, 16
  000d3	48 8b c8	 mov	 rcx, rax
  000d6	e8 00 00 00 00	 call	 ??$_Kfn@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@SAAEBIAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@@Z ; std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0>::_Kfn<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >
  000db	4c 8b c0	 mov	 r8, rax
  000de	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Keyval$[rbp]
  000e5	48 8b 4d 60	 mov	 rcx, QWORD PTR tv143[rbp]
  000e9	e8 00 00 00 00	 call	 ??$?RII@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_NAEBI0@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int,unsigned int>
  000ee	0f b6 c0	 movzx	 eax, al
  000f1	85 c0		 test	 eax, eax
  000f3	75 29		 jne	 SHORT $LN6@Find_last

; 1579 :                 if constexpr (!_Traits::_Standard) {
; 1580 :                     if (_Traitsobj(_Traits::_Kfn(_Where->_Myval), _Keyval)) {
; 1581 :                         return {_Where->_Next, _Nodeptr{}};
; 1582 :                     }
; 1583 :                 }
; 1584 : 
; 1585 :                 return {_Where->_Next, _Where};

  000f5	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000fc	48 8b 4d 08	 mov	 rcx, QWORD PTR _Where$[rbp]
  00100	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00103	48 89 08	 mov	 QWORD PTR [rax], rcx
  00106	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0010d	48 8b 4d 08	 mov	 rcx, QWORD PTR _Where$[rbp]
  00111	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00115	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0011c	eb 41		 jmp	 SHORT $LN1@Find_last
$LN6@Find_last:

; 1586 :             }
; 1587 : 
; 1588 :             if (_Where == _Bucket_lo) {

  0011e	48 8b 45 18	 mov	 rax, QWORD PTR _Bucket_lo$[rbp]
  00122	48 39 45 08	 cmp	 QWORD PTR _Where$[rbp], rax
  00126	75 26		 jne	 SHORT $LN7@Find_last

; 1589 :                 return {_Where, _Nodeptr{}};

  00128	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0012f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Where$[rbp]
  00133	48 89 08	 mov	 QWORD PTR [rax], rcx
  00136	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0013d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00145	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0014c	eb 11		 jmp	 SHORT $LN1@Find_last
$LN7@Find_last:

; 1590 :             }
; 1591 : 
; 1592 :             _Where = _Where->_Prev;

  0014e	48 8b 45 08	 mov	 rax, QWORD PTR _Where$[rbp]
  00152	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00156	48 89 45 08	 mov	 QWORD PTR _Where$[rbp], rax

; 1593 :         }

  0015a	e9 61 ff ff ff	 jmp	 $LN2@Find_last
$LN1@Find_last:

; 1594 :     }

  0015f	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00163	5d		 pop	 rbp
  00164	c3		 ret	 0
??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find_last<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<D3D12Model *> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z ; std::allocator<D3D12Model *>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z PROC ; std::_Destroy_range<std::allocator<D3D12PassConstants> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 96
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 00	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 0

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 69   :         if (_Count > _Max_possible) {
; 70   :             _Throw_bad_array_new_length(); // multiply overflow
; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  0001f	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]

; 75   : }

  00023	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
_Location$ = 112
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z PROC		; std::construct_at<char,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 c7 45 40 01
	00 00 00	 mov	 QWORD PTR $T1[rbp], 1
  00024	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00028	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00031	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00035	48 8b 7d 48	 mov	 rdi, QWORD PTR $T2[rbp]
  00039	33 c0		 xor	 eax, eax
  0003b	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003f	f3 aa		 rep stosb
  00041	48 8b 45 48	 mov	 rax, QWORD PTR $T2[rbp]

; 243  : }

  00045	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ENDP		; std::construct_at<char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > const >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z PROC ; std::exchange<DirectX::DescriptorHeap *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z ENDP ; std::exchange<DirectX::DescriptorHeap *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z PROC ; std::exchange<DirectX::DescriptorHeap *,DirectX::DescriptorHeap * &>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z ENDP ; std::exchange<DirectX::DescriptorHeap *,DirectX::DescriptorHeap * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z PROC ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z ENDP ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z PROC ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,D3D12UploadBufferResource<D3D12PassConstants> * &>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z ENDP ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,D3D12UploadBufferResource<D3D12PassConstants> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12PassConstants>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 0
_Mylast$ = 8
this$ = 96
<_Val_0>$ = 104
??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_one_at_back<IIContainer<void,long,long> * const &>, COMDAT

; 775  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 776  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 777  :         auto& _My_data   = _Mypair._Myval2;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 778  :         pointer& _Mylast = _My_data._Mylast;

  00028	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002c	48 83 c0 10	 add	 rax, 16
  00030	48 89 45 08	 mov	 QWORD PTR _Mylast$[rbp], rax

; 779  : 
; 780  :         if (_Mylast != _My_data._Myend) {

  00034	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00038	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00043	74 0f		 je	 SHORT $LN2@Emplace_on

; 781  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00045	48 8b 55 68	 mov	 rdx, QWORD PTR <_Val_0>$[rbp]
  00049	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004d	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_back_with_unused_capacity<IIContainer<void,long,long> * const &>
  00052	eb 14		 jmp	 SHORT $LN1@Emplace_on
$LN2@Emplace_on:

; 782  :         }
; 783  : 
; 784  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00054	4c 8b 45 68	 mov	 r8, QWORD PTR <_Val_0>$[rbp]
  00058	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAPEAPEAV?$IIContainer@XJJ@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_reallocate<IIContainer<void,long,long> * const &>
$LN1@Emplace_on:

; 785  :     }

  00068	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_one_at_back<IIContainer<void,long,long> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 0
_Ptr_container$ = 8
_Ptr$ = 16
_Bytes$ = 112
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 136  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 137  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 138  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00022	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00026	48 89 45 00	 mov	 QWORD PTR _Block_size$[rbp], rax

; 139  :     if (_Block_size <= _Bytes) {

  0002a	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  0002e	48 39 45 00	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00032	77 05		 ja	 SHORT $LN8@Allocate_m

; 140  :         _Throw_bad_array_new_length(); // add overflow

  00034	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 141  :     }
; 142  : 
; 143  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00039	48 8b 4d 00	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00042	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 144  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00046	48 83 7d 08 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  0004b	74 02		 je	 SHORT $LN9@Allocate_m
  0004d	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN12@Allocate_m
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 90 00 00
	00		 mov	 r9d, 144		; 00000090H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 86		 jne	 SHORT $LN4@Allocate_m

; 145  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000c4	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000c8	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000cc	48 89 45 10	 mov	 QWORD PTR _Ptr$[rbp], rax

; 146  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d0	b8 08 00 00 00	 mov	 eax, 8
  000d5	48 6b c0 ff	 imul	 rax, rax, -1
  000d9	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000dd	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000e1	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 147  : 
; 148  : #ifdef _DEBUG
; 149  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000e5	b8 08 00 00 00	 mov	 eax, 8
  000ea	48 6b c0 fe	 imul	 rax, rax, -2
  000ee	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000f2	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  000fc	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 150  : #endif // _DEBUG
; 151  :     return _Ptr;

  00100	48 8b 45 10	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 152  : }

  00104	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Can_memmove$ = 16
_Backout$ = 24
$T1 = 112
tv86 = 120
tv84 = 128
tv82 = 136
_First$ = 160
_Last$ = 168
_Dest$ = 176
_Al$ = 184
??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z PROC ; std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >, COMDAT

; 1818 :     _InIt _First, _Se _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1819 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1820 :     // note: only called internally from elsewhere in the STL
; 1821 :     using _Ptrval = typename _Alloc::value_type*;
; 1822 : 
; 1823 : #ifdef __cpp_lib_concepts
; 1824 :     auto _UFirst = _RANGES _Unwrap_iter<_Se>(_STD move(_First));

  0002d	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  00034	e8 00 00 00 00	 call	 ??$_Unwrap_iter@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ; std::ranges::_Unwrap_iter<D3D12Model * *,D3D12Model * *>
  00039	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 1825 :     auto _ULast  = _RANGES _Unwrap_sent<_InIt>(_STD move(_Last));

  0003d	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  00044	e8 00 00 00 00	 call	 ??$_Unwrap_sent@PEAPEAVD3D12Model@@PEAPEAV1@@ranges@std@@YA?A_T$$QEAPEAPEAVD3D12Model@@@Z ; std::ranges::_Unwrap_sent<D3D12Model * *,D3D12Model * *>
  00049	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 1826 : #else // ^^^ __cpp_lib_concepts / !__cpp_lib_concepts vvv
; 1827 :     // In pre-concepts world, _Uninitialized_copy should only ever be called with an iterator
; 1828 :     // and sentinel of the same type, so `_Get_unwrapped` is fine to call.
; 1829 :     auto _UFirst = _Get_unwrapped(_STD move(_First));
; 1830 :     auto _ULast  = _Get_unwrapped(_STD move(_Last));
; 1831 : #endif // ^^^ !__cpp_lib_concepts ^^^
; 1832 : 
; 1833 :     constexpr bool _Can_memmove = _Sent_copy_cat<decltype(_UFirst), decltype(_ULast), _Ptrval>::_Bitcopy_constructible

  0004d	c6 45 10 01	 mov	 BYTE PTR _Can_memmove$[rbp], 1

; 1834 :                                && _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>::value;
; 1835 : 
; 1836 :     if constexpr (_Can_memmove) {
; 1837 : #if _HAS_CXX20
; 1838 :         if (!_STD is_constant_evaluated())

  00051	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00056	0f b6 c0	 movzx	 eax, al
  00059	85 c0		 test	 eax, eax
  0005b	75 74		 jne	 SHORT $LN5@Uninitiali

; 1839 : #endif // _HAS_CXX20
; 1840 :         {
; 1841 :             if constexpr (is_same_v<decltype(_UFirst), decltype(_ULast)>) {
; 1842 :                 _Copy_memmove(_To_address(_UFirst), _To_address(_ULast), _Unfancy(_Dest));

  0005d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00064	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVD3D12Model@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@@Z ; std::_Unfancy<D3D12Model *>
  00069	48 89 45 78	 mov	 QWORD PTR tv86[rbp], rax
  0006d	48 8d 4d 08	 lea	 rcx, QWORD PTR _ULast$[rbp]
  00071	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
  00076	48 89 85 80 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0007d	48 8d 4d 00	 lea	 rcx, QWORD PTR _UFirst$[rbp]
  00081	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVD3D12Model@@@std@@YA?A_PAEBQEAPEAVD3D12Model@@@Z ; std::_To_address<D3D12Model * *>
  00086	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  0008d	4c 8b 45 78	 mov	 r8, QWORD PTR tv86[rbp]
  00091	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR tv84[rbp]
  00098	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  0009f	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEAVD3D12Model@@PEAPEAV1@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00@Z ; std::_Copy_memmove<D3D12Model * *,D3D12Model * *>

; 1843 :                 _Dest += _ULast - _UFirst;

  000a4	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000a8	48 8b 4d 08	 mov	 rcx, QWORD PTR _ULast$[rbp]
  000ac	48 2b c8	 sub	 rcx, rax
  000af	48 8b c1	 mov	 rax, rcx
  000b2	48 c1 f8 03	 sar	 rax, 3
  000b6	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  000bd	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]
  000c1	48 89 85 b0 00
	00 00		 mov	 QWORD PTR _Dest$[rbp], rax

; 1844 :             } else {
; 1845 :                 const auto _Count = static_cast<size_t>(_ULast - _UFirst);
; 1846 :                 _Copy_memmove_n(_To_address(_UFirst), _Count, _Unfancy(_Dest));
; 1847 :                 _Dest += _Count;
; 1848 :             }
; 1849 :             return _Dest;

  000c8	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Dest$[rbp]
  000cf	eb 59		 jmp	 SHORT $LN1@Uninitiali
$LN5@Uninitiali:

; 1850 :         }
; 1851 :     }
; 1852 : 
; 1853 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  000d1	4c 8b 85 b8 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  000d8	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Dest$[rbp]
  000df	48 8d 4d 18	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000e3	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@PEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Uninitialized_backout_al<std::allocator<D3D12Model *> >
  000e8	90		 npad	 1

; 1854 :     for (; _UFirst != _ULast; ++_UFirst) {

  000e9	eb 0c		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  000eb	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000ef	48 83 c0 08	 add	 rax, 8
  000f3	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
  000f7	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  000fb	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  000ff	74 0f		 je	 SHORT $LN3@Uninitiali

; 1855 :         _Backout._Emplace_back(*_UFirst);

  00101	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  00105	48 8d 4d 18	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00109	e8 00 00 00 00	 call	 ??$_Emplace_back@AEAPEAVD3D12Model@@@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAXAEAPEAVD3D12Model@@@Z ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Emplace_back<D3D12Model * &>

; 1856 :     }

  0010e	eb db		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1857 : 
; 1858 :     return _Backout._Release();

  00110	48 8d 4d 18	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00114	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::_Release
  00119	48 89 45 70	 mov	 QWORD PTR $T1[rbp], rax
  0011d	48 8d 4d 18	 lea	 rcx, QWORD PTR _Backout$[rbp]
  00121	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::~_Uninitialized_backout_al<std::allocator<D3D12Model *> >
  00126	48 8b 45 70	 mov	 rax, QWORD PTR $T1[rbp]
$LN1@Uninitiali:

; 1859 : }

  0012a	48 8d a5 90 00
	00 00		 lea	 rsp, QWORD PTR [rbp+144]
  00131	5d		 pop	 rbp
  00132	c3		 ret	 0
??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z ENDP ; std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Can_memmove$ = 16
_Backout$ = 24
$T1 = 112
tv86 = 120
tv84 = 128
tv82 = 136
_First$ = 160
_Last$ = 168
_Dest$ = 176
_Al$ = 184
?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 18	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<D3D12Model *> >::~_Uninitialized_backout_al<std::allocator<D3D12Model *> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >::~_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >, COMDAT

; 42   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 43   :         if (_Target) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 0c		 je	 SHORT $LN2@Tidy_guard

; 44   :             _Target->_Tidy();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002c	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Tidy
$LN2@Tidy_guard:

; 45   :         }
; 46   :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >::~_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1123 : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1124 :     // deallocate a plain pointer using an allocator
; 1125 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1126 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1127 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00033	90		 npad	 1

; 1128 :     } else {
; 1129 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1130 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1131 :     }
; 1132 : }

  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
_TEXT	SEGMENT
$T1 = 64
tv70 = 72
this$ = 96
_Ptr$ = 104
??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>, COMDAT

; 3223 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv70[rbp], rax
  00028	4c 8d 45 68	 lea	 r8, QWORD PTR _Ptr$[rbp]
  0002c	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00030	48 8b 4d 48	 mov	 rcx, QWORD PTR tv70[rbp]
  00034	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><D3D12UploadBufferResource<D3D12PassConstants> * &>
  00039	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv70 = 72
this$ = 96
_Ptr$ = 104
??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>, COMDAT

; 3223 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv70[rbp], rax
  00028	4c 8d 45 68	 lea	 r8, QWORD PTR _Ptr$[rbp]
  0002c	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00030	48 8b 4d 48	 mov	 rcx, QWORD PTR tv70[rbp]
  00034	e8 00 00 00 00	 call	 ??$?0AEAPEAVDescriptorHeap@DirectX@@@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVDescriptorHeap@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><DirectX::DescriptorHeap * &>
  00039	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z
_TEXT	SEGMENT
tv70 = 64
tv72 = 72
this$ = 96
<params_0>$ = 104
<params_1>$ = 112
?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z PROC ; TMethodContainter<D3D12Renderer,void,long,long>::Call, COMDAT

; 76   : 	{

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 77   : 		return (uClass->*pFunc)(params...);

  00024	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0002c	48 89 45 40	 mov	 QWORD PTR tv70[rbp], rax
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00038	48 89 45 48	 mov	 QWORD PTR tv72[rbp], rax
  0003c	44 8b 45 70	 mov	 r8d, DWORD PTR <params_1>$[rbp]
  00040	8b 55 68	 mov	 edx, DWORD PTR <params_0>$[rbp]
  00043	48 8b 4d 40	 mov	 rcx, QWORD PTR tv70[rbp]
  00047	ff 55 48	 call	 QWORD PTR tv72[rbp]

; 78   : 	}

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?Call@?$TMethodContainter@VD3D12Renderer@@XJJ@@UEAAXJJ@Z ENDP ; TMethodContainter<D3D12Renderer,void,long,long>::Call
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
_TEXT	SEGMENT
this$ = 80
cl$ = 88
func$ = 96
??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z PROC ; TMethodContainter<D3D12Renderer,void,long,long>::TMethodContainter<D3D12Renderer,void,long,long>, COMDAT

; 69   : 	TMethodContainter(UserClass* cl, FFuncPtr func) : uClass(cl), pFunc(func)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 70   : 	{

  00025	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0?$IIContainer@XJJ@@QEAA@XZ
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$TMethodContainter@VD3D12Renderer@@XJJ@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx

; 69   : 	TMethodContainter(UserClass* cl, FFuncPtr func) : uClass(cl), pFunc(func)

  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b 4d 60	 mov	 rcx, QWORD PTR func$[rbp]
  00044	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 4d 58	 mov	 rcx, QWORD PTR cl$[rbp]
  00050	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 71   : 
; 72   : 	}

  00054	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ENDP ; TMethodContainter<D3D12Renderer,void,long,long>::TMethodContainter<D3D12Renderer,void,long,long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$IIContainer@XJJ@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$IIContainer@XJJ@@QEAA@XZ PROC			; IIContainer<void,long,long>::IIContainer<void,long,long>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b ec	 mov	 rbp, rsp
  0000d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$IIContainer@XJJ@@6B@
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$IIContainer@XJJ@@QEAA@XZ ENDP			; IIContainer<void,long,long>::IIContainer<void,long,long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal, COMDAT

; 2193 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2194 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first

; 2195 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
_TEXT	SEGMENT
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range, COMDAT

; 2174 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2175 :         // orphan iterators within specified (inclusive) range
; 2176 : #if _HAS_CXX20
; 2177 :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@Orphan_ran

; 2178 :             _Orphan_range_unlocked(_First, _Last);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_unlocked

; 2179 :         } else

  00042	eb 11		 jmp	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:

; 2180 : #endif // _HAS_CXX20
; 2181 :         {
; 2182 :             _Orphan_range_locked(_First, _Last);

  00044	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00048	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  0004c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked
$LN3@Orphan_ran:

; 2183 :         }
; 2184 :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?_Orphan_range@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked, COMDAT

; 2169 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2170 :         _Lockit _Lock(_LOCK_DEBUG);

  00025	ba 03 00 00 00	 mov	 edx, 3
  0002a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00034	90		 npad	 1

; 2171 :         _Orphan_range_unlocked(_First, _Last);

  00035	4c 8b 45 70	 mov	 r8, QWORD PTR _Last$[rbp]
  00039	48 8b 55 68	 mov	 rdx, QWORD PTR _First$[rbp]
  0003d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_unlocked
  00046	90		 npad	 1

; 2172 :     }

  00047	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00051	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA PROC ; `std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0000e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z@4HA ENDP ; `std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
this$ = 112
_First$ = 120
_Last$ = 128
?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_unlocked, COMDAT

; 2155 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2156 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00028	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 83 c0 08	 add	 rax, 8
  00033	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 2157 :         while (*_Pnext) {

  00037	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0003b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003f	74 5b		 je	 SHORT $LN3@Orphan_ran

; 2158 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00041	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0004c	48 89 45 08	 mov	 QWORD PTR _Pnextptr$1[rbp], rax

; 2159 :             const auto _Temp     = *_Pnext;

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 45 10	 mov	 QWORD PTR _Temp$2[rbp], rax

; 2160 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  0005b	48 8b 45 78	 mov	 rax, QWORD PTR _First$[rbp]
  0005f	48 39 45 08	 cmp	 QWORD PTR _Pnextptr$1[rbp], rax
  00063	72 0d		 jb	 SHORT $LN6@Orphan_ran
  00065	48 8b 45 08	 mov	 rax, QWORD PTR _Pnextptr$1[rbp]
  00069	48 39 85 80 00
	00 00		 cmp	 QWORD PTR _Last$[rbp], rax
  00070	73 0e		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2161 :                 _Pnext = &_Temp->_Mynextiter;

  00072	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00076	48 83 c0 08	 add	 rax, 8
  0007a	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 2162 :             } else { // orphan the iterator

  0007e	eb 1a		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2163 :                 _Temp->_Myproxy = nullptr;

  00080	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00084	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2164 :                 *_Pnext         = _Temp->_Mynextiter;

  0008b	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0008f	48 8b 4d 10	 mov	 rcx, QWORD PTR _Temp$2[rbp]
  00093	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00097	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2165 :             }
; 2166 :         }

  0009a	eb 9b		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2167 :     }

  0009c	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000a0	5d		 pop	 rbp
  000a1	c3		 ret	 0
?_Orphan_range_unlocked@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAXPEAPEAV?$IIContainer@XJJ@@0@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Xlength, COMDAT

; 2146 :     [[noreturn]] static void _Xlength() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2147 :         _Xlength_error("vector too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 2148 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlength@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@CAXXZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
_Newvec$ = 136
_Newsize$ = 144
_Newcapacity$ = 152
?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Change_array, COMDAT

; 2022 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2023 :         // orphan all iterators, discard old array, acquire new array
; 2024 :         auto& _Al         = _Getal();

  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  00039	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2025 :         auto& _My_data    = _Mypair._Myval2;

  0003d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00044	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2026 :         pointer& _Myfirst = _My_data._Myfirst;

  00048	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2027 :         pointer& _Mylast  = _My_data._Mylast;

  00054	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2028 :         pointer& _Myend   = _My_data._Myend;

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00064	48 83 c0 18	 add	 rax, 24
  00068	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2029 : 
; 2030 :         _My_data._Orphan_all();

  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2031 : 
; 2032 :         if (_Myfirst) { // destroy and deallocate old array

  00075	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00079	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0007d	74 3f		 je	 SHORT $LN2@Change_arr

; 2033 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0007f	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00083	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00087	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008a	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0008e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00091	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >

; 2034 :             _ASAN_VECTOR_REMOVE;
; 2035 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00096	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0009a	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0009e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 2b c1	 sub	 rax, rcx
  000a7	48 c1 f8 03	 sar	 rax, 3
  000ab	4c 8b c0	 mov	 r8, rax
  000ae	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b2	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000b5	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000b9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::deallocate
$LN2@Change_arr:

; 2036 :         }
; 2037 : 
; 2038 :         _Myfirst = _Newvec;

  000be	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000c2	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000c9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2039 :         _Mylast  = _Newvec + _Newsize;

  000cc	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000d3	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  000da	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000de	48 8b 4d 18	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  000e2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2040 :         _Myend   = _Newvec + _Newcapacity;

  000e5	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000ec	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Newcapacity$[rbp]
  000f3	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000f7	48 8b 4d 20	 mov	 rcx, QWORD PTR _Myend$[rbp]
  000fb	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2041 :         _ASAN_VECTOR_CREATE;
; 2042 :     }

  000fe	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?_Change_array@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXQEAPEAV?$IIContainer@XJJ@@_K1@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 0
_Max$ = 8
_Geometric$ = 16
this$ = 112
_Newsize$ = 120
?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Calculate_growth, COMDAT

; 1970 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1971 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1972 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00027	e8 00 00 00 00	 call	 ?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::capacity
  0002c	48 89 45 00	 mov	 QWORD PTR _Oldcapacity$[rbp], rax

; 1973 :         const auto _Max              = max_size();

  00030	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::max_size
  00039	48 89 45 08	 mov	 QWORD PTR _Max$[rbp], rax

; 1974 : 
; 1975 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003d	33 d2		 xor	 edx, edx
  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00043	b9 02 00 00 00	 mov	 ecx, 2
  00048	48 f7 f1	 div	 rcx
  0004b	48 8b 4d 08	 mov	 rcx, QWORD PTR _Max$[rbp]
  0004f	48 2b c8	 sub	 rcx, rax
  00052	48 8b c1	 mov	 rax, rcx
  00055	48 39 45 00	 cmp	 QWORD PTR _Oldcapacity$[rbp], rax
  00059	76 06		 jbe	 SHORT $LN2@Calculate_

; 1976 :             return _Max; // geometric growth would overflow

  0005b	48 8b 45 08	 mov	 rax, QWORD PTR _Max$[rbp]
  0005f	eb 30		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1977 :         }
; 1978 : 
; 1979 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00061	33 d2		 xor	 edx, edx
  00063	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00067	b9 02 00 00 00	 mov	 ecx, 2
  0006c	48 f7 f1	 div	 rcx
  0006f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Oldcapacity$[rbp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 89 45 10	 mov	 QWORD PTR _Geometric$[rbp], rax

; 1980 : 
; 1981 :         if (_Geometric < _Newsize) {

  0007d	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  00081	48 39 45 10	 cmp	 QWORD PTR _Geometric$[rbp], rax
  00085	73 06		 jae	 SHORT $LN3@Calculate_

; 1982 :             return _Newsize; // geometric growth would be insufficient

  00087	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  0008b	eb 04		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1983 :         }
; 1984 : 
; 1985 :         return _Geometric; // geometric growth is sufficient

  0008d	48 8b 45 10	 mov	 rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1986 :     }

  00091	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::capacity, COMDAT

; 1886 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1887 :         auto& _My_data = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1888 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0002f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00033	48 2b c1	 sub	 rax, rcx
  00036	48 c1 f8 03	 sar	 rax, 3

; 1889 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?capacity@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::max_size, COMDAT

; 1881 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1882 :         return (_STD min)(

  0001b	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEBAAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::max_size
  0002c	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00030	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00035	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00039	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0003d	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00046	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1883 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1884 :     }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?max_size@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z
_TEXT	SEGMENT
this$ = 80
_Val$ = 88
?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::push_back, COMDAT

; 871  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 872  :         _Emplace_one_at_back(_Val);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Val$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Emplace_one_at_back@AEBQEAV?$IIContainer@XJJ@@@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAPEAV?$IIContainer@XJJ@@AEBQEAV2@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Emplace_one_at_back<IIContainer<void,long,long> * const &>

; 873  :     }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@SA_KAEBV?$allocator@PEAV?$IIContainer@XJJ@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<IIContainer<void,long,long> *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z PROC ; std::allocator<IIContainer<void,long,long> *>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@_K@Z ENDP ; std::allocator<IIContainer<void,long,long> *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z PROC ; std::allocator<IIContainer<void,long,long> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ENDP ; std::allocator<IIContainer<void,long,long> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00023	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00023	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z
_TEXT	SEGMENT
_Val$ = 80
_Keyval$ = 88
??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z PROC		; std::_Fnv1a_append_value<unsigned int>, COMDAT

; 2344 :     const size_t _Val, const _Kty& _Keyval) noexcept { // accumulate _Keyval into partial FNV-1a hash _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2345 :     static_assert(is_trivial_v<_Kty>, "Only trivial types can be directly hashed.");
; 2346 :     return _Fnv1a_append_bytes(_Val, &reinterpret_cast<const unsigned char&>(_Keyval), sizeof(_Kty));

  00020	41 b8 04 00 00
	00		 mov	 r8d, 4
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Keyval$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR _Val$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z ; std::_Fnv1a_append_bytes

; 2347 : }

  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z ENDP		; std::_Fnv1a_append_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xhash
;	COMDAT ??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z
_TEXT	SEGMENT
_Target$1 = 0
$T2 = 72
this$ = 112
_Keyval$ = 120
_Hashval$ = 128
??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find<unsigned int>, COMDAT

; 1212 :     _Nodeptr _Find(const _Keyty& _Keyval, const size_t _Hashval) const {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__696C8ED8_xhash
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1213 :         if constexpr (_Traits::_Multi) {
; 1214 :             return _Find_first(_Keyval, _Hashval);
; 1215 :         } else {
; 1216 :             // use _Find_last for unique containers to avoid increase in code size of instantiating _Find_first
; 1217 :             auto _Target = _Find_last(_Keyval, _Hashval)._Duplicate;

  00028	4c 8b 8d 80 00
	00 00		 mov	 r9, QWORD PTR _Hashval$[rbp]
  0002f	4c 8b 45 78	 mov	 r8, QWORD PTR _Keyval$[rbp]
  00033	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  00037	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0003b	e8 00 00 00 00	 call	 ??$_Find_last@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Hash_find_last_result@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@std@@@1@AEBI_K@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find_last<unsigned int>
  00040	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00044	48 89 45 00	 mov	 QWORD PTR _Target$1[rbp], rax

; 1218 :             if (_Target) {

  00048	48 83 7d 00 00	 cmp	 QWORD PTR _Target$1[rbp], 0
  0004d	74 06		 je	 SHORT $LN2@Find

; 1219 :                 return _Target;

  0004f	48 8b 45 00	 mov	 rax, QWORD PTR _Target$1[rbp]
  00053	eb 08		 jmp	 SHORT $LN1@Find
$LN2@Find:

; 1220 :             }
; 1221 : 
; 1222 :             return _List._Mypair._Myval2._Myhead;

  00055	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
$LN1@Find:

; 1223 :         }
; 1224 :     }

  0005d	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xhash
;	COMDAT ??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z
_TEXT	SEGMENT
tv75 = 64
this$ = 96
_Keyval$ = 104
??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z PROC ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>, COMDAT

; 147  :     _NODISCARD size_t operator()(const _Keyty& _Keyval) const noexcept(_Nothrow_hash<_Hasher, _Keyty>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__696C8ED8_xhash
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 148  :         // hash _Keyval to size_t value
; 149  :         return static_cast<size_t>(_Mypair._Get_first()(_Keyval));

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
  0002c	48 89 45 40	 mov	 QWORD PTR tv75[rbp], rax
  00030	48 8b 55 68	 mov	 rdx, QWORD PTR _Keyval$[rbp]
  00034	48 8b 4d 40	 mov	 rcx, QWORD PTR tv75[rbp]
  00038	e8 00 00 00 00	 call	 ??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()

; 150  :     }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z ENDP ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 10 00 00 00	 mov	 ecx, 16
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00036	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 243  : }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z PROC	; std::construct_at<char,char const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 01 00 00 00	 mov	 ecx, 1
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0003d	88 08		 mov	 BYTE PTR [rax], cl
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ENDP	; std::construct_at<char,char const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 75   : }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	75 15		 jne	 SHORT $LN2@Allocate

; 235  : #endif // _HAS_CXX20
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00027	48 81 7d 50 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0002f	72 0b		 jb	 SHORT $LN3@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00035	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0003a	eb 14		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003c	48 83 7d 50 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00041	74 0b		 je	 SHORT $LN4@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

  00043	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  0004c	eb 02		 jmp	 SHORT $LN1@Allocate
$LN4@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004e	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 248  : }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 80
_Bytes$ = 88
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0b		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00030	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete

; 256  :     } else

  00035	eb 25		 jmp	 SHORT $LN3@Deallocate
$LN2@Deallocate:

; 257  : #endif // _HAS_CXX20
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00037	48 81 7d 58 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0003f	72 0d		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00041	48 8d 55 58	 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00045	48 8d 4d 50	 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0004e	48 8b 55 58	 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00052	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00056	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0005b	90		 npad	 1
$LN3@Deallocate:

; 265  :     }
; 266  : }

  0005c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1483 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1484 :         if (_Ptr) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 14		 je	 SHORT $LN2@Container_

; 1485 :             _Delete_plain_internal(_Al, _Ptr);

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00030	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00034	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1486 :         }
; 1487 :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 96
_Al_$ = 104
_Mycont$ = 112
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1469 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
  0002e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00036	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1470 :         // create a new _Container_proxy pointing at _Mycont
; 1471 :         _Ptr = _Unfancy(_Al_.allocate(1));

  0003a	ba 01 00 00 00	 mov	 edx, 1
  0003f	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00043	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00050	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00054	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1472 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00057	48 8b 4d 70	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00060	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00064	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0006f	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1473 :         _Mycont._Myproxy = _Ptr;

  00074	48 8b 45 70	 mov	 rax, QWORD PTR _Mycont$[rbp]
  00078	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0007c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1474 :     }

  00082	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00086	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z PROC ; std::_Destroy_range<std::allocator<D3D12Model *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z PROC ; std::addressof<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S30$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>, COMDAT

; 2609 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2610 :         auto& _My_data = _Mypair._Myval2;

  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2611 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2612 : 
; 2613 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2614 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2615 :         } else {
; 2616 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2617 :         }
; 2618 : 
; 2619 :         if (_Count > max_size()) {

  00033	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0003f	48 39 85 c0 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00046	76 05		 jbe	 SHORT $LN2@Construct

; 2620 :             _Xlen_string(); // result too long

  00048	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Construct:

; 2621 :         }
; 2622 : 
; 2623 :         auto& _Al       = _Getal();

  0004d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2624 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0005d	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  00061	48 8d 4d 18	 lea	 rcx, QWORD PTR $S30$[rbp]
  00065	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006a	48 8d 45 18	 lea	 rax, QWORD PTR $S30$[rbp]
  0006e	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2625 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  00072	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00076	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0007a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00083	90		 npad	 1

; 2626 : 
; 2627 :         if (_Count < _BUF_SIZE) {

  00084	48 83 bd c0 00
	00 00 10	 cmp	 QWORD PTR _Count$[rbp], 16
  0008c	73 77		 jae	 SHORT $LN3@Construct

; 2628 :             _My_data._Mysize = _Count;

  0008e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00099	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2629 :             _My_data._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a1	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2630 : 
; 2631 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2632 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2633 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2634 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2635 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);

  000a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000b8	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2636 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  000c7	c6 85 80 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  000ce	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000d2	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  000d9	48 8d 44 08 08	 lea	 rax, QWORD PTR [rax+rcx+8]
  000de	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000e5	48 8b c8	 mov	 rcx, rax
  000e8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2637 :             } else { // _Strat == _Construct_strategy::_From_string
; 2638 : #ifdef _INSERT_STRING_ANNOTATION
; 2639 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2640 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2641 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2642 : #endif // !_INSERT_STRING_ANNOTATION
; 2643 :             }
; 2644 : 
; 2645 :             _Proxy._Release();

  000ed	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f1	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f6	90		 npad	 1

; 2646 :             return;

  000f7	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00100	e9 02 01 00 00	 jmp	 $LN4@Construct
$LN3@Construct:

; 2647 :         }
; 2648 : 
; 2649 :         _My_data._Myres         = _BUF_SIZE - 1;

  00105	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00109	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2650 :         size_type _New_capacity = _Calculate_growth(_Count);

  00111	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00118	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00124	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2651 :         ++_New_capacity;

  00128	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0012c	48 ff c0	 inc	 rax
  0012f	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2652 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  00133	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00137	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013b	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  00140	48 89 45 38	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 2653 :         --_New_capacity;

  00144	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00148	48 ff c8	 dec	 rax
  0014b	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2654 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0014f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00153	48 83 c0 08	 add	 rax, 8
  00157	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  0015b	48 8b c8	 mov	 rcx, rax
  0015e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2655 : 
; 2656 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  00163	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00167	48 ff c0	 inc	 rax
  0016a	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  00171	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00175	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0017a	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00181	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR tv154[rbp]
  00188	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  0018f	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 2657 : 
; 2658 :         _My_data._Mysize = _Count;

  00194	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00198	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  0019f	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2659 :         _My_data._Myres  = _New_capacity;

  001a3	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001a7	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  001ab	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2660 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2661 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2662 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2663 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2664 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);

  001af	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001b3	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001b8	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  001bf	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  001c6	48 8b c8	 mov	 rcx, rax
  001c9	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2665 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  001ce	c6 85 81 00 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  001d5	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001d9	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001de	48 03 85 c0 00
	00 00		 add	 rax, QWORD PTR _Count$[rbp]
  001e5	48 8d 95 81 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2666 :         } else { // _Strat == _Construct_strategy::_From_string
; 2667 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2668 :         }
; 2669 : 
; 2670 :         _ASAN_STRING_CREATE(*this);
; 2671 :         _Proxy._Release();

  001f4	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  001f8	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  001fd	90		 npad	 1

; 2672 :     }

  001fe	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00202	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN4@Construct:
  00207	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  0020e	5d		 pop	 rbp
  0020f	c3		 ret	 0
$LN6@Construct:
??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S30$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Convert_size@_K_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 80
??$_Convert_size@_K_K@std@@YA_K_K@Z PROC		; std::_Convert_size<unsigned __int64,unsigned __int64>, COMDAT

; 1108 :     sizeof(_Unsigned_type) <= sizeof(_Size_type)) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1109 :     // convert _Unsigned_type to _Size_type, avoiding truncation
; 1110 :     _STL_INTERNAL_STATIC_ASSERT(_Unsigned_type(-1) > 0);
; 1111 :     _STL_INTERNAL_STATIC_ASSERT(_Size_type(-1) > 0);
; 1112 : 
; 1113 :     if constexpr (sizeof(_Unsigned_type) > sizeof(_Size_type)) {
; 1114 :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 1115 :             _Xlength_error("size is too long for _Size_type");
; 1116 :         }
; 1117 :     }
; 1118 : 
; 1119 :     return static_cast<_Size_type>(_Len);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Len$[rbp]

; 1120 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Convert_size@_K_K@std@@YA_K_K@Z ENDP		; std::_Convert_size<unsigned __int64,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z
_TEXT	SEGMENT
_Val$ = 80
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z PROC ; std::pointer_traits<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > *>::pointer_to, COMDAT

; 306  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 307  :         return _STD addressof(_Val);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Val$[rbp]
  0001f	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@YAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@0@AEAU10@@Z ; std::addressof<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >

; 308  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z ENDP ; std::pointer_traits<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z
_TEXT	SEGMENT
_Al$ = 0
_Alproxy$ = 8
$S22$ = 16
_My_data$ = 24
_Proxy$ = 32
_Guard$1 = 48
this$ = 144
_Count$ = 152
<_Val_0>$ = 160
<_Val_1>$ = 168
??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>, COMDAT

; 2065 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2066 :         // Dispatches between the three sized constructions.
; 2067 :         // 1-arg -> value-construction, e.g. vector(5)
; 2068 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 2069 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 2070 :         auto& _Al       = _Getal();

  0002d	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  00039	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2071 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0003d	48 8b 55 00	 mov	 rdx, QWORD PTR _Al$[rbp]
  00041	48 8d 4d 10	 lea	 rcx, QWORD PTR $S22$[rbp]
  00045	e8 00 00 00 00	 call	 ??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12Model *>
  0004a	48 8d 45 10	 lea	 rax, QWORD PTR $S22$[rbp]
  0004e	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2072 :         auto& _My_data  = _Mypair._Myval2;

  00052	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 89 45 18	 mov	 QWORD PTR _My_data$[rbp], rax

; 2073 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005d	4c 8b 45 18	 mov	 r8, QWORD PTR _My_data$[rbp]
  00061	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00065	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00069	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0006e	90		 npad	 1

; 2074 :         if (_Count != 0) {

  0006f	48 83 bd 98 00
	00 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00077	74 5c		 je	 SHORT $LN2@Construct_

; 2075 :             _Buy_nonzero(_Count);

  00079	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00080	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00087	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_nonzero

; 2076 :             _Tidy_guard<vector> _Guard{this};

  0008c	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00093	48 89 45 30	 mov	 QWORD PTR _Guard$1[rbp], rax

; 2077 :             if constexpr (sizeof...(_Val) == 0) {
; 2078 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 2079 :             } else if constexpr (sizeof...(_Val) == 1) {
; 2080 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 2081 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 2082 :             } else if constexpr (sizeof...(_Val) == 2) {
; 2083 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

  00097	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  0009b	48 8b 45 18	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009f	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  000a3	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR <_Val_1>$[rbp]
  000aa	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ad	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR <_Val_0>$[rbp]
  000b4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000b7	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEAPEAVD3D12Model@@PEAPEAV1@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@PEAPEAV1@00AEAV?$allocator@PEAVD3D12Model@@@0@@Z ; std::_Uninitialized_copy<D3D12Model * *,D3D12Model * *,std::allocator<D3D12Model *> >
  000bc	48 8b 4d 18	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000c0	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2084 :             } else {
; 2085 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 2086 :             }
; 2087 :             _ASAN_VECTOR_CREATE;
; 2088 :             _Guard._Target = nullptr;

  000c4	48 c7 45 30 00
	00 00 00	 mov	 QWORD PTR _Guard$1[rbp], 0

; 2089 :         }

  000cc	48 8d 4d 30	 lea	 rcx, QWORD PTR _Guard$1[rbp]
  000d0	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >::~_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >
$LN2@Construct_:

; 2090 : 
; 2091 :         _Proxy._Release();

  000d5	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000d9	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000de	90		 npad	 1

; 2092 :     }

  000df	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000e3	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000e8	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 0
_Alproxy$ = 8
$S22$ = 16
_My_data$ = 24
_Proxy$ = 32
_Guard$1 = 48
this$ = 144
_Count$ = 152
<_Val_0>$ = 160
<_Val_1>$ = 168
?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA PROC ; `std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA ENDP ; `std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 0
_Alproxy$ = 8
$S22$ = 16
_My_data$ = 24
_Proxy$ = 32
_Guard$1 = 48
this$ = 144
_Count$ = 152
<_Val_0>$ = 160
<_Val_1>$ = 168
?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA PROC ; `std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 30	 lea	 rcx, QWORD PTR _Guard$1[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >::~_Tidy_guard<std::vector<D3D12Model *,std::allocator<D3D12Model *> > >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$1@?0???$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z@4HA ENDP ; `std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1><std::allocator<D3D12Model *> >, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<D3D12Model *> >::_Vector_val<std::_Simple_types<D3D12Model *> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1><std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12Model *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12Model *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 98   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   :     // return smaller of _Left and _Right
; 100  :     return _Right < _Left ? _Right : _Left;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00024	48 8b 4d 60	 mov	 rcx, QWORD PTR _Left$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@min
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@min
$LN3@min:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@min:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 101  : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\__msvc_chrono.hpp
;	COMDAT ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 80
_Val$ = 88
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,0>, COMDAT

; 98   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E71D1BFE___msvc_chrono@hpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Val$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 0
$T1 = 72
this$ = 96
_Al$ = 104
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al$[rbp]
  00029	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00036	48 89 45 00	 mov	 QWORD PTR _New_proxy$[rbp], rax

; 1209 :         _Construct_in_place(*_New_proxy, this);

  0003a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00042	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00046	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1210 :         _Myproxy            = _New_proxy;

  0004f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1211 :         _New_proxy->_Mycont = this;

  0005a	48 8b 45 00	 mov	 rax, QWORD PTR _New_proxy$[rbp]
  0005e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1212 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<char> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1135 : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1136 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1137 :     using _Ty = typename _Alloc::value_type;
; 1138 :     _Ptr->~_Ty();
; 1139 :     _Deallocate_plain(_Al, _Ptr);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1140 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b6	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bb	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bf	5d		 pop	 rbp
  000c0	c3		 ret	 0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z PROC ; D3D12UploadBufferResource<D3D12PassConstants>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ ; D3D12UploadBufferResource<D3D12PassConstants>::~D3D12UploadBufferResource<D3D12PassConstants>
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z ENDP ; D3D12UploadBufferResource<D3D12PassConstants>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ PROC ; D3D12UploadBufferResource<D3D12PassConstants>::GetResource, COMDAT

; 23   : 	ID3D12Resource* GetResource() { return m_uploadBuffer.Get(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  0002b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ ENDP ; D3D12UploadBufferResource<D3D12PassConstants>::GetResource
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z
_TEXT	SEGMENT
$T1 = 192
tv80 = 1208
this$ = 1248
elementIndex$ = 1256
data$ = 1264
?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z PROC ; D3D12UploadBufferResource<D3D12PassConstants>::CopyData, COMDAT

; 55   : {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec e0 04
	00 00		 sub	 rsp, 1248		; 000004e0H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 56   : 	memcpy(reinterpret_cast<void*>(&m_mappedData[elementIndex * m_elementByteSize]), &data, sizeof(T));

  00029	48 8b 85 e0 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00030	8b 8d e8 04 00
	00		 mov	 ecx, DWORD PTR elementIndex$[rbp]
  00036	0f af 48 20	 imul	 ecx, DWORD PTR [rax+32]
  0003a	8b c1		 mov	 eax, ecx
  0003c	8b c0		 mov	 eax, eax
  0003e	48 8b 8d e0 04
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00045	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00049	48 03 c8	 add	 rcx, rax
  0004c	48 8b c1	 mov	 rax, rcx
  0004f	41 b8 f4 03 00
	00		 mov	 r8d, 1012		; 000003f4H
  00055	48 8b 95 f0 04
	00 00		 mov	 rdx, QWORD PTR data$[rbp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 memcpy

; 57   : 	m_dataBuffer[elementIndex] = data;

  00064	48 8d 85 c0 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0006b	48 8b f8	 mov	 rdi, rax
  0006e	48 8b b5 f0 04
	00 00		 mov	 rsi, QWORD PTR data$[rbp]
  00075	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0007a	f3 a4		 rep movsb
  0007c	48 8b 85 e0 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00083	48 89 85 b8 04
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0008a	8b 85 e8 04 00
	00		 mov	 eax, DWORD PTR elementIndex$[rbp]
  00090	8b d0		 mov	 edx, eax
  00092	48 8b 8d b8 04
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  00099	e8 00 00 00 00	 call	 ??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::operator[]
  0009e	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000a5	48 8b f8	 mov	 rdi, rax
  000a8	48 8b f1	 mov	 rsi, rcx
  000ab	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  000b0	f3 a4		 rep movsb

; 58   : }

  000b2	48 8d a5 c0 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1216]
  000b9	5f		 pop	 rdi
  000ba	5e		 pop	 rsi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z ENDP ; D3D12UploadBufferResource<D3D12PassConstants>::CopyData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ
_TEXT	SEGMENT
tv72 = 64
tv78 = 72
this$ = 96
??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ PROC ; D3D12UploadBufferResource<D3D12PassConstants>::~D3D12UploadBufferResource<D3D12PassConstants>, COMDAT

; 47   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 48   : 	m_uploadBuffer->Unmap(0, 0);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  0002b	48 89 45 40	 mov	 QWORD PTR tv72[rbp], rax
  0002f	48 8b 45 40	 mov	 rax, QWORD PTR tv72[rbp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0003a	48 89 45 48	 mov	 QWORD PTR tv78[rbp], rax
  0003e	45 33 c0	 xor	 r8d, r8d
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 4d 40	 mov	 rcx, QWORD PTR tv72[rbp]
  00047	ff 55 48	 call	 QWORD PTR tv78[rbp]

; 49   : 	//m_uploadBuffer->Release();
; 50   : }

  0004a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 c0 30	 add	 rax, 48			; 00000030H
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0005a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::~vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
  00066	90		 npad	 1
  00067	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??1?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@XZ ENDP ; D3D12UploadBufferResource<D3D12PassConstants>::~D3D12UploadBufferResource<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z
_TEXT	SEGMENT
heapProperties$ = 0
resourceDesc$ = 24
$T1 = 144
$T2 = 168
$T3 = 224
tv183 = 232
tv177 = 232
tv88 = 232
tv81 = 232
tv192 = 240
tv179 = 240
tv165 = 248
tv175 = 256
this$ = 304
elementCount$ = 312
isConstantBuffer$ = 320
??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z PROC ; D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>, COMDAT

; 31   : {

$LN7:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec 50 01
	00 00		 sub	 rsp, 336		; 00000150H
  00018	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00029	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
  00038	90		 npad	 1
  00039	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00040	48 83 c0 30	 add	 rax, 48			; 00000030H
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  0004c	90		 npad	 1

; 32   : 	m_device = D3DUtil::GetDevice();

  0004d	e8 00 00 00 00	 call	 ?GetDevice@D3DUtil@@SAPEAUID3D12Device8@@XZ ; D3DUtil::GetDevice
  00052	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 33   : 	m_dataBuffer.resize(elementCount);

  0005d	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0006b	8b 85 38 01 00
	00		 mov	 eax, DWORD PTR elementCount$[rbp]
  00071	8b d0		 mov	 edx, eax
  00073	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  0007a	e8 00 00 00 00	 call	 ?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::resize

; 34   : 	m_elementByteSize = isConstantBuffer ? D3DUtil::CalcConstantBufferByteSize(sizeof(T)) : sizeof(T);

  0007f	0f b6 85 40 01
	00 00		 movzx	 eax, BYTE PTR isConstantBuffer$[rbp]
  00086	85 c0		 test	 eax, eax
  00088	74 15		 je	 SHORT $LN3@D3D12Uploa
  0008a	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0008f	e8 00 00 00 00	 call	 ?CalcConstantBufferByteSize@D3DUtil@@SAII@Z ; D3DUtil::CalcConstantBufferByteSize
  00094	8b c0		 mov	 eax, eax
  00096	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  0009d	eb 0b		 jmp	 SHORT $LN4@D3D12Uploa
$LN3@D3D12Uploa:
  0009f	48 c7 85 e8 00
	00 00 f4 03 00
	00		 mov	 QWORD PTR tv88[rbp], 1012 ; 000003f4H
$LN4@D3D12Uploa:
  000aa	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b1	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR tv88[rbp]
  000b7	89 48 20	 mov	 DWORD PTR [rax+32], ecx

; 35   : 	m_elementsByteSize = elementCount * m_elementByteSize;

  000ba	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c1	8b 8d 38 01 00
	00		 mov	 ecx, DWORD PTR elementCount$[rbp]
  000c7	0f af 48 20	 imul	 ecx, DWORD PTR [rax+32]
  000cb	8b c1		 mov	 eax, ecx
  000cd	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d4	89 41 24	 mov	 DWORD PTR [rcx+36], eax

; 36   : 
; 37   : 	D3D12_HEAP_PROPERTIES heapProperties = CD3DX12_HEAP_PROPERTIES(D3D12_HEAP_TYPE_UPLOAD);

  000d7	41 b9 01 00 00
	00		 mov	 r9d, 1
  000dd	41 b8 01 00 00
	00		 mov	 r8d, 1
  000e3	ba 02 00 00 00	 mov	 edx, 2
  000e8	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000ef	e8 00 00 00 00	 call	 ??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z ; CD3DX12_HEAP_PROPERTIES::CD3DX12_HEAP_PROPERTIES
  000f4	48 8d 4d 00	 lea	 rcx, QWORD PTR heapProperties$[rbp]
  000f8	48 8b f9	 mov	 rdi, rcx
  000fb	48 8b f0	 mov	 rsi, rax
  000fe	b9 14 00 00 00	 mov	 ecx, 20
  00103	f3 a4		 rep movsb

; 38   : 	D3D12_RESOURCE_DESC resourceDesc = CD3DX12_RESOURCE_DESC::Buffer(m_elementsByteSize);

  00105	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010c	8b 40 24	 mov	 eax, DWORD PTR [rax+36]
  0010f	45 33 c9	 xor	 r9d, r9d
  00112	45 33 c0	 xor	 r8d, r8d
  00115	8b d0		 mov	 edx, eax
  00117	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0011e	e8 00 00 00 00	 call	 ?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z ; CD3DX12_RESOURCE_DESC::Buffer
  00123	48 8d 4d 18	 lea	 rcx, QWORD PTR resourceDesc$[rbp]
  00127	48 8b f9	 mov	 rdi, rcx
  0012a	48 8b f0	 mov	 rsi, rax
  0012d	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00132	f3 a4		 rep movsb

; 39   : 
; 40   : 	m_device->CreateCommittedResource(&heapProperties, D3D12_HEAP_FLAG_NONE, &resourceDesc,

  00134	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0013b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0013f	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv177[rbp], rax
  00146	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014d	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00151	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00154	48 8b 80 d8 00
	00 00		 mov	 rax, QWORD PTR [rax+216]
  0015b	48 89 85 f0 00
	00 00		 mov	 QWORD PTR tv179[rbp], rax
  00162	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00169	48 83 c0 30	 add	 rax, 48			; 00000030H
  0016d	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv165[rbp], rax
  00174	48 8d 95 e0 00
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  0017b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv165[rbp]
  00182	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
  00187	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0018a	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
  0018f	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv175[rbp], rax
  00196	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR tv175[rbp]
  0019d	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  001a2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
  001a9	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001ae	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  001b7	c7 44 24 20 c3
	0a 00 00	 mov	 DWORD PTR [rsp+32], 2755 ; 00000ac3H
  001bf	4c 8d 4d 18	 lea	 r9, QWORD PTR resourceDesc$[rbp]
  001c3	45 33 c0	 xor	 r8d, r8d
  001c6	48 8d 55 00	 lea	 rdx, QWORD PTR heapProperties$[rbp]
  001ca	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR tv177[rbp]
  001d1	ff 95 f0 00 00
	00		 call	 QWORD PTR tv179[rbp]

; 41   : 		D3D12_RESOURCE_STATE_GENERIC_READ, nullptr, IID_PPV_ARGS(&m_uploadBuffer));
; 42   : 	m_uploadBuffer->Map(0, 0, reinterpret_cast<void**>(&m_mappedData));

  001d7	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001de	48 83 c0 30	 add	 rax, 48			; 00000030H
  001e2	48 8b c8	 mov	 rcx, rax
  001e5	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  001ea	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv183[rbp], rax
  001f1	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR tv183[rbp]
  001f8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001fb	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  001ff	48 89 85 f0 00
	00 00		 mov	 QWORD PTR tv192[rbp], rax
  00206	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0020d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00211	4c 8b c8	 mov	 r9, rax
  00214	45 33 c0	 xor	 r8d, r8d
  00217	33 d2		 xor	 edx, edx
  00219	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR tv183[rbp]
  00220	ff 95 f0 00 00
	00		 call	 QWORD PTR tv192[rbp]
  00226	90		 npad	 1

; 43   : }

  00227	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0022e	48 8d a5 10 01
	00 00		 lea	 rsp, QWORD PTR [rbp+272]
  00235	5f		 pop	 rdi
  00236	5e		 pop	 rsi
  00237	5d		 pop	 rbp
  00238	c3		 ret	 0
??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z ENDP ; D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
heapProperties$ = 0
resourceDesc$ = 24
$T1 = 144
$T2 = 168
$T3 = 224
tv183 = 232
tv177 = 232
tv88 = 232
tv81 = 232
tv192 = 240
tv179 = 240
tv165 = 248
tv175 = 256
this$ = 304
elementCount$ = 312
isConstantBuffer$ = 320
?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA PROC ; `D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::~vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA ENDP ; `D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
heapProperties$ = 0
resourceDesc$ = 24
$T1 = 144
$T2 = 168
$T3 = 224
tv183 = 232
tv177 = 232
tv88 = 232
tv81 = 232
tv192 = 240
tv179 = 240
tv165 = 248
tv175 = 256
this$ = 304
elementCount$ = 312
isConstantBuffer$ = 320
?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA PROC ; `D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00015	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$1@?0???0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z@4HA ENDP ; `D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<D3D12PassConstants> >::_Vector_val<std::_Simple_types<D3D12PassConstants> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<D3D12PassConstants> >::_Vector_val<std::_Simple_types<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal, COMDAT

; 2193 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2194 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first

; 2195 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
_TEXT	SEGMENT
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range, COMDAT

; 2174 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2175 :         // orphan iterators within specified (inclusive) range
; 2176 : #if _HAS_CXX20
; 2177 :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@Orphan_ran

; 2178 :             _Orphan_range_unlocked(_First, _Last);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_unlocked

; 2179 :         } else

  00042	eb 11		 jmp	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:

; 2180 : #endif // _HAS_CXX20
; 2181 :         {
; 2182 :             _Orphan_range_locked(_First, _Last);

  00044	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00048	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  0004c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked
$LN3@Orphan_ran:

; 2183 :         }
; 2184 :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?_Orphan_range@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked, COMDAT

; 2169 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2170 :         _Lockit _Lock(_LOCK_DEBUG);

  00025	ba 03 00 00 00	 mov	 edx, 3
  0002a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00034	90		 npad	 1

; 2171 :         _Orphan_range_unlocked(_First, _Last);

  00035	4c 8b 45 70	 mov	 r8, QWORD PTR _Last$[rbp]
  00039	48 8b 55 68	 mov	 rdx, QWORD PTR _First$[rbp]
  0003d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_unlocked
  00046	90		 npad	 1

; 2172 :     }

  00047	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00051	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA PROC ; `std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0000e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
?dtor$0@?0??_Orphan_range_locked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z@4HA ENDP ; `std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
this$ = 112
_First$ = 120
_Last$ = 128
?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_unlocked, COMDAT

; 2155 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2156 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00028	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 83 c0 08	 add	 rax, 8
  00033	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 2157 :         while (*_Pnext) {

  00037	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0003b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003f	74 5b		 je	 SHORT $LN3@Orphan_ran

; 2158 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00041	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0004c	48 89 45 08	 mov	 QWORD PTR _Pnextptr$1[rbp], rax

; 2159 :             const auto _Temp     = *_Pnext;

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 45 10	 mov	 QWORD PTR _Temp$2[rbp], rax

; 2160 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  0005b	48 8b 45 78	 mov	 rax, QWORD PTR _First$[rbp]
  0005f	48 39 45 08	 cmp	 QWORD PTR _Pnextptr$1[rbp], rax
  00063	72 0d		 jb	 SHORT $LN6@Orphan_ran
  00065	48 8b 45 08	 mov	 rax, QWORD PTR _Pnextptr$1[rbp]
  00069	48 39 85 80 00
	00 00		 cmp	 QWORD PTR _Last$[rbp], rax
  00070	73 0e		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2161 :                 _Pnext = &_Temp->_Mynextiter;

  00072	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00076	48 83 c0 08	 add	 rax, 8
  0007a	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 2162 :             } else { // orphan the iterator

  0007e	eb 1a		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2163 :                 _Temp->_Myproxy = nullptr;

  00080	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00084	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2164 :                 *_Pnext         = _Temp->_Mynextiter;

  0008b	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0008f	48 8b 4d 10	 mov	 rcx, QWORD PTR _Temp$2[rbp]
  00093	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00097	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2165 :             }
; 2166 :         }

  0009a	eb 9b		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2167 :     }

  0009c	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000a0	5d		 pop	 rbp
  000a1	c3		 ret	 0
?_Orphan_range_unlocked@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAXPEAUD3D12PassConstants@@0@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Xlength, COMDAT

; 2146 :     [[noreturn]] static void _Xlength() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2147 :         _Xlength_error("vector too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 2148 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlength@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@CAXXZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 66		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 99		 cdq
  0009a	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0009f	48 f7 f9	 idiv	 rcx
  000a2	4c 8b c0	 mov	 r8, rax
  000a5	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a9	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ac	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000b0	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000b5	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000c0	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000c4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000cb	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000cf	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d6	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000da	5d		 pop	 rbp
  000db	c3		 ret	 0
?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
_Newvec$ = 136
_Newsize$ = 144
_Newcapacity$ = 152
?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Change_array, COMDAT

; 2022 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2023 :         // orphan all iterators, discard old array, acquire new array
; 2024 :         auto& _Al         = _Getal();

  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  00039	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2025 :         auto& _My_data    = _Mypair._Myval2;

  0003d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00044	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2026 :         pointer& _Myfirst = _My_data._Myfirst;

  00048	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2027 :         pointer& _Mylast  = _My_data._Mylast;

  00054	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2028 :         pointer& _Myend   = _My_data._Myend;

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00064	48 83 c0 18	 add	 rax, 24
  00068	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2029 : 
; 2030 :         _My_data._Orphan_all();

  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2031 : 
; 2032 :         if (_Myfirst) { // destroy and deallocate old array

  00075	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00079	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0007d	74 45		 je	 SHORT $LN2@Change_arr

; 2033 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0007f	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00083	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00087	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008a	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0008e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00091	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UD3D12PassConstants@@@std@@@std@@YAXPEAUD3D12PassConstants@@QEAU1@AEAV?$allocator@UD3D12PassConstants@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12PassConstants> >

; 2034 :             _ASAN_VECTOR_REMOVE;
; 2035 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00096	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0009a	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0009e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 2b c1	 sub	 rax, rcx
  000a7	48 99		 cdq
  000a9	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  000ae	48 f7 f9	 idiv	 rcx
  000b1	4c 8b c0	 mov	 r8, rax
  000b4	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000bb	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000bf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z ; std::allocator<D3D12PassConstants>::deallocate
$LN2@Change_arr:

; 2036 :         }
; 2037 : 
; 2038 :         _Myfirst = _Newvec;

  000c4	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000c8	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000cf	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2039 :         _Mylast  = _Newvec + _Newsize;

  000d2	48 69 85 90 00
	00 00 f4 03 00
	00		 imul	 rax, QWORD PTR _Newsize$[rbp], 1012 ; 000003f4H
  000dd	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000e4	48 03 c8	 add	 rcx, rax
  000e7	48 8b c1	 mov	 rax, rcx
  000ea	48 8b 4d 18	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2040 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 69 85 98 00
	00 00 f4 03 00
	00		 imul	 rax, QWORD PTR _Newcapacity$[rbp], 1012 ; 000003f4H
  000fc	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  00103	48 03 c8	 add	 rcx, rax
  00106	48 8b c1	 mov	 rax, rcx
  00109	48 8b 4d 20	 mov	 rcx, QWORD PTR _Myend$[rbp]
  0010d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2041 :         _ASAN_VECTOR_CREATE;
; 2042 :     }

  00110	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00114	5d		 pop	 rbp
  00115	c3		 ret	 0
?_Change_array@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXQEAUD3D12PassConstants@@_K1@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 0
_Max$ = 8
_Geometric$ = 16
this$ = 112
_Newsize$ = 120
?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Calculate_growth, COMDAT

; 1970 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1971 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1972 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00027	e8 00 00 00 00	 call	 ?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::capacity
  0002c	48 89 45 00	 mov	 QWORD PTR _Oldcapacity$[rbp], rax

; 1973 :         const auto _Max              = max_size();

  00030	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::max_size
  00039	48 89 45 08	 mov	 QWORD PTR _Max$[rbp], rax

; 1974 : 
; 1975 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003d	33 d2		 xor	 edx, edx
  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00043	b9 02 00 00 00	 mov	 ecx, 2
  00048	48 f7 f1	 div	 rcx
  0004b	48 8b 4d 08	 mov	 rcx, QWORD PTR _Max$[rbp]
  0004f	48 2b c8	 sub	 rcx, rax
  00052	48 8b c1	 mov	 rax, rcx
  00055	48 39 45 00	 cmp	 QWORD PTR _Oldcapacity$[rbp], rax
  00059	76 06		 jbe	 SHORT $LN2@Calculate_

; 1976 :             return _Max; // geometric growth would overflow

  0005b	48 8b 45 08	 mov	 rax, QWORD PTR _Max$[rbp]
  0005f	eb 30		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1977 :         }
; 1978 : 
; 1979 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00061	33 d2		 xor	 edx, edx
  00063	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00067	b9 02 00 00 00	 mov	 ecx, 2
  0006c	48 f7 f1	 div	 rcx
  0006f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Oldcapacity$[rbp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 89 45 10	 mov	 QWORD PTR _Geometric$[rbp], rax

; 1980 : 
; 1981 :         if (_Geometric < _Newsize) {

  0007d	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  00081	48 39 45 10	 cmp	 QWORD PTR _Geometric$[rbp], rax
  00085	73 06		 jae	 SHORT $LN3@Calculate_

; 1982 :             return _Newsize; // geometric growth would be insufficient

  00087	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  0008b	eb 04		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1983 :         }
; 1984 : 
; 1985 :         return _Geometric; // geometric growth is sufficient

  0008d	48 8b 45 10	 mov	 rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1986 :     }

  00091	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
_Pos$ = 104
??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::operator[], COMDAT

; 1891 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1892 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax
$LN4@operator:

; 1893 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1894 :         _STL_VERIFY(

  0002b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00037	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003b	48 2b c1	 sub	 rax, rcx
  0003e	48 99		 cdq
  00040	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  00045	48 f7 f9	 idiv	 rcx
  00048	48 39 45 68	 cmp	 QWORD PTR _Pos$[rbp], rax
  0004c	73 02		 jae	 SHORT $LN7@operator
  0004e	eb 6b		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00057	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00063	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00068	45 33 c9	 xor	 r9d, r9d
  0006b	41 b8 67 07 00
	00		 mov	 r8d, 1895		; 00000767H
  00071	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 67 07 00
	00		 mov	 r9d, 1895		; 00000767H
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	33 c0		 xor	 eax, eax
  000b7	85 c0		 test	 eax, eax
  000b9	75 95		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	0f 85 66 ff ff
	ff		 jne	 $LN4@operator

; 1895 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1896 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1897 : 
; 1898 :         return _My_data._Myfirst[_Pos];

  000c5	48 69 45 68 f4
	03 00 00	 imul	 rax, QWORD PTR _Pos$[rbp], 1012 ; 000003f4H
  000cd	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000d1	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1899 :     }

  000d5	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000d9	5d		 pop	 rbp
  000da	c3		 ret	 0
??A?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAAEAUD3D12PassConstants@@_K@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::capacity, COMDAT

; 1886 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1887 :         auto& _My_data = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1888 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0002f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00033	48 2b c1	 sub	 rax, rcx
  00036	48 99		 cdq
  00038	b9 f4 03 00 00	 mov	 ecx, 1012		; 000003f4H
  0003d	48 f7 f9	 idiv	 rcx

; 1889 :     }

  00040	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?capacity@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::max_size, COMDAT

; 1881 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1882 :         return (_STD min)(

  0001b	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEBAAEBV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::max_size
  0002c	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00030	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00035	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00039	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0003d	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00046	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1883 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1884 :     }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?max_size@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 96
_Newsize$ = 104
?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::resize, COMDAT

; 1589 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :         // trim or append value-initialized elements, provide strong guarantee
; 1591 :         _Resize(_Newsize, _Value_init_tag{});

  00020	4c 8d 45 40	 lea	 r8, QWORD PTR $T1[rbp]
  00024	48 8b 55 68	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002c	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Resize<std::_Value_init_tag>

; 1592 :     }

  00031	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?resize@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S33$ = 8
$T1 = 73
this$ = 112
??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::~vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAXXZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S33$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12PassConstants>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S33$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::~vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ PROC ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UD3D12PassConstants@@@std@@V?$_Vector_val@U?$_Simple_types@UD3D12PassConstants@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1>::_Compressed_pair<std::allocator<D3D12PassConstants>,std::_Vector_val<std::_Simple_types<D3D12PassConstants> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@AEAAAEAV?$allocator@UD3D12PassConstants@@@2@XZ ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0UD3D12PassConstants@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UD3D12PassConstants@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12PassConstants>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@UD3D12PassConstants@@V?$allocator@UD3D12PassConstants@@@std@@@std@@QEAA@XZ ENDP ; std::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >::vector<D3D12PassConstants,std::allocator<D3D12PassConstants> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 69 78 7d
	d4 46 c2 40 00	 mov	 rax, 18228007977973865	; 0040c246d47d7869H

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UD3D12PassConstants@@@std@@@std@@SA_KAEBV?$allocator@UD3D12PassConstants@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12PassConstants> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z PROC ; std::allocator<D3D12PassConstants>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0DPE@@std@@YA_K_K@Z ; std::_Get_size_of_n<1012>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@UD3D12PassConstants@@@std@@QEAAPEAUD3D12PassConstants@@_K@Z ENDP ; std::allocator<D3D12PassConstants>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z PROC ; std::allocator<D3D12PassConstants>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 69 45 60 f4
	03 00 00	 imul	 rax, QWORD PTR _Count$[rbp], 1012 ; 000003f4H
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@UD3D12PassConstants@@@std@@QEAAXQEAUD3D12PassConstants@@_K@Z ENDP ; std::allocator<D3D12PassConstants>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ PROC	; std::allocator<D3D12PassConstants>::allocator<D3D12PassConstants>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@UD3D12PassConstants@@@std@@QEAA@XZ ENDP	; std::allocator<D3D12PassConstants>::allocator<D3D12PassConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z
_TEXT	SEGMENT
this$ = 80
other$ = 88
??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource><ID3D12Resource>, COMDAT

; 253  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     ComPtr(_In_opt_ U *other) throw() : ptr_(other)

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR other$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 254  :         InternalAddRef();

  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalAddRef

; 255  :     }

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource><ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv79 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z PROC ; std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>, COMDAT

; 3464 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	c7 45 50 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3465 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  0002f	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00034	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00039	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  0003d	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  00042	74 20		 je	 SHORT $LN3@make_uniqu
  00044	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR <_Args_1>$[rbp]
  0004b	44 0f b6 00	 movzx	 r8d, BYTE PTR [rax]
  0004f	48 8b 45 78	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00053	8b 10		 mov	 edx, DWORD PTR [rax]
  00055	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00059	e8 00 00 00 00	 call	 ??0?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAA@I_N@Z ; D3D12UploadBufferResource<D3D12PassConstants>::D3D12UploadBufferResource<D3D12PassConstants>
  0005e	48 89 45 58	 mov	 QWORD PTR tv79[rbp], rax
  00062	eb 08		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00064	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv79[rbp], 0
$LN4@make_uniqu:
  0006c	48 8b 45 58	 mov	 rax, QWORD PTR tv79[rbp]
  00070	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00074	48 8b 55 40	 mov	 rdx, QWORD PTR $T1[rbp]
  00078	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007c	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
  00081	8b 45 50	 mov	 eax, DWORD PTR $T3[rbp]
  00084	83 c8 01	 or	 eax, 1
  00087	89 45 50	 mov	 DWORD PTR $T3[rbp], eax
  0008a	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3466 : }

  0008e	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z ENDP ; std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv79 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA PROC ; `std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0000f	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z@4HA ENDP ; `std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Fence> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Fence> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv86 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
<_Args_2>$ = 136
<_Args_3>$ = 144
??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z PROC ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>, COMDAT

; 3464 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00021	c7 45 50 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3465 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00034	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00039	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003e	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00042	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  00047	74 39		 je	 SHORT $LN3@make_uniqu
  00049	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR <_Args_3>$[rbp]
  00050	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00053	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00058	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR <_Args_2>$[rbp]
  0005f	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00062	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR <_Args_1>$[rbp]
  00069	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0006c	48 8b 45 78	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00070	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00073	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00077	e8 00 00 00 00	 call	 ??0DescriptorHeap@DirectX@@QEAA@PEAUID3D12Device@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@_K@Z ; DirectX::DescriptorHeap::DescriptorHeap
  0007c	48 89 45 58	 mov	 QWORD PTR tv86[rbp], rax
  00080	eb 08		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00082	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv86[rbp], 0
$LN4@make_uniqu:
  0008a	48 8b 45 58	 mov	 rax, QWORD PTR tv86[rbp]
  0008e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00092	48 8b 55 40	 mov	 rdx, QWORD PTR $T1[rbp]
  00096	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009a	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
  0009f	8b 45 50	 mov	 eax, DWORD PTR $T3[rbp]
  000a2	83 c8 01	 or	 eax, 1
  000a5	89 45 50	 mov	 DWORD PTR $T3[rbp], eax
  000a8	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3466 : }

  000ac	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000b0	5d		 pop	 rbp
  000b1	c3		 ret	 0
??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z ENDP ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv86 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
<_Args_2>$ = 136
<_Args_3>$ = 144
?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA PROC ; `std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000f	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z@4HA ENDP ; `std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv86 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
<_Args_2>$ = 136
<_Args_3>$ = 144
??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z PROC ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>, COMDAT

; 3464 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00021	c7 45 50 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3465 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00034	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00039	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003e	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00042	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  00047	74 38		 je	 SHORT $LN3@make_uniqu
  00049	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR <_Args_3>$[rbp]
  00050	8b 00		 mov	 eax, DWORD PTR [rax]
  00052	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00057	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR <_Args_2>$[rbp]
  0005e	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00061	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR <_Args_1>$[rbp]
  00068	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  0006b	48 8b 45 78	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  0006f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00072	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00076	e8 00 00 00 00	 call	 ??0DescriptorHeap@DirectX@@QEAA@PEAUID3D12Device@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@_K@Z ; DirectX::DescriptorHeap::DescriptorHeap
  0007b	48 89 45 58	 mov	 QWORD PTR tv86[rbp], rax
  0007f	eb 08		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00081	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv86[rbp], 0
$LN4@make_uniqu:
  00089	48 8b 45 58	 mov	 rax, QWORD PTR tv86[rbp]
  0008d	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00091	48 8b 55 40	 mov	 rdx, QWORD PTR $T1[rbp]
  00095	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00099	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@PEAVDescriptorHeap@DirectX@@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
  0009e	8b 45 50	 mov	 eax, DWORD PTR $T3[rbp]
  000a1	83 c8 01	 or	 eax, 1
  000a4	89 45 50	 mov	 DWORD PTR $T3[rbp], eax
  000a7	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3466 : }

  000ab	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000af	5d		 pop	 rbp
  000b0	c3		 ret	 0
??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z ENDP ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv86 = 88
__$ReturnUdt$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
<_Args_2>$ = 136
<_Args_3>$ = 144
?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA PROC ; `std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0000f	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z@4HA ENDP ; `std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z
_TEXT	SEGMENT
tv83 = 64
tv85 = 72
tv81 = 80
this$ = 112
p$ = 120
??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::As<IDXGISwapChain4>, COMDAT

; 471  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 472  :         return ptr_->QueryInterface(__uuidof(U), p);

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002a	48 89 45 40	 mov	 QWORD PTR tv83[rbp], rax
  0002e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 89 45 48	 mov	 QWORD PTR tv85[rbp], rax
  0003f	48 8d 4d 78	 lea	 rcx, QWORD PTR p$[rbp]
  00043	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::operator void * *
  00048	48 89 45 50	 mov	 QWORD PTR tv81[rbp], rax
  0004c	4c 8b 45 50	 mov	 r8, QWORD PTR tv81[rbp]
  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_3d585d5a_bd4a_489e_b1f4_3dbcb6452ffb
  00057	48 8b 4d 40	 mov	 rcx, QWORD PTR tv83[rbp]
  0005b	ff 55 48	 call	 QWORD PTR tv85[rbp]
  0005e	90		 npad	 1

; 473  :     }

  0005f	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::As<IDXGISwapChain4>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *, COMDAT

; 165  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  :         return this->ptr_->ReleaseAndGetAddressOf();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf

; 167  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIAdapter1> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Device8> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Device8> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIFactory7> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIFactory7> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z
_TEXT	SEGMENT
temp$ = 0
$T1 = 72
$T2 = 80
tv85 = 88
tv80 = 88
this$ = 112
inUserObject$ = 120
func$ = 128
??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z PROC ; TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>, COMDAT

; 155  : 	{

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 156  : 		IIContainer<InRetValType, ParamTypes...>* temp = new TMethodContainter<UserClass, InRetValType, ParamTypes...>(inUserObject, func);

  00028	b9 18 00 00 00	 mov	 ecx, 24
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00032	48 89 45 50	 mov	 QWORD PTR $T2[rbp], rax
  00036	48 83 7d 50 00	 cmp	 QWORD PTR $T2[rbp], 0
  0003b	74 1a		 je	 SHORT $LN3@Bind
  0003d	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR func$[rbp]
  00044	48 8b 55 78	 mov	 rdx, QWORD PTR inUserObject$[rbp]
  00048	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  0004c	e8 00 00 00 00	 call	 ??0?$TMethodContainter@VD3D12Renderer@@XJJ@@QEAA@PEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ; TMethodContainter<D3D12Renderer,void,long,long>::TMethodContainter<D3D12Renderer,void,long,long>
  00051	48 89 45 58	 mov	 QWORD PTR tv80[rbp], rax
  00055	eb 08		 jmp	 SHORT $LN4@Bind
$LN3@Bind:
  00057	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv80[rbp], 0
$LN4@Bind:
  0005f	48 8b 45 58	 mov	 rax, QWORD PTR tv80[rbp]
  00063	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00067	48 8b 45 48	 mov	 rax, QWORD PTR $T1[rbp]
  0006b	48 89 45 00	 mov	 QWORD PTR temp$[rbp], rax

; 157  : 
; 158  : 		containers->push_back(temp);

  0006f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00076	48 89 45 58	 mov	 QWORD PTR tv85[rbp], rax
  0007a	48 8d 55 00	 lea	 rdx, QWORD PTR temp$[rbp]
  0007e	48 8b 4d 58	 mov	 rcx, QWORD PTR tv85[rbp]
  00082	e8 00 00 00 00	 call	 ?push_back@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAXAEBQEAV?$IIContainer@XJJ@@@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::push_back

; 159  : 	}

  00087	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0008b	5d		 pop	 rbp
  0008c	c3		 ret	 0
??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ENDP ; TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
temp$ = 0
$T1 = 72
$T2 = 80
tv85 = 88
tv80 = 88
this$ = 112
inUserObject$ = 120
func$ = 128
?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA PROC ; `TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	ba 18 00 00 00	 mov	 edx, 24
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z@4HA ENDP ; `TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Debug> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Debug> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Debug>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Debug@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Debug>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Debug@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Debug> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<ID3D12Debug>::~ComPtr<ID3D12Debug>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D12Debug>::~ComPtr<ID3D12Debug>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<ID3D12Debug>::ComPtr<ID3D12Debug>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D12Debug>::ComPtr<ID3D12Debug>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Debug>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Debug>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>, COMDAT

; 3210 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t{}) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1><>
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>, COMDAT

; 3210 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t{}) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1><>
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z
_TEXT	SEGMENT
barrier$ = 0
tv81 = 96
tv91 = 104
commandList$ = 128
resource$ = 136
beforeState$ = 144
afterState$ = 152
?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z PROC ; TransitionResource, COMDAT

; 16   : {

$LN5:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 17   : 	CD3DX12_RESOURCE_BARRIER barrier = CD3DX12_RESOURCE_BARRIER::Transition(

  0002d	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR resource$[rbp]
  00034	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  00039	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00041	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR [rsp+32], -1	; ffffffffH
  00049	44 8b 8d 98 00
	00 00		 mov	 r9d, DWORD PTR afterState$[rbp]
  00050	44 8b 85 90 00
	00 00		 mov	 r8d, DWORD PTR beforeState$[rbp]
  00057	48 8b d0	 mov	 rdx, rax
  0005a	48 8d 4d 00	 lea	 rcx, QWORD PTR barrier$[rbp]
  0005e	e8 00 00 00 00	 call	 ?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z ; CD3DX12_RESOURCE_BARRIER::Transition

; 18   : 		resource.Get(),
; 19   : 		beforeState, afterState);
; 20   : 
; 21   : 	commandList->ResourceBarrier(1, &barrier);

  00063	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR commandList$[rbp]
  0006a	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0006f	48 89 45 60	 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 45 60	 mov	 rax, QWORD PTR tv81[rbp]
  00077	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007a	48 8b 80 d0 00
	00 00		 mov	 rax, QWORD PTR [rax+208]
  00081	48 89 45 68	 mov	 QWORD PTR tv91[rbp], rax
  00085	4c 8d 45 00	 lea	 r8, QWORD PTR barrier$[rbp]
  00089	ba 01 00 00 00	 mov	 edx, 1
  0008e	48 8b 4d 60	 mov	 rcx, QWORD PTR tv81[rbp]
  00092	ff 55 68	 call	 QWORD PTR tv91[rbp]
  00095	90		 npad	 1

; 22   : 
; 23   : 
; 24   : }

  00096	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR commandList$[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>
  000a2	90		 npad	 1
  000a3	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR resource$[rbp]
  000aa	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  000af	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z ENDP ; TransitionResource
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
barrier$ = 0
tv81 = 96
tv91 = 104
commandList$ = 128
resource$ = 136
beforeState$ = 144
afterState$ = 152
?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA PROC ; `TransitionResource'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR resource$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA ENDP ; `TransitionResource'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
barrier$ = 0
tv81 = 96
tv91 = 104
commandList$ = 128
resource$ = 136
beforeState$ = 144
afterState$ = 152
?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA PROC ; `TransitionResource'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR commandList$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0??TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z@4HA ENDP ; `TransitionResource'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12RootSignature>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12RootSignature>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12PipelineState>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12PipelineState>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Engine\public\DEngine.h
;	COMDAT ?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ
_TEXT	SEGMENT
this$ = 80
?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ PROC ; DEngine::GetWindowManager, COMDAT

; 62   : 	FWindowsWindowManager* GetWindowManager() { return &m_windowManager; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D22613FB_DEngine@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 20	 add	 rax, 32			; 00000020H
  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ ENDP ; DEngine::GetWindowManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 75   :     (max) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 76   :     // return larger of _Left and _Right
; 77   :     return _Left < _Right ? _Right : _Left;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  00024	48 8b 4d 68	 mov	 rcx, QWORD PTR _Right$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@max
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@max
$LN3@max:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@max:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 78   : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 64
tv93 = 112
tv85 = 112
this$ = 160
__formal$ = 168
_Lobj$ = 176
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT

; 238  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C79B603_xloctime
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 239  :         _Cvt = _Lobj._Getcvt();

  0002a	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0003b	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  00046	48 8b f0	 mov	 rsi, rax
  00049	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0004e	f3 a4		 rep movsb

; 240  : 
; 241  :         if (is_same_v<_Elem2, wchar_t>) {

  00050	33 c0		 xor	 eax, eax
  00052	83 f8 01	 cmp	 eax, 1
  00055	74 5c		 je	 SHORT $LN2@Getvals

; 242  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00057	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 243  :             _Months =

  00077	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0008c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00093	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 244  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 245  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00097	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000aa	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 246  :         } else {

  000ae	e9 97 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 247  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000b3	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ba	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000be	48 89 45 70	 mov	 QWORD PTR tv85[rbp], rax
  000c2	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000cf	48 8b 4d 70	 mov	 rcx, QWORD PTR tv85[rbp]
  000d3	4c 8b c1	 mov	 r8, rcx
  000d6	33 d2		 xor	 edx, edx
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000e0	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e7	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 248  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000eb	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f2	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000f6	48 89 45 70	 mov	 QWORD PTR tv93[rbp], rax
  000fa	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00107	48 8b 4d 70	 mov	 rcx, QWORD PTR tv93[rbp]
  0010b	4c 8b c1	 mov	 r8, rcx
  0010e	33 d2		 xor	 edx, edx
  00110	48 8b c8	 mov	 rcx, rax
  00113	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00118	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 249  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00123	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  0012e	4c 8b c0	 mov	 r8, rax
  00131	33 d2		 xor	 edx, edx
  00133	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0013a	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  0013f	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00146	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 250  :         }
; 251  :     }

  0014a	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00151	5f		 pop	 rdi
  00152	5e		 pop	 rsi
  00153	5d		 pop	 rbp
  00154	c3		 ret	 0
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 64
tv93 = 112
tv85 = 112
this$ = 160
__formal$ = 168
_Lobj$ = 176
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT

; 238  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C79B603_xloctime
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 239  :         _Cvt = _Lobj._Getcvt();

  0002a	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0003b	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  00046	48 8b f0	 mov	 rsi, rax
  00049	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0004e	f3 a4		 rep movsb

; 240  : 
; 241  :         if (is_same_v<_Elem2, wchar_t>) {

  00050	33 c0		 xor	 eax, eax
  00052	83 f8 01	 cmp	 eax, 1
  00055	74 5c		 je	 SHORT $LN2@Getvals

; 242  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00057	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 243  :             _Months =

  00077	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0008c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00093	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 244  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 245  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00097	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000aa	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 246  :         } else {

  000ae	e9 97 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 247  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000b3	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ba	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000be	48 89 45 70	 mov	 QWORD PTR tv85[rbp], rax
  000c2	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000cf	48 8b 4d 70	 mov	 rcx, QWORD PTR tv85[rbp]
  000d3	4c 8b c1	 mov	 r8, rcx
  000d6	33 d2		 xor	 edx, edx
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000e0	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e7	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 248  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000eb	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f2	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000f6	48 89 45 70	 mov	 QWORD PTR tv93[rbp], rax
  000fa	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00107	48 8b 4d 70	 mov	 rcx, QWORD PTR tv93[rbp]
  0010b	4c 8b c1	 mov	 r8, rcx
  0010e	33 d2		 xor	 edx, edx
  00110	48 8b c8	 mov	 rcx, rax
  00113	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00118	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 249  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00123	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  0012e	4c 8b c0	 mov	 r8, rax
  00131	33 d2		 xor	 edx, edx
  00133	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0013a	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  0013f	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00146	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 250  :         }
; 251  :     }

  0014a	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00151	5f		 pop	 rdi
  00152	5e		 pop	 rsi
  00153	5d		 pop	 rbp
  00154	c3		 ret	 0
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$_Hash_representation@I@std@@YA_KAEBI@Z
_TEXT	SEGMENT
_Keyval$ = 80
??$_Hash_representation@I@std@@YA_KAEBI@Z PROC		; std::_Hash_representation<unsigned int>, COMDAT

; 2350 : _NODISCARD size_t _Hash_representation(const _Kty& _Keyval) noexcept { // bitwise hashes the representation of a key

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2351 :     return _Fnv1a_append_value(_FNV_offset_basis, _Keyval);

  0001b	48 8b 55 50	 mov	 rdx, QWORD PTR _Keyval$[rbp]
  0001f	48 b9 25 23 22
	84 e4 9c f2 cb	 mov	 rcx, -3750763034362895579 ; cbf29ce484222325H
  00029	e8 00 00 00 00	 call	 ??$_Fnv1a_append_value@I@std@@YA_K_KAEBI@Z ; std::_Fnv1a_append_value<unsigned int>

; 2352 : }

  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$_Hash_representation@I@std@@YA_KAEBI@Z ENDP		; std::_Hash_representation<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\__msvc_chrono.hpp
;	COMDAT ?max@?$duration_values@_J@chrono@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$duration_values@_J@chrono@std@@SA_JXZ PROC	; std::chrono::duration_values<__int64>::max, COMDAT

; 48   :         _NODISCARD static constexpr _Rep(max)() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E71D1BFE___msvc_chrono@hpp
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 49   :             // get largest value
; 50   :             return (numeric_limits<_Rep>::max)();

  00017	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max

; 51   :         }

  0001c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00020	5d		 pop	 rbp
  00021	c3		 ret	 0
?max@?$duration_values@_J@chrono@std@@SA_JXZ ENDP	; std::chrono::duration_values<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\__msvc_chrono.hpp
;	COMDAT ?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ
_TEXT	SEGMENT
$T1 = 64
__$ReturnUdt$ = 96
?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::max, COMDAT

; 180  :         _NODISCARD static constexpr duration(max)() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E71D1BFE___msvc_chrono@hpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 181  :             // get maximum value
; 182  :             return duration((duration_values<_Rep>::max)());

  0001b	e8 00 00 00 00	 call	 ?max@?$duration_values@_J@chrono@std@@SA_JXZ ; std::chrono::duration_values<__int64>::max
  00020	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00024	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002c	e8 00 00 00 00	 call	 ??$?0_J$0A@@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,0>
  00031	48 8b 45 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 183  :         }

  00035	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00039	5d		 pop	 rbp
  0003a	c3		 ret	 0
?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\__msvc_chrono.hpp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 80
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::count, COMDAT

; 108  :         _NODISCARD constexpr _Rep count() const noexcept(is_arithmetic_v<_Rep>) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E71D1BFE___msvc_chrono@hpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 109  :             return _MyRep;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 110  :         }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 0
_Ptrdest$ = 8
_Ptrnext$1 = 16
_Ptr$ = 112
__formal$ = 120
__formal$ = 128
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 525  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00017	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CC18A947_xlocale
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 526  :     // convert C string to _Elem sequence using _Cvtvec
; 527  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

  00028	48 8b 4d 70	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002c	e8 00 00 00 00	 call	 strlen
  00031	48 ff c0	 inc	 rax
  00034	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax

; 528  : 
; 529  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

  00038	c7 44 24 20 11
	02 00 00	 mov	 DWORD PTR [rsp+32], 529	; 00000211H
  00040	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
  00047	41 b8 02 00 00
	00		 mov	 r8d, 2
  0004d	ba 01 00 00 00	 mov	 edx, 1
  00052	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  0005c	48 89 45 08	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 530  : 
; 531  :     if (!_Ptrdest) {

  00060	48 83 7d 08 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00065	75 05		 jne	 SHORT $LN5@Maklocstr

; 532  :         _Xbad_alloc();

  00067	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 533  :     }
; 534  : 
; 535  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
  00070	48 89 45 10	 mov	 QWORD PTR _Ptrnext$1[rbp], rax
  00074	eb 21		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00076	48 8b 45 00	 mov	 rax, QWORD PTR _Count$[rbp]
  0007a	48 ff c8	 dec	 rax
  0007d	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00081	48 8b 45 10	 mov	 rax, QWORD PTR _Ptrnext$1[rbp]
  00085	48 ff c0	 inc	 rax
  00088	48 89 45 10	 mov	 QWORD PTR _Ptrnext$1[rbp], rax
  0008c	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00090	48 ff c0	 inc	 rax
  00093	48 89 45 70	 mov	 QWORD PTR _Ptr$[rbp], rax
$LN4@Maklocstr:
  00097	48 83 7d 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  0009c	76 0f		 jbe	 SHORT $LN3@Maklocstr

; 536  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

  0009e	48 8b 45 10	 mov	 rax, QWORD PTR _Ptrnext$1[rbp]
  000a2	48 8b 4d 70	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000a6	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  000a9	88 08		 mov	 BYTE PTR [rax], cl

; 537  :     }

  000ab	eb c9		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 538  : 
; 539  :     return _Ptrdest;

  000ad	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN6@Maklocstr:

; 540  : }

  000b1	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000b5	5d		 pop	 rbp
  000b6	c3		 ret	 0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Count$ = 0
_Ptrdest$ = 8
_Ptr$ = 96
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 71   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__529FCF50_xlocnum
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 72   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  0001e	48 8b 4d 60	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00028	48 ff c0	 inc	 rax
  0002b	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax

; 73   : 
; 74   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  0002f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
  00035	83 c0 03	 add	 eax, 3
  00038	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0003c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@
  00043	41 b8 02 00 00
	00		 mov	 r8d, 2
  00049	ba 02 00 00 00	 mov	 edx, 2
  0004e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00052	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  00058	48 89 45 08	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 75   : 
; 76   :     if (!_Ptrdest) {

  0005c	48 83 7d 08 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00061	75 05		 jne	 SHORT $LN2@Maklocwcs

; 77   :         _Xbad_alloc();

  00063	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 78   :     }
; 79   : 
; 80   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00068	4c 8b 45 00	 mov	 r8, QWORD PTR _Count$[rbp]
  0006c	48 8b 55 60	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00070	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptrdest$[rbp]
  00074	e8 00 00 00 00	 call	 wmemcpy

; 81   :     return _Ptrdest;

  00079	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN3@Maklocwcs:

; 82   : }

  0007d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 0
_Count1$ = 8
_Wchars$ = 16
_Ptr1$ = 24
_Bytes$ = 32
_Wc$ = 36
_Mbst1$ = 40
_Ptrdest$ = 48
_Ptrnext$ = 56
_Mbst2$ = 64
_Ptr$ = 176
__formal$ = 184
_Cvt$ = 192
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 543  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CC18A947_xlocale
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 544  :     // convert C string to wchar_t sequence using _Cvtvec
; 545  :     size_t _Count;
; 546  :     size_t _Count1;
; 547  :     size_t _Wchars;
; 548  :     const char* _Ptr1;
; 549  :     int _Bytes;
; 550  :     wchar_t _Wc;
; 551  :     mbstate_t _Mbst1 = {};

  00029	48 8d 45 28	 lea	 rax, QWORD PTR _Mbst1$[rbp]
  0002d	48 8b f8	 mov	 rdi, rax
  00030	33 c0		 xor	 eax, eax
  00032	b9 08 00 00 00	 mov	 ecx, 8
  00037	f3 aa		 rep stosb

; 552  : 
; 553  :     _Count1 = _CSTD strlen(_Ptr) + 1;

  00039	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00040	e8 00 00 00 00	 call	 strlen
  00045	48 ff c0	 inc	 rax
  00048	48 89 45 08	 mov	 QWORD PTR _Count1$[rbp], rax

; 554  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

  0004c	48 8b 45 08	 mov	 rax, QWORD PTR _Count1$[rbp]
  00050	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00054	48 c7 45 10 00
	00 00 00	 mov	 QWORD PTR _Wchars$[rbp], 0
  0005c	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00063	48 89 45 18	 mov	 QWORD PTR _Ptr1$[rbp], rax
  00067	eb 2f		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00069	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0006d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  0007b	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0007f	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr1$[rbp]
  00083	48 03 c8	 add	 rcx, rax
  00086	48 8b c1	 mov	 rax, rcx
  00089	48 89 45 18	 mov	 QWORD PTR _Ptr1$[rbp], rax
  0008d	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  00091	48 ff c0	 inc	 rax
  00094	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax
$LN4@Maklocstr:
  00098	48 83 7d 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  0009d	76 2e		 jbe	 SHORT $LN3@Maklocstr

; 555  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

  0009f	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Cvt$[rbp]
  000a6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ab	4c 8d 4d 28	 lea	 r9, QWORD PTR _Mbst1$[rbp]
  000af	4c 8b 45 00	 mov	 r8, QWORD PTR _Count$[rbp]
  000b3	48 8b 55 18	 mov	 rdx, QWORD PTR _Ptr1$[rbp]
  000b7	48 8d 4d 24	 lea	 rcx, QWORD PTR _Wc$[rbp]
  000bb	e8 00 00 00 00	 call	 _Mbrtowc
  000c0	89 45 20	 mov	 DWORD PTR _Bytes$[rbp], eax
  000c3	83 7d 20 00	 cmp	 DWORD PTR _Bytes$[rbp], 0
  000c7	7f 02		 jg	 SHORT $LN8@Maklocstr

; 556  :             break;

  000c9	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 557  :         }
; 558  :     }

  000cb	eb 9c		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 559  : 
; 560  :     ++_Wchars; // count terminating nul

  000cd	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  000d1	48 ff c0	 inc	 rax
  000d4	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax

; 561  : 
; 562  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  000d8	c7 44 24 20 32
	02 00 00	 mov	 DWORD PTR [rsp+32], 562	; 00000232H
  000e0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
  000e7	41 b8 02 00 00
	00		 mov	 r8d, 2
  000ed	ba 02 00 00 00	 mov	 edx, 2
  000f2	48 8b 4d 10	 mov	 rcx, QWORD PTR _Wchars$[rbp]
  000f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  000fc	48 89 45 30	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 563  : 
; 564  :     if (!_Ptrdest) {

  00100	48 83 7d 30 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00105	75 05		 jne	 SHORT $LN9@Maklocstr

; 565  :         _Xbad_alloc();

  00107	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 566  :     }
; 567  : 
; 568  :     wchar_t* _Ptrnext = _Ptrdest;

  0010c	48 8b 45 30	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
  00110	48 89 45 38	 mov	 QWORD PTR _Ptrnext$[rbp], rax

; 569  :     mbstate_t _Mbst2  = {};

  00114	48 8d 45 40	 lea	 rax, QWORD PTR _Mbst2$[rbp]
  00118	48 8b f8	 mov	 rdi, rax
  0011b	33 c0		 xor	 eax, eax
  0011d	b9 08 00 00 00	 mov	 ecx, 8
  00122	f3 aa		 rep stosb

; 570  : 
; 571  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

  00124	eb 41		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:
  00126	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0012a	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  0012e	48 2b c8	 sub	 rcx, rax
  00131	48 8b c1	 mov	 rax, rcx
  00134	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00138	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0013c	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00143	48 03 c8	 add	 rcx, rax
  00146	48 8b c1	 mov	 rax, rcx
  00149	48 89 85 b0 00
	00 00		 mov	 QWORD PTR _Ptr$[rbp], rax
  00150	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  00154	48 ff c8	 dec	 rax
  00157	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax
  0015b	48 8b 45 38	 mov	 rax, QWORD PTR _Ptrnext$[rbp]
  0015f	48 83 c0 02	 add	 rax, 2
  00163	48 89 45 38	 mov	 QWORD PTR _Ptrnext$[rbp], rax
$LN7@Maklocstr:
  00167	48 83 7d 10 00	 cmp	 QWORD PTR _Wchars$[rbp], 0
  0016c	76 31		 jbe	 SHORT $LN6@Maklocstr

; 572  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

  0016e	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Cvt$[rbp]
  00175	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0017a	4c 8d 4d 40	 lea	 r9, QWORD PTR _Mbst2$[rbp]
  0017e	4c 8b 45 08	 mov	 r8, QWORD PTR _Count1$[rbp]
  00182	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00189	48 8b 4d 38	 mov	 rcx, QWORD PTR _Ptrnext$[rbp]
  0018d	e8 00 00 00 00	 call	 _Mbrtowc
  00192	89 45 20	 mov	 DWORD PTR _Bytes$[rbp], eax
  00195	83 7d 20 00	 cmp	 DWORD PTR _Bytes$[rbp], 0
  00199	7f 02		 jg	 SHORT $LN10@Maklocstr

; 573  :             break;

  0019b	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 574  :         }
; 575  :     }

  0019d	eb 87		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:

; 576  : 
; 577  :     *_Ptrnext = L'\0';

  0019f	33 c0		 xor	 eax, eax
  001a1	48 8b 4d 38	 mov	 rcx, QWORD PTR _Ptrnext$[rbp]
  001a5	66 89 01	 mov	 WORD PTR [rcx], ax

; 578  : 
; 579  :     return _Ptrdest;

  001a8	48 8b 45 30	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN11@Maklocstr:

; 580  : }

  001ac	48 8d a5 98 00
	00 00		 lea	 rsp, QWORD PTR [rbp+152]
  001b3	5f		 pop	 rdi
  001b4	5d		 pop	 rbp
  001b5	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Scene.h
;	COMDAT ?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ
_TEXT	SEGMENT
this$ = 80
?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ PROC	; D3D12Scene::GetCamera, COMDAT

; 19   : 	D3D12Camera& GetCamera() { return m_camera; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C3DB073_D3D12Scene@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 20	 add	 rax, 32			; 00000020H
  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ ENDP	; D3D12Scene::GetCamera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Scene.h
;	COMDAT ?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ
_TEXT	SEGMENT
$T1 = 64
this$ = 96
__$ReturnUdt$ = 104
?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ PROC ; D3D12Scene::GetModels, COMDAT

; 18   : 	TArray<D3D12Model*> GetModels() const { return m_models; }

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	c7 45 40 00 00
	00 00		 mov	 DWORD PTR $T1[rbp], 0
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C3DB073_D3D12Scene@h
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00027	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00032	e8 00 00 00 00	 call	 ??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::vector<D3D12Model *,std::allocator<D3D12Model *> >
  00037	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  0003a	83 c8 01	 or	 eax, 1
  0003d	89 45 40	 mov	 DWORD PTR $T1[rbp], eax
  00040	48 8b 45 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ ENDP ; D3D12Scene::GetModels
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<D3D12Model *> >::_Vector_val<std::_Simple_types<D3D12Model *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<D3D12Model *> >::_Vector_val<std::_Simple_types<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal, COMDAT

; 2193 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2194 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first

; 2195 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Xlength, COMDAT

; 2146 :     [[noreturn]] static void _Xlength() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2147 :         _Xlength_error("vector too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 2148 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAXPEAPEAVD3D12Model@@QEAPEAV1@AEAV?$allocator@PEAVD3D12Model@@@0@@Z ; std::_Destroy_range<std::allocator<D3D12Model *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z ; std::allocator<D3D12Model *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 80
_Newcapacity$ = 88
?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_nonzero, COMDAT

; 2004 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2005 :         // allocate array with _Newcapacity elements
; 2006 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 2007 :         auto& _My_data    = _Mypair._Myval2;
; 2008 :         pointer& _Myfirst = _My_data._Myfirst;
; 2009 :         pointer& _Mylast  = _My_data._Mylast;
; 2010 :         pointer& _Myend   = _My_data._Myend;
; 2011 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2012 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 2013 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 2014 : 
; 2015 :         if (_Newcapacity > max_size()) {

  00020	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::max_size
  00029	48 39 45 58	 cmp	 QWORD PTR _Newcapacity$[rbp], rax
  0002d	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 2016 :             _Xlength();

  0002f	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@CAXXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Xlength
$LN2@Buy_nonzer:

; 2017 :         }
; 2018 : 
; 2019 :         _Buy_raw(_Newcapacity);

  00034	48 8b 55 58	 mov	 rdx, QWORD PTR _Newcapacity$[rbp]
  00038	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_raw
$LN3@Buy_nonzer:

; 2020 :     }

  00041	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?_Buy_nonzero@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Myfirst$ = 8
_Mylast$ = 16
_Myend$ = 24
_Newvec$ = 32
this$ = 128
_Newcapacity$ = 136
?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_raw, COMDAT

; 1988 :     _CONSTEXPR20 void _Buy_raw(size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1989 :         // allocate array with _Newcapacity elements
; 1990 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1991 :         pointer& _Myfirst = _My_data._Myfirst;

  0002e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 45 08	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1992 :         pointer& _Mylast  = _My_data._Mylast;

  0003a	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003e	48 83 c0 10	 add	 rax, 16
  00042	48 89 45 10	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1993 :         pointer& _Myend   = _My_data._Myend;

  00046	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004a	48 83 c0 18	 add	 rax, 24
  0004e	48 89 45 18	 mov	 QWORD PTR _Myend$[rbp], rax

; 1994 : 
; 1995 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1996 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1997 : 
; 1998 :         const pointer _Newvec = _Allocate_at_least_helper(_Getal(), _Newcapacity);

  00052	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  0005e	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR _Newcapacity$[rbp]
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@PEAVD3D12Model@@@std@@@std@@YAPEAPEAVD3D12Model@@AEAV?$allocator@PEAVD3D12Model@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<D3D12Model *> >
  0006d	48 89 45 20	 mov	 QWORD PTR _Newvec$[rbp], rax

; 1999 :         _Myfirst              = _Newvec;

  00071	48 8b 45 08	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00075	48 8b 4d 20	 mov	 rcx, QWORD PTR _Newvec$[rbp]
  00079	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2000 :         _Mylast               = _Newvec;

  0007c	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00080	48 8b 4d 20	 mov	 rcx, QWORD PTR _Newvec$[rbp]
  00084	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2001 :         _Myend                = _Newvec + _Newcapacity;

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Newvec$[rbp]
  0008b	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newcapacity$[rbp]
  00092	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00096	48 8b 4d 18	 mov	 rcx, QWORD PTR _Myend$[rbp]
  0009a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2002 :     }

  0009d	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000a1	5d		 pop	 rbp
  000a2	c3		 ret	 0
?_Buy_raw@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::max_size, COMDAT

; 1881 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1882 :         return (_STD min)(

  0001b	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::max_size
  0002c	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00030	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00035	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00039	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0003d	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00046	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1883 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1884 :     }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?max_size@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S11$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAXXZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAAEAV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S11$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAVD3D12Model@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVD3D12Model@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><D3D12Model *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S11$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Right_data$ = 0
_Count$ = 8
$T1 = 80
$T2 = 81
$T3 = 82
tv78 = 88
tv76 = 96
this$ = 128
_Right$ = 136
??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::vector<D3D12Model *,std::allocator<D3D12Model *> >, COMDAT

; 682  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00023	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 89 45 58	 mov	 QWORD PTR tv78[rbp], rax
  0002e	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00035	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEBAAEBV?$allocator@PEAVD3D12Model@@@2@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Getal
  0003a	48 8b d0	 mov	 rdx, rax
  0003d	48 8d 4d 50	 lea	 rcx, QWORD PTR $T1[rbp]
  00041	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::select_on_container_copy_construction
  00046	48 89 45 60	 mov	 QWORD PTR tv76[rbp], rax
  0004a	0f b6 45 51	 movzx	 eax, BYTE PTR $T2[rbp]
  0004e	88 45 52	 mov	 BYTE PTR $T3[rbp], al
  00051	4c 8b 45 60	 mov	 r8, QWORD PTR tv76[rbp]
  00055	0f b6 55 52	 movzx	 edx, BYTE PTR $T3[rbp]
  00059	48 8b 4d 58	 mov	 rcx, QWORD PTR tv78[rbp]
  0005d	e8 00 00 00 00	 call	 ??$?0V?$allocator@PEAVD3D12Model@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAVD3D12Model@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVD3D12Model@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAVD3D12Model@@@1@@Z ; std::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1>::_Compressed_pair<std::allocator<D3D12Model *>,std::_Vector_val<std::_Simple_types<D3D12Model *> >,1><std::allocator<D3D12Model *> >

; 683  :         const auto& _Right_data = _Right._Mypair._Myval2;

  00062	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00069	48 89 45 00	 mov	 QWORD PTR _Right_data$[rbp], rax

; 684  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

  0006d	48 8b 45 00	 mov	 rax, QWORD PTR _Right_data$[rbp]
  00071	48 8b 4d 00	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00075	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00079	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0007d	48 2b c1	 sub	 rax, rcx
  00080	48 c1 f8 03	 sar	 rax, 3
  00084	48 89 45 08	 mov	 QWORD PTR _Count$[rbp], rax

; 685  :         _Construct_n(_Count, _Right_data._Myfirst, _Right_data._Mylast);

  00088	48 8b 45 00	 mov	 rax, QWORD PTR _Right_data$[rbp]
  0008c	48 83 c0 10	 add	 rax, 16
  00090	48 8b 4d 00	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00094	48 83 c1 08	 add	 rcx, 8
  00098	4c 8b c8	 mov	 r9, rax
  0009b	4c 8b c1	 mov	 r8, rcx
  0009e	48 8b 55 08	 mov	 rdx, QWORD PTR _Count$[rbp]
  000a2	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a9	e8 00 00 00 00	 call	 ??$_Construct_n@AEBQEAPEAVD3D12Model@@AEBQEAPEAV1@@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@AEAAX_KAEBQEAPEAVD3D12Model@@1@Z ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Construct_n<D3D12Model * * const &,D3D12Model * * const &>

; 686  :     }

  000ae	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b5	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
??0?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::vector<D3D12Model *,std::allocator<D3D12Model *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
_Al$ = 88
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::select_on_container_copy_construction, COMDAT

; 740  :     _NODISCARD static _CONSTEXPR20 _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 741  :         return _Al;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 742  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA?AV?$allocator@PEAVD3D12Model@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVD3D12Model@@@std@@@std@@SA_KAEBV?$allocator@PEAVD3D12Model@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<D3D12Model *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z PROC ; std::allocator<D3D12Model *>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@PEAVD3D12Model@@@std@@QEAAPEAPEAVD3D12Model@@_K@Z ENDP ; std::allocator<D3D12Model *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z PROC ; std::allocator<D3D12Model *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAVD3D12Model@@@std@@QEAAXQEAPEAVD3D12Model@@_K@Z ENDP ; std::allocator<D3D12Model *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ PROC ; D3D12UploadBufferResource<D3D12MaterialConstants>::GetResource, COMDAT

; 23   : 	ID3D12Resource* GetResource() { return m_uploadBuffer.Get(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  0002b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ ENDP ; D3D12UploadBufferResource<D3D12MaterialConstants>::GetResource
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Resource.h
;	COMDAT ?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ PROC ; D3D12UploadBufferResource<DirectX::XMMATRIX>::GetResource, COMDAT

; 23   : 	ID3D12Resource* GetResource() { return m_uploadBuffer.Get(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__45275B9D_D3D12Resource@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  0002b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ ENDP ; D3D12UploadBufferResource<DirectX::XMMATRIX>::GetResource
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator=<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>, COMDAT

; 3266 :     _CONSTEXPR23 unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3267 :         reset(_Right.release());

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00024	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::release
  00029	48 8b d0	 mov	 rdx, rax
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::reset

; 3268 :         _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  00035	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first
  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first

; 3269 :         return *this;

  0004d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 3270 :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator=<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>, COMDAT

; 3266 :     _CONSTEXPR23 unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3267 :         reset(_Right.release());

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00024	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::release
  00029	48 8b d0	 mov	 rdx, rax
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::reset

; 3268 :         _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  00035	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first
  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first

; 3269 :         return *this;

  0004d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 3270 :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
_TEXT	SEGMENT
_Old$ = 0
tv76 = 72
this$ = 96
_Ptr$ = 104
?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::reset, COMDAT

; 3312 :     _CONSTEXPR23 void reset(pointer _Ptr = nullptr) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3313 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 55 68	 lea	 rdx, QWORD PTR _Ptr$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@0@Z ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,D3D12UploadBufferResource<D3D12PassConstants> * &>
  00030	48 89 45 00	 mov	 QWORD PTR _Old$[rbp], rax

; 3314 :         if (_Old) {

  00034	48 83 7d 00 00	 cmp	 QWORD PTR _Old$[rbp], 0
  00039	74 1d		 je	 SHORT $LN2@reset

; 3315 :             _Mypair._Get_first()(_Old);

  0003b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first
  00047	48 89 45 48	 mov	 QWORD PTR tv76[rbp], rax
  0004b	48 8b 55 00	 mov	 rdx, QWORD PTR _Old$[rbp]
  0004f	48 8b 4d 48	 mov	 rcx, QWORD PTR tv76[rbp]
  00053	e8 00 00 00 00	 call	 ??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >::operator()
$LN2@reset:

; 3316 :         }
; 3317 :     }

  00058	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?reset@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ
_TEXT	SEGMENT
$T1 = 64
this$ = 96
?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::release, COMDAT

; 3308 :     _CONSTEXPR23 pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3309 :         return _STD exchange(_Mypair._Myval2, nullptr);

  0001b	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??$exchange@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$$T@std@@YAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@AEAPEAV1@$$QEA$$T@Z ; std::exchange<D3D12UploadBufferResource<D3D12PassConstants> *,std::nullptr_t>

; 3310 :     }

  00033	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?release@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator->, COMDAT

; 3296 :     _NODISCARD _CONSTEXPR23 pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3297 :         return _Mypair._Myval2;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3298 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 64
tv75 = 72
this$ = 96
??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::~unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >, COMDAT

; 3278 :     _CONSTEXPR23 ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3279 :         if (_Mypair._Myval2) {

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 28		 je	 SHORT $LN2@unique_ptr

; 3280 :             _Mypair._Get_first()(_Mypair._Myval2);

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@PEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@$00@std@@QEAAAEAU?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@2@XZ ; std::_Compressed_pair<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,D3D12UploadBufferResource<D3D12PassConstants> *,1>::_Get_first
  00031	48 89 45 40	 mov	 QWORD PTR tv77[rbp], rax
  00035	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv75[rbp], rax
  00040	48 8b 55 48	 mov	 rdx, QWORD PTR tv75[rbp]
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR tv77[rbp]
  00048	e8 00 00 00 00	 call	 ??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ; std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >::operator()
$LN2@unique_ptr:

; 3281 :         }
; 3282 :     }

  0004d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::~unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z
_TEXT	SEGMENT
$T1 = 64
tv68 = 72
this$ = 96
_Ptr$ = 104
??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z PROC ; std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >::operator(), COMDAT

; 3168 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3169 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3170 :         delete _Ptr;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00024	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00028	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002d	74 14		 je	 SHORT $LN3@operator
  0002f	ba 01 00 00 00	 mov	 edx, 1
  00034	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00038	e8 00 00 00 00	 call	 ??_G?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAXI@Z
  0003d	48 89 45 48	 mov	 QWORD PTR tv68[rbp], rax
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv68[rbp], 0
$LN4@operator:

; 3171 :     }

  0004b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??R?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@QEBAXPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@Z ENDP ; std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Fence>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Fence@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Fence>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Fence@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Fence> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Fence>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Fence>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<ID3D12Fence>::ComPtr<ID3D12Fence>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D12Fence>::ComPtr<ID3D12Fence>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Fence>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Fence>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain4@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGISwapChain4@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain4> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::~ComPtr<IDXGISwapChain4>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::~ComPtr<IDXGISwapChain4>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ComPtr<IDXGISwapChain4>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ComPtr<IDXGISwapChain4>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z
_TEXT	SEGMENT
_Old$ = 0
tv76 = 72
this$ = 96
_Ptr$ = 104
?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::reset, COMDAT

; 3312 :     _CONSTEXPR23 void reset(pointer _Ptr = nullptr) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3313 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 55 68	 lea	 rdx, QWORD PTR _Ptr$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$exchange@PEAVDescriptorHeap@DirectX@@AEAPEAV12@@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::DescriptorHeap *,DirectX::DescriptorHeap * &>
  00030	48 89 45 00	 mov	 QWORD PTR _Old$[rbp], rax

; 3314 :         if (_Old) {

  00034	48 83 7d 00 00	 cmp	 QWORD PTR _Old$[rbp], 0
  00039	74 1d		 je	 SHORT $LN2@reset

; 3315 :             _Mypair._Get_first()(_Old);

  0003b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first
  00047	48 89 45 48	 mov	 QWORD PTR tv76[rbp], rax
  0004b	48 8b 55 00	 mov	 rdx, QWORD PTR _Old$[rbp]
  0004f	48 8b 4d 48	 mov	 rcx, QWORD PTR tv76[rbp]
  00053	e8 00 00 00 00	 call	 ??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z ; std::default_delete<DirectX::DescriptorHeap>::operator()
$LN2@reset:

; 3316 :         }
; 3317 :     }

  00058	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?reset@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAXPEAVDescriptorHeap@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ
_TEXT	SEGMENT
$T1 = 64
this$ = 96
?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::release, COMDAT

; 3308 :     _CONSTEXPR23 pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3309 :         return _STD exchange(_Mypair._Myval2, nullptr);

  0001b	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??$exchange@PEAVDescriptorHeap@DirectX@@$$T@std@@YAPEAVDescriptorHeap@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::DescriptorHeap *,std::nullptr_t>

; 3310 :     }

  00033	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?release@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAPEAVDescriptorHeap@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->, COMDAT

; 3296 :     _NODISCARD _CONSTEXPR23 pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3297 :         return _Mypair._Myval2;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3298 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 64
tv75 = 72
this$ = 96
??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >, COMDAT

; 3278 :     _CONSTEXPR23 ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3279 :         if (_Mypair._Myval2) {

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 28		 je	 SHORT $LN2@unique_ptr

; 3280 :             _Mypair._Get_first()(_Mypair._Myval2);

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VDescriptorHeap@DirectX@@@std@@PEAVDescriptorHeap@DirectX@@$00@std@@QEAAAEAU?$default_delete@VDescriptorHeap@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::DescriptorHeap>,DirectX::DescriptorHeap *,1>::_Get_first
  00031	48 89 45 40	 mov	 QWORD PTR tv77[rbp], rax
  00035	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv75[rbp], rax
  00040	48 8b 55 48	 mov	 rdx, QWORD PTR tv75[rbp]
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR tv77[rbp]
  00048	e8 00 00 00 00	 call	 ??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z ; std::default_delete<DirectX::DescriptorHeap>::operator()
$LN2@unique_ptr:

; 3281 :         }
; 3282 :     }

  0004d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv68 = 72
this$ = 96
_Ptr$ = 104
??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z PROC ; std::default_delete<DirectX::DescriptorHeap>::operator(), COMDAT

; 3168 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3169 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3170 :         delete _Ptr;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00024	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00028	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002d	74 14		 je	 SHORT $LN3@operator
  0002f	ba 01 00 00 00	 mov	 edx, 1
  00034	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00038	e8 00 00 00 00	 call	 ??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z
  0003d	48 89 45 48	 mov	 QWORD PTR tv68[rbp], rax
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv68[rbp], 0
$LN4@operator:

; 3171 :     }

  0004b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??R?$default_delete@VDescriptorHeap@DirectX@@@std@@QEBAXPEAVDescriptorHeap@DirectX@@@Z ENDP ; std::default_delete<DirectX::DescriptorHeap>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandQueue@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandQueue@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::~ComPtr<ID3D12CommandQueue>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::~ComPtr<ID3D12CommandQueue>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ComPtr<ID3D12CommandQueue>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ComPtr<ID3D12CommandQueue>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAAPEAPEAUID3D12GraphicsCommandList6@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12GraphicsCommandList6@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 80
other$ = 88
??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>, COMDAT

; 258  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 257  :     ComPtr(const ComPtr& other) throw() : ptr_(other.ptr_)

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR other$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 259  :         InternalAddRef();

  0002e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00032	e8 00 00 00 00	 call	 ?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalAddRef

; 260  :     }

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ
_TEXT	SEGMENT
this$ = 80
?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalAddRef, COMDAT

; 220  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 221  :         if (ptr_ != nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 15		 je	 SHORT $LN2@InternalAd

; 222  :         {
; 223  :             ptr_->AddRef();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	ff 50 08	 call	 QWORD PTR [rax+8]
  00039	90		 npad	 1
$LN2@InternalAd:

; 224  :         }
; 225  :     }

  0003a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?InternalAddRef@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@IEBAXXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAAPEAPEAUID3D12CommandAllocator@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12CommandAllocator@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::~ComPtr<ID3D12CommandAllocator>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::~ComPtr<ID3D12CommandAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ComPtr<ID3D12CommandAllocator>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ComPtr<ID3D12CommandAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIAdapter1@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIAdapter1@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::~ComPtr<IDXGIAdapter1>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::~ComPtr<IDXGIAdapter1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ComPtr<IDXGIAdapter1>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ComPtr<IDXGIAdapter1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Device8@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Device8@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Device8> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::~ComPtr<ID3D12Device8>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::~ComPtr<ID3D12Device8>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::ComPtr<ID3D12Device8>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::ComPtr<ID3D12Device8>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device8>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device8>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAAPEAPEAUIDXGIFactory7@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UIDXGIFactory7@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGIFactory7> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::~ComPtr<IDXGIFactory7>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::~ComPtr<IDXGIFactory7>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ComPtr<IDXGIFactory7>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ComPtr<IDXGIFactory7>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IDXGIFactory7>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IDXGIFactory7>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?WaitFrame@D3D12Renderer@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 64
tv154 = 72
tv129 = 72
tv87 = 72
tv68 = 72
tv152 = 80
tv142 = 80
tv83 = 80
tv140 = 88
tv74 = 88
tv138 = 96
tv81 = 96
this$ = 128
?WaitFrame@D3D12Renderer@@AEAAXXZ PROC			; D3D12Renderer::WaitFrame, COMDAT

; 375  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 376  : 	m_commandQueue->Signal(m_fence.Get(), ++m_fenceValue);

  0001e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00025	48 83 c0 48	 add	 rax, 72			; 00000048H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->
  00031	48 89 45 48	 mov	 QWORD PTR tv68[rbp], rax
  00035	48 8b 45 48	 mov	 rax, QWORD PTR tv68[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00040	48 89 45 50	 mov	 QWORD PTR tv83[rbp], rax
  00044	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  00052	48 ff c0	 inc	 rax
  00055	48 89 45 58	 mov	 QWORD PTR tv74[rbp], rax
  00059	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00060	48 8b 4d 58	 mov	 rcx, QWORD PTR tv74[rbp]
  00064	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx
  0006b	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::Get
  00080	48 89 45 60	 mov	 QWORD PTR tv81[rbp], rax
  00084	4c 8b 45 58	 mov	 r8, QWORD PTR tv74[rbp]
  00088	48 8b 55 60	 mov	 rdx, QWORD PTR tv81[rbp]
  0008c	48 8b 4d 48	 mov	 rcx, QWORD PTR tv68[rbp]
  00090	ff 55 50	 call	 QWORD PTR tv83[rbp]

; 377  : 
; 378  : 	if (m_fence->GetCompletedValue() < m_fenceValue)

  00093	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  000a0	48 8b c8	 mov	 rcx, rax
  000a3	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
  000a8	48 89 45 48	 mov	 QWORD PTR tv87[rbp], rax
  000ac	48 8b 45 48	 mov	 rax, QWORD PTR tv87[rbp]
  000b0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b3	48 8b 4d 48	 mov	 rcx, QWORD PTR tv87[rbp]
  000b7	ff 50 40	 call	 QWORD PTR [rax+64]
  000ba	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c1	48 3b 81 b0 00
	00 00		 cmp	 rax, QWORD PTR [rcx+176]
  000c8	0f 83 8e 00 00
	00		 jae	 $LN2@WaitFrame

; 379  : 	{
; 380  : 		m_fence->SetEventOnCompletion(m_fenceValue, m_fenceEvent);

  000ce	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d5	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  000db	48 8b c8	 mov	 rcx, rax
  000de	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
  000e3	48 89 45 48	 mov	 QWORD PTR tv129[rbp], rax
  000e7	48 8b 45 48	 mov	 rax, QWORD PTR tv129[rbp]
  000eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ee	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  000f2	48 89 45 50	 mov	 QWORD PTR tv142[rbp], rax
  000f6	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000fd	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00104	48 89 45 58	 mov	 QWORD PTR tv140[rbp], rax
  00108	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010f	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  00116	48 89 45 60	 mov	 QWORD PTR tv138[rbp], rax
  0011a	4c 8b 45 58	 mov	 r8, QWORD PTR tv140[rbp]
  0011e	48 8b 55 60	 mov	 rdx, QWORD PTR tv138[rbp]
  00122	48 8b 4d 48	 mov	 rcx, QWORD PTR tv129[rbp]
  00126	ff 55 50	 call	 QWORD PTR tv142[rbp]

; 381  : 		WaitForSingleObject(m_fenceEvent, static_cast<DWORD>(std::chrono::milliseconds::max().count()));

  00129	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0012d	e8 00 00 00 00	 call	 ?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::max
  00132	48 8b c8	 mov	 rcx, rax
  00135	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  0013a	89 45 48	 mov	 DWORD PTR tv154[rbp], eax
  0013d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00144	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  0014b	48 89 45 50	 mov	 QWORD PTR tv152[rbp], rax
  0014f	8b 55 48	 mov	 edx, DWORD PTR tv154[rbp]
  00152	48 8b 4d 50	 mov	 rcx, QWORD PTR tv152[rbp]
  00156	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForSingleObject
$LN2@WaitFrame:

; 382  : 
; 383  : 	}
; 384  : 
; 385  : 
; 386  : }

  0015c	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00160	5d		 pop	 rbp
  00161	c3		 ret	 0
?WaitFrame@D3D12Renderer@@AEAAXXZ ENDP			; D3D12Renderer::WaitFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 64
tv131 = 72
tv77 = 72
tv68 = 72
tv129 = 80
tv87 = 80
tv85 = 88
this$ = 112
fenceValue$ = 120
?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z PROC	; D3D12Renderer::WaitForFenceValue, COMDAT

; 365  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 366  : 	if (m_fence->GetCompletedValue() < fenceValue)

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
  00035	48 89 45 48	 mov	 QWORD PTR tv68[rbp], rax
  00039	48 8b 45 48	 mov	 rax, QWORD PTR tv68[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4d 48	 mov	 rcx, QWORD PTR tv68[rbp]
  00044	ff 50 40	 call	 QWORD PTR [rax+64]
  00047	48 3b 45 78	 cmp	 rax, QWORD PTR fenceValue$[rbp]
  0004b	73 73		 jae	 SHORT $LN2@WaitForFen

; 367  : 	{
; 368  : 		m_fence->SetEventOnCompletion(fenceValue, m_fenceEvent);

  0004d	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00051	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator->
  0005f	48 89 45 48	 mov	 QWORD PTR tv77[rbp], rax
  00063	48 8b 45 48	 mov	 rax, QWORD PTR tv77[rbp]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0006e	48 89 45 50	 mov	 QWORD PTR tv87[rbp], rax
  00072	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00076	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  0007d	48 89 45 58	 mov	 QWORD PTR tv85[rbp], rax
  00081	4c 8b 45 58	 mov	 r8, QWORD PTR tv85[rbp]
  00085	48 8b 55 78	 mov	 rdx, QWORD PTR fenceValue$[rbp]
  00089	48 8b 4d 48	 mov	 rcx, QWORD PTR tv77[rbp]
  0008d	ff 55 50	 call	 QWORD PTR tv87[rbp]

; 369  : 		WaitForSingleObject(m_fenceEvent, static_cast<DWORD>(std::chrono::milliseconds::max().count()));

  00090	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  00094	e8 00 00 00 00	 call	 ?max@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::max
  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  000a1	89 45 48	 mov	 DWORD PTR tv131[rbp], eax
  000a4	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  000af	48 89 45 50	 mov	 QWORD PTR tv129[rbp], rax
  000b3	8b 55 48	 mov	 edx, DWORD PTR tv131[rbp]
  000b6	48 8b 4d 50	 mov	 rcx, QWORD PTR tv129[rbp]
  000ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForSingleObject
$LN2@WaitForFen:

; 370  : 
; 371  : 	}
; 372  : }

  000c0	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?WaitForFenceValue@D3D12Renderer@@AEAAX_K@Z ENDP	; D3D12Renderer::WaitForFenceValue
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?Signal@D3D12Renderer@@AEAA_KAEA_K@Z
_TEXT	SEGMENT
tv68 = 64
tv83 = 72
tv81 = 80
tv79 = 88
this$ = 112
fenceValue$ = 120
?Signal@D3D12Renderer@@AEAA_KAEA_K@Z PROC		; D3D12Renderer::Signal, COMDAT

; 359  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 360  : 	m_commandQueue->Signal(m_fence.Get(), ++fenceValue);

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 83 c0 48	 add	 rax, 72			; 00000048H
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->
  00033	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00037	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]
  0003b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003e	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00042	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00046	48 8b 45 78	 mov	 rax, QWORD PTR fenceValue$[rbp]
  0004a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004d	48 ff c0	 inc	 rax
  00050	48 8b 4d 78	 mov	 rcx, QWORD PTR fenceValue$[rbp]
  00054	48 89 01	 mov	 QWORD PTR [rcx], rax
  00057	48 8b 45 78	 mov	 rax, QWORD PTR fenceValue$[rbp]
  0005b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005e	48 89 45 50	 mov	 QWORD PTR tv81[rbp], rax
  00062	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00066	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEBAPEAUID3D12Fence@@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::Get
  00074	48 89 45 58	 mov	 QWORD PTR tv79[rbp], rax
  00078	4c 8b 45 50	 mov	 r8, QWORD PTR tv81[rbp]
  0007c	48 8b 55 58	 mov	 rdx, QWORD PTR tv79[rbp]
  00080	48 8b 4d 40	 mov	 rcx, QWORD PTR tv68[rbp]
  00084	ff 55 48	 call	 QWORD PTR tv83[rbp]

; 361  : 	return fenceValue;

  00087	48 8b 45 78	 mov	 rax, QWORD PTR fenceValue$[rbp]
  0008b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 362  : }

  0008e	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?Signal@D3D12Renderer@@AEAA_KAEA_K@Z ENDP		; D3D12Renderer::Signal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?Update@D3D12Renderer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?Update@D3D12Renderer@@QEAAXXZ PROC			; D3D12Renderer::Update, COMDAT

; 353  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 354  : 	
; 355  : 
; 356  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?Update@D3D12Renderer@@QEAAXXZ ENDP			; D3D12Renderer::Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?OnResize@D3D12Renderer@@QEAAXJJ@Z
_TEXT	SEGMENT
this$ = 80
x$ = 88
y$ = 96
?OnResize@D3D12Renderer@@QEAAXJJ@Z PROC			; D3D12Renderer::OnResize, COMDAT

; 347  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 348  : 	
; 349  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?OnResize@D3D12Renderer@@QEAAXJJ@Z ENDP			; D3D12Renderer::OnResize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?EndFrame@D3D12Renderer@@UEAAXXZ
_TEXT	SEGMENT
this$ = 80
?EndFrame@D3D12Renderer@@UEAAXXZ PROC			; D3D12Renderer::EndFrame, COMDAT

; 343  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 344  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?EndFrame@D3D12Renderer@@UEAAXXZ ENDP			; D3D12Renderer::EndFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?RenderScene@D3D12Renderer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?RenderScene@D3D12Renderer@@QEAAXXZ PROC		; D3D12Renderer::RenderScene, COMDAT

; 334  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 335  : 	
; 336  : 
; 337  : 
; 338  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?RenderScene@D3D12Renderer@@QEAAXXZ ENDP		; D3D12Renderer::RenderScene
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?RenderObj@D3D12Renderer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?RenderObj@D3D12Renderer@@QEAAXXZ PROC			; D3D12Renderer::RenderObj, COMDAT

; 328  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 329  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?RenderObj@D3D12Renderer@@QEAAXXZ ENDP			; D3D12Renderer::RenderObj
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z
_TEXT	SEGMENT
backBuffer$ = 0
PSO$ = 8
models$ = 16
camera$ = 48
window$ = 56
backBufferHandle$ = 64
depthBufferHandle$ = 72
clearColor$ = 80
ppHeaps$ = 96
passConst$1 = 112
<range>$L0$2 = 1136
<begin>$L0$3 = 1144
<end>$L0$4 = 1152
model$5 = 1160
mesh$6 = 1168
material$7 = 1176
lists$ = 1184
$T8 = 1384
$T9 = 1392
$T10 = 1400
$T11 = 1408
$T12 = 1416
$T13 = 1424
$T14 = 1432
$T15 = 1440
$T16 = 1448
$T17 = 1456
$T18 = 1464
$T19 = 1528
$T20 = 1536
$T21 = 1552
$T22 = 1564
$T23 = 1576
$T24 = 1588
$T25 = 1600
$T26 = 1616
$T27 = 1624
$T28 = 1632
$T29 = 1640
$T30 = 1648
$T31 = 1656
tv737 = 1664
tv733 = 1664
tv724 = 1664
tv700 = 1664
tv684 = 1664
tv670 = 1664
tv621 = 1664
tv596 = 1664
tv571 = 1664
tv556 = 1664
tv539 = 1664
tv511 = 1664
tv474 = 1664
tv465 = 1664
tv374 = 1664
tv351 = 1664
tv336 = 1664
tv317 = 1664
tv301 = 1664
tv285 = 1664
tv261 = 1664
tv239 = 1664
tv214 = 1664
tv163 = 1664
tv152 = 1664
tv142 = 1664
tv132 = 1664
tv86 = 1664
tv372 = 1668
tv715 = 1672
tv690 = 1672
tv645 = 1672
tv637 = 1672
tv612 = 1672
tv587 = 1672
tv562 = 1672
tv547 = 1672
tv530 = 1672
tv492 = 1672
tv356 = 1672
tv342 = 1672
tv327 = 1672
tv308 = 1672
tv292 = 1672
tv276 = 1672
tv252 = 1672
tv230 = 1672
tv187 = 1672
tv180 = 1672
tv130 = 1672
tv739 = 1680
tv735 = 1680
tv713 = 1680
tv635 = 1680
tv603 = 1680
tv578 = 1680
tv525 = 1680
tv483 = 1680
tv325 = 1680
tv178 = 1680
tv660 = 1688
tv610 = 1688
tv585 = 1688
tv523 = 1688
tv490 = 1688
tv204 = 1688
tv176 = 1688
this$ = 1728
scene$ = 1736
?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z PROC	; D3D12Renderer::Render, COMDAT

; 238  : {

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec e0 06
	00 00		 sub	 rsp, 1760		; 000006e0H
  00014	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 239  : 	BeginFrame(scene);

  00025	48 8b 95 c8 06
	00 00		 mov	 rdx, QWORD PTR scene$[rbp]
  0002c	48 8b 8d c0 06
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00033	e8 00 00 00 00	 call	 ?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z ; D3D12Renderer::BeginFrame

; 240  : 
; 241  : 	if (scene == nullptr) return;

  00038	48 83 bd c8 06
	00 00 00	 cmp	 QWORD PTR scene$[rbp], 0
  00040	75 05		 jne	 SHORT $LN5@Render
  00042	e9 b8 0d 00 00	 jmp	 $LN1@Render
$LN5@Render:

; 242  : 	auto& backBuffer = m_backBuffers[CurrentBackBufferIndex];

  00047	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8b 80 b8 00
	00 00		 mov	 rax, QWORD PTR [rax+184]
  00055	48 8b 8d c0 06
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	48 8d 84 c1 80
	00 00 00	 lea	 rax, QWORD PTR [rcx+rax*8+128]
  00064	48 89 45 00	 mov	 QWORD PTR backBuffer$[rbp], rax

; 243  : 	auto PSO = D3DUtil::GetPipeline(eShaderType::Default);

  00068	33 c9		 xor	 ecx, ecx
  0006a	e8 00 00 00 00	 call	 ?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z ; D3DUtil::GetPipeline
  0006f	48 89 45 08	 mov	 QWORD PTR PSO$[rbp], rax

; 244  : 	auto models = scene->GetModels();

  00073	48 8d 55 10	 lea	 rdx, QWORD PTR models$[rbp]
  00077	48 8b 8d c8 06
	00 00		 mov	 rcx, QWORD PTR scene$[rbp]
  0007e	e8 00 00 00 00	 call	 ?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ ; D3D12Scene::GetModels
  00083	90		 npad	 1

; 245  : 	auto& camera = scene->GetCamera();

  00084	48 8b 8d c8 06
	00 00		 mov	 rcx, QWORD PTR scene$[rbp]
  0008b	e8 00 00 00 00	 call	 ?GetCamera@D3D12Scene@@QEAAAEAUD3D12Camera@@XZ ; D3D12Scene::GetCamera
  00090	48 89 45 30	 mov	 QWORD PTR camera$[rbp], rax

; 246  : 	auto window = GEngine.GetWindowManager()->GetWindow(0);

  00094	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?GEngine@@3VDEngine@@A ; GEngine
  0009b	e8 00 00 00 00	 call	 ?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ ; DEngine::GetWindowManager
  000a0	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  000a7	33 d2		 xor	 edx, edx
  000a9	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv86[rbp]
  000b0	e8 00 00 00 00	 call	 ?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z ; FWindowsWindowManager::GetWindow
  000b5	48 89 45 38	 mov	 QWORD PTR window$[rbp], rax

; 247  : 	CD3DX12_CPU_DESCRIPTOR_HANDLE backBufferHandle(RTDescriptorHeap->GetCpuHandle(CurrentBackBufferIndex));

  000b9	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c0	48 83 c0 50	 add	 rax, 80			; 00000050H
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  000cc	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  000d3	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000da	48 8b 80 b8 00
	00 00		 mov	 rax, QWORD PTR [rax+184]
  000e1	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv130[rbp], rax
  000e8	4c 8b 85 88 06
	00 00		 mov	 r8, QWORD PTR tv130[rbp]
  000ef	48 8d 95 68 05
	00 00		 lea	 rdx, QWORD PTR $T8[rbp]
  000f6	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv132[rbp]
  000fd	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  00102	48 8b d0	 mov	 rdx, rax
  00105	48 8d 4d 40	 lea	 rcx, QWORD PTR backBufferHandle$[rbp]
  00109	e8 00 00 00 00	 call	 ??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z ; CD3DX12_CPU_DESCRIPTOR_HANDLE::CD3DX12_CPU_DESCRIPTOR_HANDLE

; 248  : 	CD3DX12_CPU_DESCRIPTOR_HANDLE depthBufferHandle(DSDescriptorHeap->GetFirstCpuHandle());

  0010e	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00115	48 83 c0 58	 add	 rax, 88			; 00000058H
  00119	48 8b c8	 mov	 rcx, rax
  0011c	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  00121	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv142[rbp], rax
  00128	48 8d 95 70 05
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  0012f	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv142[rbp]
  00136	e8 00 00 00 00	 call	 ?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ ; DirectX::DescriptorHeap::GetFirstCpuHandle
  0013b	48 8b d0	 mov	 rdx, rax
  0013e	48 8d 4d 48	 lea	 rcx, QWORD PTR depthBufferHandle$[rbp]
  00142	e8 00 00 00 00	 call	 ??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z ; CD3DX12_CPU_DESCRIPTOR_HANDLE::CD3DX12_CPU_DESCRIPTOR_HANDLE

; 249  : 	FLOAT clearColor[] = { 0.0f, 0.0f, 0.0f, 1.f };

  00147	0f 57 c0	 xorps	 xmm0, xmm0
  0014a	f3 0f 11 45 50	 movss	 DWORD PTR clearColor$[rbp], xmm0
  0014f	0f 57 c0	 xorps	 xmm0, xmm0
  00152	f3 0f 11 45 54	 movss	 DWORD PTR clearColor$[rbp+4], xmm0
  00157	0f 57 c0	 xorps	 xmm0, xmm0
  0015a	f3 0f 11 45 58	 movss	 DWORD PTR clearColor$[rbp+8], xmm0
  0015f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00167	f3 0f 11 45 5c	 movss	 DWORD PTR clearColor$[rbp+12], xmm0

; 250  : 	ID3D12DescriptorHeap* ppHeaps[] = { SRDescriptorHeap->Heap() };

  0016c	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00173	48 83 c0 60	 add	 rax, 96			; 00000060H
  00177	48 8b c8	 mov	 rcx, rax
  0017a	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  0017f	48 8b c8	 mov	 rcx, rax
  00182	e8 00 00 00 00	 call	 ?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ ; DirectX::DescriptorHeap::Heap
  00187	48 89 45 60	 mov	 QWORD PTR ppHeaps$[rbp], rax

; 251  : 	m_commandAllocator->Reset();

  0018b	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00192	48 83 c0 38	 add	 rax, 56			; 00000038H
  00196	48 8b c8	 mov	 rcx, rax
  00199	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator->
  0019e	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  001a5	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv152[rbp]
  001ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001af	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  001b6	ff 50 40	 call	 QWORD PTR [rax+64]

; 252  : 	m_commandList->Reset(m_commandAllocator.Get(), PSO->m_pipelineState.Get());

  001b9	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001c0	48 83 c0 40	 add	 rax, 64			; 00000040H
  001c4	48 8b c8	 mov	 rcx, rax
  001c7	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  001cc	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv163[rbp], rax
  001d3	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv163[rbp]
  001da	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001dd	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  001e1	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv180[rbp], rax
  001e8	48 8b 45 08	 mov	 rax, QWORD PTR PSO$[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12PipelineState@@@WRL@Microsoft@@QEBAPEAUID3D12PipelineState@@XZ ; Microsoft::WRL::ComPtr<ID3D12PipelineState>::Get
  001f4	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv178[rbp], rax
  001fb	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00202	48 83 c0 38	 add	 rax, 56			; 00000038H
  00206	48 8b c8	 mov	 rcx, rax
  00209	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::Get
  0020e	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv176[rbp], rax
  00215	4c 8b 85 90 06
	00 00		 mov	 r8, QWORD PTR tv178[rbp]
  0021c	48 8b 95 98 06
	00 00		 mov	 rdx, QWORD PTR tv176[rbp]
  00223	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv163[rbp]
  0022a	ff 95 88 06 00
	00		 call	 QWORD PTR tv180[rbp]

; 253  : 
; 254  : 	TransitionResource(m_commandList, backBuffer.Get(),

  00230	48 8d 85 78 05
	00 00		 lea	 rax, QWORD PTR $T10[rbp]
  00237	48 89 85 80 05
	00 00		 mov	 QWORD PTR $T11[rbp], rax
  0023e	48 8b 4d 00	 mov	 rcx, QWORD PTR backBuffer$[rbp]
  00242	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  00247	48 8b d0	 mov	 rdx, rax
  0024a	48 8b 8d 80 05
	00 00		 mov	 rcx, QWORD PTR $T11[rbp]
  00251	e8 00 00 00 00	 call	 ??$?0UID3D12Resource@@@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@PEAUID3D12Resource@@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource><ID3D12Resource>
  00256	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv733[rbp], rax
  0025d	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv733[rbp]
  00264	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv187[rbp], rax
  0026b	48 8d 85 88 05
	00 00		 lea	 rax, QWORD PTR $T12[rbp]
  00272	48 89 85 90 05
	00 00		 mov	 QWORD PTR $T13[rbp], rax
  00279	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00280	48 83 c0 40	 add	 rax, 64			; 00000040H
  00284	48 8b d0	 mov	 rdx, rax
  00287	48 8b 8d 90 05
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  0028e	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
  00293	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv735[rbp], rax
  0029a	48 8b 85 90 06
	00 00		 mov	 rax, QWORD PTR tv735[rbp]
  002a1	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv204[rbp], rax
  002a8	41 b9 04 00 00
	00		 mov	 r9d, 4
  002ae	45 33 c0	 xor	 r8d, r8d
  002b1	48 8b 95 88 06
	00 00		 mov	 rdx, QWORD PTR tv187[rbp]
  002b8	48 8b 8d 98 06
	00 00		 mov	 rcx, QWORD PTR tv204[rbp]
  002bf	e8 00 00 00 00	 call	 ?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z ; TransitionResource

; 255  : 		D3D12_RESOURCE_STATE_PRESENT, D3D12_RESOURCE_STATE_RENDER_TARGET);
; 256  : 	m_commandList->OMSetRenderTargets(1, &backBufferHandle, FALSE, &depthBufferHandle);

  002c4	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002cb	48 83 c0 40	 add	 rax, 64			; 00000040H
  002cf	48 8b c8	 mov	 rcx, rax
  002d2	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  002d7	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv214[rbp], rax
  002de	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv214[rbp]
  002e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002e8	48 8b 80 70 01
	00 00		 mov	 rax, QWORD PTR [rax+368]
  002ef	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv230[rbp], rax
  002f6	48 8d 45 48	 lea	 rax, QWORD PTR depthBufferHandle$[rbp]
  002fa	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  002ff	45 33 c9	 xor	 r9d, r9d
  00302	4c 8d 45 40	 lea	 r8, QWORD PTR backBufferHandle$[rbp]
  00306	ba 01 00 00 00	 mov	 edx, 1
  0030b	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv214[rbp]
  00312	ff 95 88 06 00
	00		 call	 QWORD PTR tv230[rbp]

; 257  : 	m_commandList->ClearRenderTargetView(backBufferHandle, clearColor, 0, nullptr);

  00318	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0031f	48 83 c0 40	 add	 rax, 64			; 00000040H
  00323	48 8b c8	 mov	 rcx, rax
  00326	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0032b	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv239[rbp], rax
  00332	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv239[rbp]
  00339	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0033c	48 8b 80 80 01
	00 00		 mov	 rax, QWORD PTR [rax+384]
  00343	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv252[rbp], rax
  0034a	48 8b 45 40	 mov	 rax, QWORD PTR backBufferHandle$[rbp]
  0034e	48 89 85 98 05
	00 00		 mov	 QWORD PTR $T14[rbp], rax
  00355	48 8b 85 98 05
	00 00		 mov	 rax, QWORD PTR $T14[rbp]
  0035c	48 89 85 a0 05
	00 00		 mov	 QWORD PTR $T15[rbp], rax
  00363	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0036c	45 33 c9	 xor	 r9d, r9d
  0036f	4c 8d 45 50	 lea	 r8, QWORD PTR clearColor$[rbp]
  00373	48 8b 95 a0 05
	00 00		 mov	 rdx, QWORD PTR $T15[rbp]
  0037a	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv239[rbp]
  00381	ff 95 88 06 00
	00		 call	 QWORD PTR tv252[rbp]

; 258  : 	m_commandList->ClearDepthStencilView(depthBufferHandle, D3D12_CLEAR_FLAG_DEPTH, 1.f, 0, 0, nullptr);

  00387	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0038e	48 83 c0 40	 add	 rax, 64			; 00000040H
  00392	48 8b c8	 mov	 rcx, rax
  00395	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0039a	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv261[rbp], rax
  003a1	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv261[rbp]
  003a8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ab	48 8b 80 78 01
	00 00		 mov	 rax, QWORD PTR [rax+376]
  003b2	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv276[rbp], rax
  003b9	48 8b 45 48	 mov	 rax, QWORD PTR depthBufferHandle$[rbp]
  003bd	48 89 85 a8 05
	00 00		 mov	 QWORD PTR $T16[rbp], rax
  003c4	48 8b 85 a8 05
	00 00		 mov	 rax, QWORD PTR $T16[rbp]
  003cb	48 89 85 b0 05
	00 00		 mov	 QWORD PTR $T17[rbp], rax
  003d2	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  003db	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  003e3	c6 44 24 20 00	 mov	 BYTE PTR [rsp+32], 0
  003e8	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  003f0	41 b8 01 00 00
	00		 mov	 r8d, 1
  003f6	48 8b 95 b0 05
	00 00		 mov	 rdx, QWORD PTR $T17[rbp]
  003fd	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv261[rbp]
  00404	ff 95 88 06 00
	00		 call	 QWORD PTR tv276[rbp]

; 259  : 	m_commandList->RSSetScissorRects(1, &ScissorRect);

  0040a	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00411	48 83 c0 40	 add	 rax, 64			; 00000040H
  00415	48 8b c8	 mov	 rcx, rax
  00418	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0041d	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv285[rbp], rax
  00424	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv285[rbp]
  0042b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0042e	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  00435	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv292[rbp], rax
  0043c	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00443	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  00449	4c 8b c0	 mov	 r8, rax
  0044c	ba 01 00 00 00	 mov	 edx, 1
  00451	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv285[rbp]
  00458	ff 95 88 06 00
	00		 call	 QWORD PTR tv292[rbp]

; 260  : 	m_commandList->RSSetViewports(1, &Viewport);

  0045e	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00465	48 83 c0 40	 add	 rax, 64			; 00000040H
  00469	48 8b c8	 mov	 rcx, rax
  0046c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00471	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv301[rbp], rax
  00478	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv301[rbp]
  0047f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00482	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  00489	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv308[rbp], rax
  00490	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00497	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  0049d	4c 8b c0	 mov	 r8, rax
  004a0	ba 01 00 00 00	 mov	 edx, 1
  004a5	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv301[rbp]
  004ac	ff 95 88 06 00
	00		 call	 QWORD PTR tv308[rbp]

; 261  : 	m_commandList->SetGraphicsRootSignature(PSO->m_rootSignature.Get());

  004b2	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004b9	48 83 c0 40	 add	 rax, 64			; 00000040H
  004bd	48 8b c8	 mov	 rcx, rax
  004c0	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  004c5	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv317[rbp], rax
  004cc	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv317[rbp]
  004d3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004d6	48 8b 80 f0 00
	00 00		 mov	 rax, QWORD PTR [rax+240]
  004dd	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv327[rbp], rax
  004e4	48 8b 45 08	 mov	 rax, QWORD PTR PSO$[rbp]
  004e8	48 83 c0 08	 add	 rax, 8
  004ec	48 8b c8	 mov	 rcx, rax
  004ef	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12RootSignature@@@WRL@Microsoft@@QEBAPEAUID3D12RootSignature@@XZ ; Microsoft::WRL::ComPtr<ID3D12RootSignature>::Get
  004f4	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv325[rbp], rax
  004fb	48 8b 95 90 06
	00 00		 mov	 rdx, QWORD PTR tv325[rbp]
  00502	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv317[rbp]
  00509	ff 95 88 06 00
	00		 call	 QWORD PTR tv327[rbp]

; 262  : 	m_commandList->SetDescriptorHeaps(1, ppHeaps);

  0050f	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00516	48 83 c0 40	 add	 rax, 64			; 00000040H
  0051a	48 8b c8	 mov	 rcx, rax
  0051d	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00522	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv336[rbp], rax
  00529	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv336[rbp]
  00530	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00533	48 8b 80 e0 00
	00 00		 mov	 rax, QWORD PTR [rax+224]
  0053a	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv342[rbp], rax
  00541	4c 8d 45 60	 lea	 r8, QWORD PTR ppHeaps$[rbp]
  00545	ba 01 00 00 00	 mov	 edx, 1
  0054a	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv336[rbp]
  00551	ff 95 88 06 00
	00		 call	 QWORD PTR tv342[rbp]

; 263  : 	m_commandList->IASetPrimitiveTopology(D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST);

  00557	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0055e	48 83 c0 40	 add	 rax, 64			; 00000040H
  00562	48 8b c8	 mov	 rcx, rax
  00565	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0056a	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv351[rbp], rax
  00571	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv351[rbp]
  00578	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0057b	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00582	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv356[rbp], rax
  00589	ba 04 00 00 00	 mov	 edx, 4
  0058e	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv351[rbp]
  00595	ff 95 88 06 00
	00		 call	 QWORD PTR tv356[rbp]

; 264  : 
; 265  : 	
; 266  : 	{
; 267  : 		D3D12PassConstants passConst;
; 268  : 
; 269  : 		passConst.ViewProjectionMatrix = D3DUtil::GetViewProjMatrix(&camera);

  0059b	48 8b 55 30	 mov	 rdx, QWORD PTR camera$[rbp]
  0059f	48 8d 8d b8 05
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  005a6	e8 00 00 00 00	 call	 ?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z ; D3DUtil::GetViewProjMatrix
  005ab	48 8d 8d f0 03
	00 00		 lea	 rcx, QWORD PTR passConst$1[rbp+896]
  005b2	48 8b f9	 mov	 rdi, rcx
  005b5	48 8b f0	 mov	 rsi, rax
  005b8	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  005bd	f3 a4		 rep movsb

; 270  : 		passConst.RenderTargetSize = XMFLOAT2(window->GetWitdh(), window->GetHeight());

  005bf	48 8b 4d 38	 mov	 rcx, QWORD PTR window$[rbp]
  005c3	e8 00 00 00 00	 call	 ?GetHeight@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetHeight
  005c8	8b c0		 mov	 eax, eax
  005ca	f3 48 0f 2a c0	 cvtsi2ss xmm0, rax
  005cf	f3 0f 11 85 80
	06 00 00	 movss	 DWORD PTR tv374[rbp], xmm0
  005d7	48 8b 4d 38	 mov	 rcx, QWORD PTR window$[rbp]
  005db	e8 00 00 00 00	 call	 ?GetWitdh@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetWitdh
  005e0	8b c0		 mov	 eax, eax
  005e2	f3 48 0f 2a c0	 cvtsi2ss xmm0, rax
  005e7	f3 0f 11 85 84
	06 00 00	 movss	 DWORD PTR tv372[rbp], xmm0
  005ef	f3 0f 10 95 80
	06 00 00	 movss	 xmm2, DWORD PTR tv374[rbp]
  005f7	f3 0f 10 8d 84
	06 00 00	 movss	 xmm1, DWORD PTR tv372[rbp]
  005ff	48 8d 8d f8 05
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00606	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QEAA@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0060b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0060e	48 89 85 30 04
	00 00		 mov	 QWORD PTR passConst$1[rbp+960], rax

; 271  : 		passConst.TotalTime = FGameTimer::TotalTime();

  00615	e8 00 00 00 00	 call	 ?TotalTime@FGameTimer@@SAMXZ ; FGameTimer::TotalTime
  0061a	f3 0f 11 85 38
	04 00 00	 movss	 DWORD PTR passConst$1[rbp+968], xmm0

; 272  : 		passConst.DeltaTime = FGameTimer::DeltaTime();

  00622	e8 00 00 00 00	 call	 ?DeltaTime@FGameTimer@@SAMXZ ; FGameTimer::DeltaTime
  00627	f3 0f 11 85 3c
	04 00 00	 movss	 DWORD PTR passConst$1[rbp+972], xmm0

; 273  : 		passConst.EyePos = camera.m_position;

  0062f	48 8d 85 40 04
	00 00		 lea	 rax, QWORD PTR passConst$1[rbp+976]
  00636	48 8b f8	 mov	 rdi, rax
  00639	48 8b 75 30	 mov	 rsi, QWORD PTR camera$[rbp]
  0063d	b9 0c 00 00 00	 mov	 ecx, 12
  00642	f3 a4		 rep movsb

; 274  : 		passConst.AmbientLight = { 0.25f, 0.25f, 0.25f, 1.0f };

  00644	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0064c	f3 0f 11 44 24
	20		 movss	 DWORD PTR [rsp+32], xmm0
  00652	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3e800000
  0065a	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3e800000
  00662	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3e800000
  0066a	48 8d 8d 00 06
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  00671	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QEAA@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
  00676	48 8d 85 50 04
	00 00		 lea	 rax, QWORD PTR passConst$1[rbp+992]
  0067d	48 8d 8d 00 06
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  00684	48 8b f8	 mov	 rdi, rax
  00687	48 8b f1	 mov	 rsi, rcx
  0068a	b9 10 00 00 00	 mov	 ecx, 16
  0068f	f3 a4		 rep movsb

; 275  : 
; 276  : 		passConst.Lights[0].Strenght = { 1.f, 1.f, 1.f };

  00691	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00699	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  006a1	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  006a9	48 8d 8d 10 06
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  006b0	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  006b5	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  006ba	48 6b c0 00	 imul	 rax, rax, 0
  006be	48 8d 8d 10 06
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  006c5	48 8d 7c 05 70	 lea	 rdi, QWORD PTR passConst$1[rbp+rax]
  006ca	48 8b f1	 mov	 rsi, rcx
  006cd	b9 0c 00 00 00	 mov	 ecx, 12
  006d2	f3 a4		 rep movsb

; 277  : 		passConst.Lights[0].Direction = { 1, -1, 0 };

  006d4	0f 57 db	 xorps	 xmm3, xmm3
  006d7	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@bf800000
  006df	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  006e7	48 8d 8d 1c 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  006ee	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  006f3	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  006f8	48 6b c0 00	 imul	 rax, rax, 0
  006fc	48 8d 8d 1c 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  00703	48 8d bc 05 80
	00 00 00	 lea	 rdi, QWORD PTR passConst$1[rbp+rax+16]
  0070b	48 8b f1	 mov	 rsi, rcx
  0070e	b9 0c 00 00 00	 mov	 ecx, 12
  00713	f3 a4		 rep movsb

; 278  : 
; 279  : 		passConst.Lights[1].Strenght = { 1.0f, 1.f, 1.0f };

  00715	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  0071d	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  00725	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0072d	48 8d 8d 28 06
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00734	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00739	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  0073e	48 6b c0 01	 imul	 rax, rax, 1
  00742	48 8d 8d 28 06
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00749	48 8d 7c 05 70	 lea	 rdi, QWORD PTR passConst$1[rbp+rax]
  0074e	48 8b f1	 mov	 rsi, rcx
  00751	b9 0c 00 00 00	 mov	 ecx, 12
  00756	f3 a4		 rep movsb

; 280  : 		passConst.Lights[1].Direction = { 1, -1, 0 };

  00758	0f 57 db	 xorps	 xmm3, xmm3
  0075b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@bf800000
  00763	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0076b	48 8d 8d 34 06
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00772	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00777	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  0077c	48 6b c0 01	 imul	 rax, rax, 1
  00780	48 8d 8d 34 06
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00787	48 8d bc 05 80
	00 00 00	 lea	 rdi, QWORD PTR passConst$1[rbp+rax+16]
  0078f	48 8b f1	 mov	 rsi, rcx
  00792	b9 0c 00 00 00	 mov	 ecx, 12
  00797	f3 a4		 rep movsb

; 281  : 		passConst.Lights[1].Position = { 2, 2, 3 };

  00799	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@40400000
  007a1	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@40000000
  007a9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  007b1	48 8d 8d 40 06
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  007b8	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  007bd	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  007c2	48 6b c0 01	 imul	 rax, rax, 1
  007c6	48 8d 8d 40 06
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  007cd	48 8d bc 05 90
	00 00 00	 lea	 rdi, QWORD PTR passConst$1[rbp+rax+32]
  007d5	48 8b f1	 mov	 rsi, rcx
  007d8	b9 0c 00 00 00	 mov	 ecx, 12
  007dd	f3 a4		 rep movsb

; 282  : 		passConst.Lights[1].FalloffStart = 0;

  007df	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  007e4	48 6b c0 01	 imul	 rax, rax, 1
  007e8	0f 57 c0	 xorps	 xmm0, xmm0
  007eb	f3 0f 11 44 05
	7c		 movss	 DWORD PTR passConst$1[rbp+rax+12], xmm0

; 283  : 		passConst.Lights[1].FalloffEnd = 200.f;

  007f1	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  007f6	48 6b c0 01	 imul	 rax, rax, 1
  007fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43480000
  00802	f3 0f 11 84 05
	8c 00 00 00	 movss	 DWORD PTR passConst$1[rbp+rax+28], xmm0

; 284  : 
; 285  : 		m_passBuffer->CopyData(0, passConst);

  0080b	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00812	48 05 08 01 00
	00		 add	 rax, 264		; 00000108H
  00818	48 8b c8	 mov	 rcx, rax
  0081b	e8 00 00 00 00	 call	 ??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator->
  00820	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv465[rbp], rax
  00827	4c 8d 45 70	 lea	 r8, QWORD PTR passConst$1[rbp]
  0082b	33 d2		 xor	 edx, edx
  0082d	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv465[rbp]
  00834	e8 00 00 00 00	 call	 ?CopyData@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAXIAEBUD3D12PassConstants@@@Z ; D3D12UploadBufferResource<D3D12PassConstants>::CopyData

; 286  : 
; 287  : 
; 288  : 
; 289  : 		m_commandList->SetGraphicsRootConstantBufferView(3, m_passBuffer->GetResource()->GetGPUVirtualAddress());

  00839	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00840	48 83 c0 40	 add	 rax, 64			; 00000040H
  00844	48 8b c8	 mov	 rcx, rax
  00847	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  0084c	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv474[rbp], rax
  00853	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv474[rbp]
  0085a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0085d	48 8b 80 30 01
	00 00		 mov	 rax, QWORD PTR [rax+304]
  00864	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv492[rbp], rax
  0086b	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00872	48 05 08 01 00
	00		 add	 rax, 264		; 00000108H
  00878	48 8b c8	 mov	 rcx, rax
  0087b	e8 00 00 00 00	 call	 ??C?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEBAPEAV?$D3D12UploadBufferResource@UD3D12PassConstants@@@@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator->
  00880	48 8b c8	 mov	 rcx, rax
  00883	e8 00 00 00 00	 call	 ?GetResource@?$D3D12UploadBufferResource@UD3D12PassConstants@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<D3D12PassConstants>::GetResource
  00888	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv483[rbp], rax
  0088f	48 8b 85 90 06
	00 00		 mov	 rax, QWORD PTR tv483[rbp]
  00896	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00899	48 8b 8d 90 06
	00 00		 mov	 rcx, QWORD PTR tv483[rbp]
  008a0	ff 50 58	 call	 QWORD PTR [rax+88]
  008a3	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv490[rbp], rax
  008aa	4c 8b 85 98 06
	00 00		 mov	 r8, QWORD PTR tv490[rbp]
  008b1	ba 03 00 00 00	 mov	 edx, 3
  008b6	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv474[rbp]
  008bd	ff 95 88 06 00
	00		 call	 QWORD PTR tv492[rbp]

; 290  : 
; 291  : 
; 292  : 	}
; 293  : 	
; 294  : 	for (auto& model : models)

  008c3	48 8d 45 10	 lea	 rax, QWORD PTR models$[rbp]
  008c7	48 89 85 70 04
	00 00		 mov	 QWORD PTR <range>$L0$2[rbp], rax
  008ce	48 8b 8d 70 04
	00 00		 mov	 rcx, QWORD PTR <range>$L0$2[rbp]
  008d5	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_begin
  008da	48 89 85 78 04
	00 00		 mov	 QWORD PTR <begin>$L0$3[rbp], rax
  008e1	48 8b 8d 70 04
	00 00		 mov	 rcx, QWORD PTR <range>$L0$2[rbp]
  008e8	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_end
  008ed	48 89 85 80 04
	00 00		 mov	 QWORD PTR <end>$L0$4[rbp], rax
  008f4	eb 12		 jmp	 SHORT $LN4@Render
$LN2@Render:
  008f6	48 8b 85 78 04
	00 00		 mov	 rax, QWORD PTR <begin>$L0$3[rbp]
  008fd	48 83 c0 08	 add	 rax, 8
  00901	48 89 85 78 04
	00 00		 mov	 QWORD PTR <begin>$L0$3[rbp], rax
$LN4@Render:
  00908	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR <end>$L0$4[rbp]
  0090f	48 39 85 78 04
	00 00		 cmp	 QWORD PTR <begin>$L0$3[rbp], rax
  00916	0f 84 0c 03 00
	00		 je	 $LN3@Render
  0091c	48 8b 85 78 04
	00 00		 mov	 rax, QWORD PTR <begin>$L0$3[rbp]
  00923	48 89 85 88 04
	00 00		 mov	 QWORD PTR model$5[rbp], rax

; 295  : 	{	
; 296  : 		auto mesh = model->m_mesh;

  0092a	48 8b 85 88 04
	00 00		 mov	 rax, QWORD PTR model$5[rbp]
  00931	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00934	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00937	48 89 85 90 04
	00 00		 mov	 QWORD PTR mesh$6[rbp], rax

; 297  : 		auto material = model->m_material;

  0093e	48 8b 85 88 04
	00 00		 mov	 rax, QWORD PTR model$5[rbp]
  00945	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00948	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0094c	48 89 85 98 04
	00 00		 mov	 QWORD PTR material$7[rbp], rax

; 298  : 		if (!mesh) continue;

  00953	48 83 bd 90 04
	00 00 00	 cmp	 QWORD PTR mesh$6[rbp], 0
  0095b	75 02		 jne	 SHORT $LN6@Render
  0095d	eb 97		 jmp	 SHORT $LN2@Render
$LN6@Render:

; 299  : 		model->FillConstantBuffer();

  0095f	48 8b 85 88 04
	00 00		 mov	 rax, QWORD PTR model$5[rbp]
  00966	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00969	e8 00 00 00 00	 call	 ?FillConstantBuffer@D3D12Model@@QEAAXXZ ; D3D12Model::FillConstantBuffer

; 300  : 		m_commandList->SetGraphicsRootDescriptorTable(1,

  0096e	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00975	48 83 c0 40	 add	 rax, 64			; 00000040H
  00979	48 8b c8	 mov	 rcx, rax
  0097c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00981	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv511[rbp], rax
  00988	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv511[rbp]
  0098f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00992	48 8b 80 00 01
	00 00		 mov	 rax, QWORD PTR [rax+256]
  00999	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv530[rbp], rax
  009a0	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  009a7	48 83 c0 60	 add	 rax, 96			; 00000060H
  009ab	48 8b c8	 mov	 rcx, rax
  009ae	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  009b3	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv525[rbp], rax
  009ba	48 8b 85 98 04
	00 00		 mov	 rax, QWORD PTR material$7[rbp]
  009c1	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  009c5	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv523[rbp], rax
  009cc	4c 8b 85 98 06
	00 00		 mov	 r8, QWORD PTR tv523[rbp]
  009d3	48 8d 95 50 06
	00 00		 lea	 rdx, QWORD PTR $T26[rbp]
  009da	48 8b 8d 90 06
	00 00		 mov	 rcx, QWORD PTR tv525[rbp]
  009e1	e8 00 00 00 00	 call	 ?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetGpuHandle
  009e6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  009e9	48 89 85 58 06
	00 00		 mov	 QWORD PTR $T27[rbp], rax
  009f0	4c 8b 85 58 06
	00 00		 mov	 r8, QWORD PTR $T27[rbp]
  009f7	ba 01 00 00 00	 mov	 edx, 1
  009fc	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv511[rbp]
  00a03	ff 95 88 06 00
	00		 call	 QWORD PTR tv530[rbp]

; 301  : 		SRDescriptorHeap->GetGpuHandle(material->m_BaseDescriptorIndex));
; 302  : 
; 303  : 
; 304  : 		m_commandList->IASetVertexBuffers(0, 1, &mesh->m_vertexBufferView);

  00a09	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00a10	48 83 c0 40	 add	 rax, 64			; 00000040H
  00a14	48 8b c8	 mov	 rcx, rax
  00a17	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00a1c	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv539[rbp], rax
  00a23	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv539[rbp]
  00a2a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a2d	48 8b 80 60 01
	00 00		 mov	 rax, QWORD PTR [rax+352]
  00a34	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv547[rbp], rax
  00a3b	48 8b 85 90 04
	00 00		 mov	 rax, QWORD PTR mesh$6[rbp]
  00a42	48 83 c0 18	 add	 rax, 24
  00a46	4c 8b c8	 mov	 r9, rax
  00a49	41 b8 01 00 00
	00		 mov	 r8d, 1
  00a4f	33 d2		 xor	 edx, edx
  00a51	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv539[rbp]
  00a58	ff 95 88 06 00
	00		 call	 QWORD PTR tv547[rbp]

; 305  : 		m_commandList->IASetIndexBuffer(&mesh->m_indexBufferView);

  00a5e	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00a65	48 83 c0 40	 add	 rax, 64			; 00000040H
  00a69	48 8b c8	 mov	 rcx, rax
  00a6c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00a71	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv556[rbp], rax
  00a78	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv556[rbp]
  00a7f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a82	48 8b 80 58 01
	00 00		 mov	 rax, QWORD PTR [rax+344]
  00a89	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv562[rbp], rax
  00a90	48 8b 85 90 04
	00 00		 mov	 rax, QWORD PTR mesh$6[rbp]
  00a97	48 83 c0 28	 add	 rax, 40			; 00000028H
  00a9b	48 8b d0	 mov	 rdx, rax
  00a9e	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv556[rbp]
  00aa5	ff 95 88 06 00
	00		 call	 QWORD PTR tv562[rbp]

; 306  : 		m_commandList->SetGraphicsRootConstantBufferView(0, model->m_cbvObject.GetResource()->GetGPUVirtualAddress());

  00aab	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00ab2	48 83 c0 40	 add	 rax, 64			; 00000040H
  00ab6	48 8b c8	 mov	 rcx, rax
  00ab9	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00abe	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv571[rbp], rax
  00ac5	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv571[rbp]
  00acc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00acf	48 8b 80 30 01
	00 00		 mov	 rax, QWORD PTR [rax+304]
  00ad6	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv587[rbp], rax
  00add	48 8b 85 88 04
	00 00		 mov	 rax, QWORD PTR model$5[rbp]
  00ae4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00ae7	48 83 c0 10	 add	 rax, 16
  00aeb	48 8b c8	 mov	 rcx, rax
  00aee	e8 00 00 00 00	 call	 ?GetResource@?$D3D12UploadBufferResource@UXMMATRIX@DirectX@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<DirectX::XMMATRIX>::GetResource
  00af3	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv578[rbp], rax
  00afa	48 8b 85 90 06
	00 00		 mov	 rax, QWORD PTR tv578[rbp]
  00b01	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00b04	48 8b 8d 90 06
	00 00		 mov	 rcx, QWORD PTR tv578[rbp]
  00b0b	ff 50 58	 call	 QWORD PTR [rax+88]
  00b0e	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv585[rbp], rax
  00b15	4c 8b 85 98 06
	00 00		 mov	 r8, QWORD PTR tv585[rbp]
  00b1c	33 d2		 xor	 edx, edx
  00b1e	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv571[rbp]
  00b25	ff 95 88 06 00
	00		 call	 QWORD PTR tv587[rbp]

; 307  : 		m_commandList->SetGraphicsRootConstantBufferView(2, model->m_cbvMaterial.GetResource()->GetGPUVirtualAddress());

  00b2b	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00b32	48 83 c0 40	 add	 rax, 64			; 00000040H
  00b36	48 8b c8	 mov	 rcx, rax
  00b39	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00b3e	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv596[rbp], rax
  00b45	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv596[rbp]
  00b4c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00b4f	48 8b 80 30 01
	00 00		 mov	 rax, QWORD PTR [rax+304]
  00b56	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv612[rbp], rax
  00b5d	48 8b 85 88 04
	00 00		 mov	 rax, QWORD PTR model$5[rbp]
  00b64	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00b67	48 83 c0 50	 add	 rax, 80			; 00000050H
  00b6b	48 8b c8	 mov	 rcx, rax
  00b6e	e8 00 00 00 00	 call	 ?GetResource@?$D3D12UploadBufferResource@UD3D12MaterialConstants@@@@QEAAPEAUID3D12Resource@@XZ ; D3D12UploadBufferResource<D3D12MaterialConstants>::GetResource
  00b73	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv603[rbp], rax
  00b7a	48 8b 85 90 06
	00 00		 mov	 rax, QWORD PTR tv603[rbp]
  00b81	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00b84	48 8b 8d 90 06
	00 00		 mov	 rcx, QWORD PTR tv603[rbp]
  00b8b	ff 50 58	 call	 QWORD PTR [rax+88]
  00b8e	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv610[rbp], rax
  00b95	4c 8b 85 98 06
	00 00		 mov	 r8, QWORD PTR tv610[rbp]
  00b9c	ba 02 00 00 00	 mov	 edx, 2
  00ba1	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv596[rbp]
  00ba8	ff 95 88 06 00
	00		 call	 QWORD PTR tv612[rbp]

; 308  : 		m_commandList->DrawIndexedInstanced(mesh->m_indexBufferView.SizeInBytes / sizeof(WORD), 1, 0, 0, 0);

  00bae	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00bb5	48 83 c0 40	 add	 rax, 64			; 00000040H
  00bb9	48 8b c8	 mov	 rcx, rax
  00bbc	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00bc1	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv621[rbp], rax
  00bc8	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv621[rbp]
  00bcf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00bd2	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00bd6	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv637[rbp], rax
  00bdd	48 8b 85 90 04
	00 00		 mov	 rax, QWORD PTR mesh$6[rbp]
  00be4	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00be7	33 d2		 xor	 edx, edx
  00be9	b9 02 00 00 00	 mov	 ecx, 2
  00bee	48 f7 f1	 div	 rcx
  00bf1	89 85 90 06 00
	00		 mov	 DWORD PTR tv635[rbp], eax
  00bf7	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00bff	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00c07	45 33 c9	 xor	 r9d, r9d
  00c0a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00c10	8b 95 90 06 00
	00		 mov	 edx, DWORD PTR tv635[rbp]
  00c16	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv621[rbp]
  00c1d	ff 95 88 06 00
	00		 call	 QWORD PTR tv637[rbp]

; 309  : 	}

  00c23	e9 ce fc ff ff	 jmp	 $LN2@Render
$LN3@Render:

; 310  : 
; 311  : 	TransitionResource(m_commandList, backBuffer, D3D12_RESOURCE_STATE_RENDER_TARGET, D3D12_RESOURCE_STATE_PRESENT);

  00c28	48 8d 85 60 06
	00 00		 lea	 rax, QWORD PTR $T28[rbp]
  00c2f	48 89 85 68 06
	00 00		 mov	 QWORD PTR $T29[rbp], rax
  00c36	48 8b 55 00	 mov	 rdx, QWORD PTR backBuffer$[rbp]
  00c3a	48 8b 8d 68 06
	00 00		 mov	 rcx, QWORD PTR $T29[rbp]
  00c41	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00c46	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv737[rbp], rax
  00c4d	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv737[rbp]
  00c54	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv645[rbp], rax
  00c5b	48 8d 85 70 06
	00 00		 lea	 rax, QWORD PTR $T30[rbp]
  00c62	48 89 85 78 06
	00 00		 mov	 QWORD PTR $T31[rbp], rax
  00c69	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00c70	48 83 c0 40	 add	 rax, 64			; 00000040H
  00c74	48 8b d0	 mov	 rdx, rax
  00c77	48 8b 8d 78 06
	00 00		 mov	 rcx, QWORD PTR $T31[rbp]
  00c7e	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@AEBV012@@Z ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
  00c83	48 89 85 90 06
	00 00		 mov	 QWORD PTR tv739[rbp], rax
  00c8a	48 8b 85 90 06
	00 00		 mov	 rax, QWORD PTR tv739[rbp]
  00c91	48 89 85 98 06
	00 00		 mov	 QWORD PTR tv660[rbp], rax
  00c98	45 33 c9	 xor	 r9d, r9d
  00c9b	41 b8 04 00 00
	00		 mov	 r8d, 4
  00ca1	48 8b 95 88 06
	00 00		 mov	 rdx, QWORD PTR tv645[rbp]
  00ca8	48 8b 8d 98 06
	00 00		 mov	 rcx, QWORD PTR tv660[rbp]
  00caf	e8 00 00 00 00	 call	 ?TransitionResource@@YAXV?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@V?$ComPtr@UID3D12Resource@@@23@W4D3D12_RESOURCE_STATES@@2@Z ; TransitionResource

; 312  : 
; 313  : 	m_commandList->Close();

  00cb4	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00cbb	48 83 c0 40	 add	 rax, 64			; 00000040H
  00cbf	48 8b c8	 mov	 rcx, rax
  00cc2	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator->
  00cc7	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv670[rbp], rax
  00cce	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv670[rbp]
  00cd5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00cd8	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv670[rbp]
  00cdf	ff 50 48	 call	 QWORD PTR [rax+72]

; 314  : 	ID3D12CommandList* lists[] = { m_commandList.Get() };

  00ce2	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00ce9	48 83 c0 40	 add	 rax, 64			; 00000040H
  00ced	48 8b c8	 mov	 rcx, rax
  00cf0	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEBAPEAUID3D12GraphicsCommandList6@@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::Get
  00cf5	48 89 85 a0 04
	00 00		 mov	 QWORD PTR lists$[rbp], rax

; 315  : 	m_commandQueue->ExecuteCommandLists(1, lists);

  00cfc	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d03	48 83 c0 48	 add	 rax, 72			; 00000048H
  00d07	48 8b c8	 mov	 rcx, rax
  00d0a	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator->
  00d0f	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv684[rbp], rax
  00d16	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv684[rbp]
  00d1d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00d20	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00d24	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv690[rbp], rax
  00d2b	4c 8d 85 a0 04
	00 00		 lea	 r8, QWORD PTR lists$[rbp]
  00d32	ba 01 00 00 00	 mov	 edx, 1
  00d37	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv684[rbp]
  00d3e	ff 95 88 06 00
	00		 call	 QWORD PTR tv690[rbp]

; 316  : 	WaitFrame();

  00d44	48 8b 8d c0 06
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00d4b	e8 00 00 00 00	 call	 ?WaitFrame@D3D12Renderer@@AEAAXXZ ; D3D12Renderer::WaitFrame

; 317  : 
; 318  : 	m_swapchain->Present(bVsync, 0);

  00d50	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d57	48 83 c0 68	 add	 rax, 104		; 00000068H
  00d5b	48 8b c8	 mov	 rcx, rax
  00d5e	e8 00 00 00 00	 call	 ??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->
  00d63	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv700[rbp], rax
  00d6a	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv700[rbp]
  00d71	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00d74	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00d78	48 89 85 88 06
	00 00		 mov	 QWORD PTR tv715[rbp], rax
  00d7f	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d86	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00d8a	89 85 90 06 00
	00		 mov	 DWORD PTR tv713[rbp], eax
  00d90	45 33 c0	 xor	 r8d, r8d
  00d93	8b 95 90 06 00
	00		 mov	 edx, DWORD PTR tv713[rbp]
  00d99	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv700[rbp]
  00da0	ff 95 88 06 00
	00		 call	 QWORD PTR tv715[rbp]

; 319  : 
; 320  : 
; 321  : 	CurrentBackBufferIndex = m_swapchain->GetCurrentBackBufferIndex();

  00da6	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00dad	48 83 c0 68	 add	 rax, 104		; 00000068H
  00db1	48 8b c8	 mov	 rcx, rax
  00db4	e8 00 00 00 00	 call	 ??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->
  00db9	48 89 85 80 06
	00 00		 mov	 QWORD PTR tv724[rbp], rax
  00dc0	48 8b 85 80 06
	00 00		 mov	 rax, QWORD PTR tv724[rbp]
  00dc7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00dca	48 8b 8d 80 06
	00 00		 mov	 rcx, QWORD PTR tv724[rbp]
  00dd1	ff 90 20 01 00
	00		 call	 QWORD PTR [rax+288]
  00dd7	8b c0		 mov	 eax, eax
  00dd9	48 8b 8d c0 06
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00de0	48 89 81 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rax

; 322  : 
; 323  : 	m_freeSRVDescriptor = 0;

  00de7	48 8b 85 c0 06
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00dee	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 324  : 	return;

  00df6	48 8d 4d 10	 lea	 rcx, QWORD PTR models$[rbp]
  00dfa	e8 00 00 00 00	 call	 ??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
$LN1@Render:

; 325  : }

  00dff	48 8d a5 a0 06
	00 00		 lea	 rsp, QWORD PTR [rbp+1696]
  00e06	5f		 pop	 rdi
  00e07	5e		 pop	 rsi
  00e08	5d		 pop	 rbp
  00e09	c3		 ret	 0
?Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z ENDP	; D3D12Renderer::Render
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
backBuffer$ = 0
PSO$ = 8
models$ = 16
camera$ = 48
window$ = 56
backBufferHandle$ = 64
depthBufferHandle$ = 72
clearColor$ = 80
ppHeaps$ = 96
passConst$1 = 112
<range>$L0$2 = 1136
<begin>$L0$3 = 1144
<end>$L0$4 = 1152
model$5 = 1160
mesh$6 = 1168
material$7 = 1176
lists$ = 1184
$T8 = 1384
$T9 = 1392
$T10 = 1400
$T11 = 1408
$T12 = 1416
$T13 = 1424
$T14 = 1432
$T15 = 1440
$T16 = 1448
$T17 = 1456
$T18 = 1464
$T19 = 1528
$T20 = 1536
$T21 = 1552
$T22 = 1564
$T23 = 1576
$T24 = 1588
$T25 = 1600
$T26 = 1616
$T27 = 1624
$T28 = 1632
$T29 = 1640
$T30 = 1648
$T31 = 1656
tv737 = 1664
tv733 = 1664
tv724 = 1664
tv700 = 1664
tv684 = 1664
tv670 = 1664
tv621 = 1664
tv596 = 1664
tv571 = 1664
tv556 = 1664
tv539 = 1664
tv511 = 1664
tv474 = 1664
tv465 = 1664
tv374 = 1664
tv351 = 1664
tv336 = 1664
tv317 = 1664
tv301 = 1664
tv285 = 1664
tv261 = 1664
tv239 = 1664
tv214 = 1664
tv163 = 1664
tv152 = 1664
tv142 = 1664
tv132 = 1664
tv86 = 1664
tv372 = 1668
tv715 = 1672
tv690 = 1672
tv645 = 1672
tv637 = 1672
tv612 = 1672
tv587 = 1672
tv562 = 1672
tv547 = 1672
tv530 = 1672
tv492 = 1672
tv356 = 1672
tv342 = 1672
tv327 = 1672
tv308 = 1672
tv292 = 1672
tv276 = 1672
tv252 = 1672
tv230 = 1672
tv187 = 1672
tv180 = 1672
tv130 = 1672
tv739 = 1680
tv735 = 1680
tv713 = 1680
tv635 = 1680
tv603 = 1680
tv578 = 1680
tv525 = 1680
tv483 = 1680
tv325 = 1680
tv178 = 1680
tv660 = 1688
tv610 = 1688
tv585 = 1688
tv523 = 1688
tv490 = 1688
tv204 = 1688
tv176 = 1688
this$ = 1728
scene$ = 1736
?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA PROC ; `D3D12Renderer::Render'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	48 8d 4d 10	 lea	 rcx, QWORD PTR models$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0??Render@D3D12Renderer@@UEAAXPEAVD3D12Scene@@@Z@4HA ENDP ; `D3D12Renderer::Render'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z
_TEXT	SEGMENT
models$ = 0
DefaultTex$ = 32
<range>$L0$1 = 40
<begin>$L0$2 = 48
<end>$L0$3 = 56
model$4 = 64
material$5 = 72
$T6 = 144
$T7 = 184
$T8 = 192
$T9 = 200
$T10 = 208
$T11 = 216
$T12 = 224
$T13 = 232
$T14 = 240
$T15 = 248
$T16 = 256
$T17 = 264
$T18 = 272
$T19 = 280
$T20 = 288
$T21 = 296
$T22 = 304
$T23 = 312
$T24 = 320
tv316 = 328
tv286 = 328
tv246 = 328
tv210 = 328
tv171 = 328
tv87 = 328
tv312 = 336
tv277 = 336
tv235 = 336
tv201 = 336
tv146 = 336
tv301 = 344
tv261 = 344
tv224 = 344
tv185 = 344
tv135 = 344
tv299 = 352
tv259 = 352
tv222 = 352
tv183 = 352
tv131 = 352
tv308 = 360
tv273 = 360
tv231 = 360
tv197 = 360
tv142 = 360
tv270 = 368
tv194 = 368
this$ = 400
scene$ = 408
?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z PROC	; D3D12Renderer::BeginFrame, COMDAT

; 173  : {

$LN14:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec a0 01
	00 00		 sub	 rsp, 416		; 000001a0H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 174  : 	auto models = scene->GetModels();

  00023	48 8d 55 00	 lea	 rdx, QWORD PTR models$[rbp]
  00027	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR scene$[rbp]
  0002e	e8 00 00 00 00	 call	 ?GetModels@D3D12Scene@@QEBA?AV?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@XZ ; D3D12Scene::GetModels
  00033	90		 npad	 1

; 175  : 	auto DefaultTex = D3DUtil::LoadTexture(D3D_DEFAULT_TEXTURE);

  00034	48 8d 85 90 00
	00 00		 lea	 rax, QWORD PTR $T6[rbp]
  0003b	48 89 85 b8 00
	00 00		 mov	 QWORD PTR $T7[rbp], rax
  00042	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@LMDDHACE@Resources?1uv?4dds@
  00049	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR $T7[rbp]
  00050	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00055	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv316[rbp], rax
  0005c	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv316[rbp]
  00063	e8 00 00 00 00	 call	 ?LoadTexture@D3DUtil@@SAPEAVD3D12Texture@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; D3DUtil::LoadTexture
  00068	48 89 45 20	 mov	 QWORD PTR DefaultTex$[rbp], rax

; 176  : 		m_device->CreateShaderResourceView(

  0006c	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 83 c0 28	 add	 rax, 40			; 00000028H
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  0007f	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00086	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR tv87[rbp]
  0008d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00090	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00097	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv146[rbp], rax
  0009e	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a5	48 83 c0 60	 add	 rax, 96			; 00000060H
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  000b1	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  000b8	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000c3	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  000ca	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d1	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000d5	48 ff c0	 inc	 rax
  000d8	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000df	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
  000e3	4c 8b 85 60 01
	00 00		 mov	 r8, QWORD PTR tv131[rbp]
  000ea	48 8d 95 c0 00
	00 00		 lea	 rdx, QWORD PTR $T8[rbp]
  000f1	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv135[rbp]
  000f8	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  000fd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00100	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T9[rbp], rax
  00107	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T9[rbp]
  0010e	48 89 85 d0 00
	00 00		 mov	 QWORD PTR $T10[rbp], rax
  00115	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  00119	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0011d	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv142[rbp], rax
  00124	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  00128	48 83 c0 30	 add	 rax, 48			; 00000030H
  0012c	4c 8b 8d d0 00
	00 00		 mov	 r9, QWORD PTR $T10[rbp]
  00133	4c 8b c0	 mov	 r8, rax
  00136	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR tv142[rbp]
  0013d	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  00144	ff 95 50 01 00
	00		 call	 QWORD PTR tv146[rbp]

; 177  : 			DefaultTex->m_textureBuffer,
; 178  : 			&DefaultTex->m_srvDesc,
; 179  : 			SRDescriptorHeap->GetCpuHandle(m_freeSRVDescriptor++));
; 180  : 
; 181  : 	for (auto& model : models)

  0014a	48 8d 45 00	 lea	 rax, QWORD PTR models$[rbp]
  0014e	48 89 45 28	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00152	48 8b 4d 28	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00156	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_begin
  0015b	48 89 45 30	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  0015f	48 8b 4d 28	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00163	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAAPEAPEAVD3D12Model@@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::_Unchecked_end
  00168	48 89 45 38	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  0016c	eb 0c		 jmp	 SHORT $LN4@BeginFrame
$LN2@BeginFrame:
  0016e	48 8b 45 30	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00172	48 83 c0 08	 add	 rax, 8
  00176	48 89 45 30	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BeginFrame:
  0017a	48 8b 45 38	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  0017e	48 39 45 30	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00182	0f 84 d9 03 00
	00		 je	 $LN3@BeginFrame
  00188	48 8b 45 30	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0018c	48 89 45 40	 mov	 QWORD PTR model$4[rbp], rax

; 182  : 	{
; 183  : 		auto material = model->m_material;

  00190	48 8b 45 40	 mov	 rax, QWORD PTR model$4[rbp]
  00194	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00197	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0019b	48 89 45 48	 mov	 QWORD PTR material$5[rbp], rax

; 184  : 
; 185  : 		if (material->m_BaseDescriptorIndex == -1)

  0019f	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  001a3	48 83 78 60 ff	 cmp	 QWORD PTR [rax+96], -1
  001a8	75 2f		 jne	 SHORT $LN5@BeginFrame

; 186  : 		{
; 187  : 			material->m_BaseDescriptorIndex = m_freeSRVDescriptor;

  001aa	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  001ae	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001b5	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  001b9	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 188  : 			m_freeSRVDescriptor += 2;

  001bd	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001c4	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001c8	48 83 c0 02	 add	 rax, 2
  001cc	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001d3	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 189  : 		}

  001d7	eb 02		 jmp	 SHORT $LN6@BeginFrame
$LN5@BeginFrame:

; 190  : 		else
; 191  : 		{
; 192  : 			continue;

  001d9	eb 93		 jmp	 SHORT $LN2@BeginFrame
$LN6@BeginFrame:

; 193  : 		}
; 194  : 
; 195  : 		{
; 196  : 			if (material->t_Albedo)

  001db	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  001df	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  001e4	0f 84 e8 00 00
	00		 je	 $LN7@BeginFrame

; 197  : 			{
; 198  : 				m_device->CreateShaderResourceView(

  001ea	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001f1	48 83 c0 28	 add	 rax, 40			; 00000028H
  001f5	48 8b c8	 mov	 rcx, rax
  001f8	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  001fd	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv171[rbp], rax
  00204	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR tv171[rbp]
  0020b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0020e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00215	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv201[rbp], rax
  0021c	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00223	48 83 c0 60	 add	 rax, 96			; 00000060H
  00227	48 8b c8	 mov	 rcx, rax
  0022a	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  0022f	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv185[rbp], rax
  00236	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  0023a	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0023e	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv183[rbp], rax
  00245	4c 8b 85 60 01
	00 00		 mov	 r8, QWORD PTR tv183[rbp]
  0024c	48 8d 95 d8 00
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  00253	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv185[rbp]
  0025a	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  0025f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00262	48 89 85 e0 00
	00 00		 mov	 QWORD PTR $T12[rbp], rax
  00269	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR $T12[rbp]
  00270	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T13[rbp], rax
  00277	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T13[rbp]
  0027e	48 89 85 f0 00
	00 00		 mov	 QWORD PTR $T14[rbp], rax
  00285	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  00289	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0028d	48 83 c0 30	 add	 rax, 48			; 00000030H
  00291	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv197[rbp], rax
  00298	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  0029c	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  002a0	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  002a4	48 89 85 70 01
	00 00		 mov	 QWORD PTR tv194[rbp], rax
  002ab	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR $T14[rbp]
  002b2	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR tv197[rbp]
  002b9	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR tv194[rbp]
  002c0	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv171[rbp]
  002c7	ff 95 50 01 00
	00		 call	 QWORD PTR tv201[rbp]

; 199  : 					material->t_Albedo->m_textureBuffer,
; 200  : 					&material->t_Albedo->m_srvDesc,
; 201  : 					SRDescriptorHeap->GetCpuHandle(material->m_BaseDescriptorIndex + 0)
; 202  : 				);
; 203  : 			}

  002cd	e9 c2 00 00 00	 jmp	 $LN8@BeginFrame
$LN7@BeginFrame:

; 204  : 			else
; 205  : 			{
; 206  : 				m_device->CreateShaderResourceView(

  002d2	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002d9	48 83 c0 28	 add	 rax, 40			; 00000028H
  002dd	48 8b c8	 mov	 rcx, rax
  002e0	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  002e5	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv210[rbp], rax
  002ec	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR tv210[rbp]
  002f3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002f6	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  002fd	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv235[rbp], rax
  00304	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0030b	48 83 c0 60	 add	 rax, 96			; 00000060H
  0030f	48 8b c8	 mov	 rcx, rax
  00312	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  00317	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv224[rbp], rax
  0031e	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  00322	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00326	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv222[rbp], rax
  0032d	4c 8b 85 60 01
	00 00		 mov	 r8, QWORD PTR tv222[rbp]
  00334	48 8d 95 f8 00
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  0033b	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv224[rbp]
  00342	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  00347	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0034a	48 89 85 00 01
	00 00		 mov	 QWORD PTR $T16[rbp], rax
  00351	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR $T16[rbp]
  00358	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T17[rbp], rax
  0035f	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  00363	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00367	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv231[rbp], rax
  0036e	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  00372	48 83 c0 30	 add	 rax, 48			; 00000030H
  00376	4c 8b 8d 08 01
	00 00		 mov	 r9, QWORD PTR $T17[rbp]
  0037d	4c 8b c0	 mov	 r8, rax
  00380	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR tv231[rbp]
  00387	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv210[rbp]
  0038e	ff 95 50 01 00
	00		 call	 QWORD PTR tv235[rbp]
$LN8@BeginFrame:

; 207  : 					DefaultTex->m_textureBuffer,
; 208  : 					&DefaultTex->m_srvDesc,
; 209  : 					SRDescriptorHeap->GetCpuHandle(material->m_BaseDescriptorIndex + 0)
; 210  : 				);
; 211  : 			}
; 212  : 		}
; 213  : 
; 214  : 		{
; 215  : 			if (material->t_Normal)

  00394	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  00398	48 83 b8 88 00
	00 00 00	 cmp	 QWORD PTR [rax+136], 0
  003a0	0f 84 f1 00 00
	00		 je	 $LN9@BeginFrame

; 216  : 			{
; 217  : 				m_device->CreateShaderResourceView(

  003a6	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  003b1	48 8b c8	 mov	 rcx, rax
  003b4	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  003b9	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv246[rbp], rax
  003c0	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR tv246[rbp]
  003c7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ca	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  003d1	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003d8	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003df	48 83 c0 60	 add	 rax, 96			; 00000060H
  003e3	48 8b c8	 mov	 rcx, rax
  003e6	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  003eb	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv261[rbp], rax
  003f2	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  003f6	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  003fa	48 ff c0	 inc	 rax
  003fd	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv259[rbp], rax
  00404	4c 8b 85 60 01
	00 00		 mov	 r8, QWORD PTR tv259[rbp]
  0040b	48 8d 95 10 01
	00 00		 lea	 rdx, QWORD PTR $T18[rbp]
  00412	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv261[rbp]
  00419	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  0041e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00421	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T19[rbp], rax
  00428	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T19[rbp]
  0042f	48 89 85 20 01
	00 00		 mov	 QWORD PTR $T20[rbp], rax
  00436	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR $T20[rbp]
  0043d	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T21[rbp], rax
  00444	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  00448	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  0044f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00453	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv273[rbp], rax
  0045a	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  0045e	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00465	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00469	48 89 85 70 01
	00 00		 mov	 QWORD PTR tv270[rbp], rax
  00470	4c 8b 8d 28 01
	00 00		 mov	 r9, QWORD PTR $T21[rbp]
  00477	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR tv273[rbp]
  0047e	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR tv270[rbp]
  00485	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv246[rbp]
  0048c	ff 95 50 01 00
	00		 call	 QWORD PTR tv277[rbp]

; 218  : 					material->t_Normal->m_textureBuffer,
; 219  : 					&material->t_Normal->m_srvDesc,
; 220  : 					SRDescriptorHeap->GetCpuHandle(material->m_BaseDescriptorIndex + 1)
; 221  : 				);
; 222  : 			}

  00492	e9 c5 00 00 00	 jmp	 $LN10@BeginFrame
$LN9@BeginFrame:

; 223  : 			else
; 224  : 			{
; 225  : 				m_device->CreateShaderResourceView(

  00497	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0049e	48 83 c0 28	 add	 rax, 40			; 00000028H
  004a2	48 8b c8	 mov	 rcx, rax
  004a5	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  004aa	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv286[rbp], rax
  004b1	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR tv286[rbp]
  004b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004bb	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  004c2	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv312[rbp], rax
  004c9	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004d0	48 83 c0 60	 add	 rax, 96			; 00000060H
  004d4	48 8b c8	 mov	 rcx, rax
  004d7	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  004dc	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv301[rbp], rax
  004e3	48 8b 45 48	 mov	 rax, QWORD PTR material$5[rbp]
  004e7	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  004eb	48 ff c0	 inc	 rax
  004ee	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv299[rbp], rax
  004f5	4c 8b 85 60 01
	00 00		 mov	 r8, QWORD PTR tv299[rbp]
  004fc	48 8d 95 30 01
	00 00		 lea	 rdx, QWORD PTR $T22[rbp]
  00503	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv301[rbp]
  0050a	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle
  0050f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00512	48 89 85 38 01
	00 00		 mov	 QWORD PTR $T23[rbp], rax
  00519	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR $T23[rbp]
  00520	48 89 85 40 01
	00 00		 mov	 QWORD PTR $T24[rbp], rax
  00527	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  0052b	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0052f	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv308[rbp], rax
  00536	48 8b 45 20	 mov	 rax, QWORD PTR DefaultTex$[rbp]
  0053a	48 83 c0 30	 add	 rax, 48			; 00000030H
  0053e	4c 8b 8d 40 01
	00 00		 mov	 r9, QWORD PTR $T24[rbp]
  00545	4c 8b c0	 mov	 r8, rax
  00548	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR tv308[rbp]
  0054f	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv286[rbp]
  00556	ff 95 50 01 00
	00		 call	 QWORD PTR tv312[rbp]
$LN10@BeginFrame:

; 226  : 					DefaultTex->m_textureBuffer,
; 227  : 					&DefaultTex->m_srvDesc,
; 228  : 					SRDescriptorHeap->GetCpuHandle(material->m_BaseDescriptorIndex + 1)
; 229  : 				);
; 230  : 			}
; 231  : 		}
; 232  : 
; 233  : 
; 234  : 	}

  0055c	e9 0d fc ff ff	 jmp	 $LN2@BeginFrame
$LN3@BeginFrame:

; 235  : }

  00561	48 8d 4d 00	 lea	 rcx, QWORD PTR models$[rbp]
  00565	e8 00 00 00 00	 call	 ??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
  0056a	48 8d a5 80 01
	00 00		 lea	 rsp, QWORD PTR [rbp+384]
  00571	5d		 pop	 rbp
  00572	c3		 ret	 0
?BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z ENDP	; D3D12Renderer::BeginFrame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
models$ = 0
DefaultTex$ = 32
<range>$L0$1 = 40
<begin>$L0$2 = 48
<end>$L0$3 = 56
model$4 = 64
material$5 = 72
$T6 = 144
$T7 = 184
$T8 = 192
$T9 = 200
$T10 = 208
$T11 = 216
$T12 = 224
$T13 = 232
$T14 = 240
$T15 = 248
$T16 = 256
$T17 = 264
$T18 = 272
$T19 = 280
$T20 = 288
$T21 = 296
$T22 = 304
$T23 = 312
$T24 = 320
tv316 = 328
tv286 = 328
tv246 = 328
tv210 = 328
tv171 = 328
tv87 = 328
tv312 = 336
tv277 = 336
tv235 = 336
tv201 = 336
tv146 = 336
tv301 = 344
tv261 = 344
tv224 = 344
tv185 = 344
tv135 = 344
tv299 = 352
tv259 = 352
tv222 = 352
tv183 = 352
tv131 = 352
tv308 = 360
tv273 = 360
tv231 = 360
tv197 = 360
tv142 = 360
tv270 = 368
tv194 = 368
this$ = 400
scene$ = 408
?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA PROC ; `D3D12Renderer::BeginFrame'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR models$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$vector@PEAVD3D12Model@@V?$allocator@PEAVD3D12Model@@@std@@@std@@QEAA@XZ ; std::vector<D3D12Model *,std::allocator<D3D12Model *> >::~vector<D3D12Model *,std::allocator<D3D12Model *> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0??BeginFrame@D3D12Renderer@@QEAAXPEAVD3D12Scene@@@Z@4HA ENDP ; `D3D12Renderer::BeginFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?Shutdown@D3D12Renderer@@UEAAXXZ
_TEXT	SEGMENT
this$ = 80
?Shutdown@D3D12Renderer@@UEAAXXZ PROC			; D3D12Renderer::Shutdown, COMDAT

; 156  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 157  : 	D3DUtil::Shutdown();

  0001b	e8 00 00 00 00	 call	 ?Shutdown@D3DUtil@@SAXXZ ; D3DUtil::Shutdown

; 158  : }

  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?Shutdown@D3D12Renderer@@UEAAXXZ ENDP			; D3D12Renderer::Shutdown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?Init@D3D12Renderer@@UEAAHXZ
_TEXT	SEGMENT
Error$ = 0
debug$1 = 8
CommandQueueDesc$ = 16
SwapChainDesc$ = 32
pDesc$ = 80
i$2 = 160
cpuHandle$3 = 168
depthStencilDesc$ = 176
depthOptimizedClearValue$ = 200
Properties$ = 224
TexScreen$ = 248
$T4 = 432
$T5 = 440
$T6 = 448
$T7 = 456
$T8 = 464
$T9 = 472
$T10 = 480
$T11 = 488
$T12 = 496
$T13 = 504
$T14 = 512
$T15 = 516
$T16 = 520
$T17 = 528
$T18 = 536
$T19 = 540
$T20 = 544
$T21 = 552
$T22 = 560
$T23 = 568
$T24 = 572
$T25 = 576
$T26 = 584
$T27 = 592
$T28 = 600
$T29 = 608
$T30 = 616
$T31 = 624
$T32 = 632
$T33 = 640
$T34 = 648
$T35 = 656
$T36 = 664
$T37 = 672
$T38 = 680
$T39 = 696
$T40 = 720
$T41 = 724
$T42 = 728
tv813 = 736
tv811 = 736
tv809 = 736
tv807 = 736
tv724 = 736
tv686 = 736
tv678 = 736
tv615 = 736
tv583 = 736
tv568 = 736
tv542 = 736
tv517 = 736
tv485 = 736
tv477 = 736
tv459 = 736
tv442 = 736
tv425 = 736
tv342 = 736
tv268 = 736
tv217 = 736
tv166 = 736
tv149 = 736
tv134 = 736
tv94 = 736
tv87 = 736
tv77 = 736
tv746 = 744
tv716 = 744
tv676 = 744
tv634 = 744
tv603 = 744
tv560 = 744
tv533 = 744
tv505 = 744
tv465 = 744
tv448 = 744
tv431 = 744
tv339 = 744
tv327 = 744
tv235 = 744
tv201 = 744
tv734 = 752
tv696 = 752
tv625 = 752
tv593 = 752
tv552 = 752
tv529 = 752
tv497 = 752
tv277 = 752
tv227 = 752
tv176 = 752
tv742 = 760
tv714 = 760
tv632 = 760
tv601 = 760
tv558 = 760
tv503 = 760
tv325 = 760
tv233 = 760
tv198 = 760
tv323 = 768
tv188 = 768
tv194 = 776
this$ = 816
?Init@D3D12Renderer@@UEAAHXZ PROC			; D3D12Renderer::Init, COMDAT

; 34   : {

$LN22:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	48 81 ec 70 03
	00 00		 sub	 rsp, 880		; 00000370H
  0000f	48 8d 6c 24 60	 lea	 rbp, QWORD PTR [rsp+96]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 35   : 	HRESULT Error = S_OK;

  00020	c7 45 00 00 00
	00 00		 mov	 DWORD PTR Error$[rbp], 0

; 36   : 
; 37   : #ifdef _DEBUG
; 38   : 	{
; 39   : 		ComPtr<ID3D12Debug> debug;

  00027	48 8d 4d 08	 lea	 rcx, QWORD PTR debug$1[rbp]
  0002b	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::ComPtr<ID3D12Debug>
  00030	90		 npad	 1

; 40   : 		D3D12GetDebugInterface(IID_PPV_ARGS(&debug));

  00031	48 8d 95 b0 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00038	48 8d 4d 08	 lea	 rcx, QWORD PTR debug$1[rbp]
  0003c	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator&
  00041	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00044	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Debug> >
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_GUID_344488b7_6846_474b_b989_f027448245e0
  00053	e8 00 00 00 00	 call	 D3D12GetDebugInterface

; 41   : 		debug->EnableDebugLayer();

  00058	48 8d 4d 08	 lea	 rcx, QWORD PTR debug$1[rbp]
  0005c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEBAPEAUID3D12Debug@@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::operator->
  00061	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00068	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv77[rbp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv77[rbp]
  00079	ff 50 18	 call	 QWORD PTR [rax+24]
  0007c	90		 npad	 1

; 42   : 	}

  0007d	48 8d 4d 08	 lea	 rcx, QWORD PTR debug$1[rbp]
  00081	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::~ComPtr<ID3D12Debug>

; 43   : #endif // _DEBUG
; 44   : 	m_renderWindow = GEngine.GetWindowManager()->GetWindow(0);

  00086	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?GEngine@@3VDEngine@@A ; GEngine
  0008d	e8 00 00 00 00	 call	 ?GetWindowManager@DEngine@@QEAAPEAVFWindowsWindowManager@@XZ ; DEngine::GetWindowManager
  00092	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00099	33 d2		 xor	 edx, edx
  0009b	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000a2	e8 00 00 00 00	 call	 ?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z ; FWindowsWindowManager::GetWindow
  000a7	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ae	48 89 41 78	 mov	 QWORD PTR [rcx+120], rax

; 45   : 	m_renderWindow->onResizeWindow.Bind(this, &D3D12Renderer::OnResize);

  000b2	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b9	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  000bd	48 83 c0 08	 add	 rax, 8
  000c1	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  000c8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?OnResize@D3D12Renderer@@QEAAXJJ@Z ; D3D12Renderer::OnResize
  000cf	48 8b 95 30 03
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  000d6	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv94[rbp]
  000dd	e8 00 00 00 00	 call	 ??$Bind@VD3D12Renderer@@@?$TMultiCastDelegate@XJJ@@QEAAXPEAVD3D12Renderer@@P81@EAAXJJ@Z@Z ; TMultiCastDelegate<void,long,long>::Bind<D3D12Renderer>

; 46   : 
; 47   : 	DXCall(Error = CreateDXGIFactory2(0, IID_PPV_ARGS(&m_factory)));

  000e2	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e9	48 83 c0 20	 add	 rax, 32			; 00000020H
  000ed	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  000f4	48 8d 95 b8 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  000fb	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv134[rbp]
  00102	e8 00 00 00 00	 call	 ??I?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator&
  00107	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0010a	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIFactory7> >
  0010f	4c 8b c0	 mov	 r8, rax
  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_GUID_a4966eed_76db_44da_84c1_ee9a7afb20a8
  00119	33 c9		 xor	 ecx, ecx
  0011b	e8 00 00 00 00	 call	 CreateDXGIFactory2
  00120	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  00123	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  00127	7d 09		 jge	 SHORT $LN5@Init
  00129	33 d2		 xor	 edx, edx
  0012b	33 c9		 xor	 ecx, ecx
  0012d	e8 00 00 00 00	 call	 _CxxThrowException
$LN5@Init:

; 48   : 	DXCall(Error = D3D12CreateDevice(nullptr, D3D_FEATURE_LEVEL_12_0, IID_PPV_ARGS(&m_device)));

  00132	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00139	48 83 c0 28	 add	 rax, 40			; 00000028H
  0013d	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv149[rbp], rax
  00144	48 8d 95 c0 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0014b	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv149[rbp]
  00152	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator&
  00157	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0015a	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Device8> >
  0015f	4c 8b c8	 mov	 r9, rax
  00162	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_GUID_9218e6bb_f944_4f7e_a75c_b1b2c7b701f3
  00169	ba 00 c0 00 00	 mov	 edx, 49152		; 0000c000H
  0016e	33 c9		 xor	 ecx, ecx
  00170	e8 00 00 00 00	 call	 D3D12CreateDevice
  00175	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  00178	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  0017c	7d 09		 jge	 SHORT $LN6@Init
  0017e	33 d2		 xor	 edx, edx
  00180	33 c9		 xor	 ecx, ecx
  00182	e8 00 00 00 00	 call	 _CxxThrowException
$LN6@Init:

; 49   : 	DXCall(Error = m_factory->EnumAdapterByLuid(m_device->GetAdapterLuid(), IID_PPV_ARGS(&m_adapter)));

  00187	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0018e	48 83 c0 20	 add	 rax, 32			; 00000020H
  00192	48 8b c8	 mov	 rcx, rax
  00195	e8 00 00 00 00	 call	 ??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator->
  0019a	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv166[rbp], rax
  001a1	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv166[rbp]
  001a8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001ab	48 8b 80 d0 00
	00 00		 mov	 rax, QWORD PTR [rax+208]
  001b2	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv201[rbp], rax
  001b9	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001c0	48 83 c0 30	 add	 rax, 48			; 00000030H
  001c4	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv176[rbp], rax
  001cb	48 8d 95 c8 01
	00 00		 lea	 rdx, QWORD PTR $T7[rbp]
  001d2	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv176[rbp]
  001d9	e8 00 00 00 00	 call	 ??I?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::operator&
  001de	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001e1	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<IDXGIAdapter1> >
  001e6	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv198[rbp], rax
  001ed	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001f4	48 83 c0 28	 add	 rax, 40			; 00000028H
  001f8	48 8b c8	 mov	 rcx, rax
  001fb	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00200	48 89 85 00 03
	00 00		 mov	 QWORD PTR tv188[rbp], rax
  00207	48 8b 85 00 03
	00 00		 mov	 rax, QWORD PTR tv188[rbp]
  0020e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00211	48 8b 80 58 01
	00 00		 mov	 rax, QWORD PTR [rax+344]
  00218	48 89 85 08 03
	00 00		 mov	 QWORD PTR tv194[rbp], rax
  0021f	48 8d 95 d0 01
	00 00		 lea	 rdx, QWORD PTR $T8[rbp]
  00226	48 8b 8d 00 03
	00 00		 mov	 rcx, QWORD PTR tv188[rbp]
  0022d	ff 95 08 03 00
	00		 call	 QWORD PTR tv194[rbp]
  00233	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00236	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T9[rbp], rax
  0023d	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T9[rbp]
  00244	48 89 85 e0 01
	00 00		 mov	 QWORD PTR $T10[rbp], rax
  0024b	4c 8b 8d f8 02
	00 00		 mov	 r9, QWORD PTR tv198[rbp]
  00252	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_GUID_29038f61_3839_4626_91fd_086879011a05
  00259	48 8b 95 e0 01
	00 00		 mov	 rdx, QWORD PTR $T10[rbp]
  00260	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv166[rbp]
  00267	ff 95 e8 02 00
	00		 call	 QWORD PTR tv201[rbp]
  0026d	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  00270	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  00274	7d 09		 jge	 SHORT $LN7@Init
  00276	33 d2		 xor	 edx, edx
  00278	33 c9		 xor	 ecx, ecx
  0027a	e8 00 00 00 00	 call	 _CxxThrowException
$LN7@Init:

; 50   : 
; 51   : 	D3D12_COMMAND_QUEUE_DESC CommandQueueDesc = {};

  0027f	48 8d 45 10	 lea	 rax, QWORD PTR CommandQueueDesc$[rbp]
  00283	48 8b f8	 mov	 rdi, rax
  00286	33 c0		 xor	 eax, eax
  00288	b9 10 00 00 00	 mov	 ecx, 16
  0028d	f3 aa		 rep stosb

; 52   : 
; 53   : 	CommandQueueDesc.Priority = D3D12_COMMAND_QUEUE_PRIORITY_HIGH;

  0028f	c7 45 14 64 00
	00 00		 mov	 DWORD PTR CommandQueueDesc$[rbp+4], 100 ; 00000064H

; 54   : 	CommandQueueDesc.Type = D3D12_COMMAND_LIST_TYPE_DIRECT;

  00296	c7 45 10 00 00
	00 00		 mov	 DWORD PTR CommandQueueDesc$[rbp], 0

; 55   : 	CommandQueueDesc.NodeMask = 0;

  0029d	c7 45 1c 00 00
	00 00		 mov	 DWORD PTR CommandQueueDesc$[rbp+12], 0

; 56   : 	CommandQueueDesc.Flags = D3D12_COMMAND_QUEUE_FLAG_NONE;

  002a4	c7 45 18 00 00
	00 00		 mov	 DWORD PTR CommandQueueDesc$[rbp+8], 0

; 57   : 	DXCall(Error = m_device->CreateCommandQueue(&CommandQueueDesc, IID_PPV_ARGS(&m_commandQueue)));

  002ab	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002b2	48 83 c0 28	 add	 rax, 40			; 00000028H
  002b6	48 8b c8	 mov	 rcx, rax
  002b9	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  002be	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv217[rbp], rax
  002c5	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv217[rbp]
  002cc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002cf	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  002d3	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv235[rbp], rax
  002da	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002e1	48 83 c0 48	 add	 rax, 72			; 00000048H
  002e5	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv227[rbp], rax
  002ec	48 8d 95 e8 01
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  002f3	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv227[rbp]
  002fa	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::operator&
  002ff	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00302	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandQueue> >
  00307	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv233[rbp], rax
  0030e	4c 8b 8d f8 02
	00 00		 mov	 r9, QWORD PTR tv233[rbp]
  00315	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
  0031c	48 8d 55 10	 lea	 rdx, QWORD PTR CommandQueueDesc$[rbp]
  00320	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv217[rbp]
  00327	ff 95 e8 02 00
	00		 call	 QWORD PTR tv235[rbp]
  0032d	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  00330	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  00334	7d 09		 jge	 SHORT $LN8@Init
  00336	33 d2		 xor	 edx, edx
  00338	33 c9		 xor	 ecx, ecx
  0033a	e8 00 00 00 00	 call	 _CxxThrowException
$LN8@Init:

; 58   : 
; 59   : 	DXGI_SWAP_CHAIN_DESC1 SwapChainDesc = {};

  0033f	48 8d 45 20	 lea	 rax, QWORD PTR SwapChainDesc$[rbp]
  00343	48 8b f8	 mov	 rdi, rax
  00346	33 c0		 xor	 eax, eax
  00348	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0034d	f3 aa		 rep stosb

; 60   : 	DXGI_SWAP_CHAIN_DESC pDesc = {};

  0034f	48 8d 45 50	 lea	 rax, QWORD PTR pDesc$[rbp]
  00353	48 8b f8	 mov	 rdi, rax
  00356	33 c0		 xor	 eax, eax
  00358	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  0035d	f3 aa		 rep stosb

; 61   : 
; 62   : 	pDesc.BufferDesc.Width = m_renderWindow->GetWitdh();

  0035f	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00366	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  0036a	e8 00 00 00 00	 call	 ?GetWitdh@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetWitdh
  0036f	89 45 50	 mov	 DWORD PTR pDesc$[rbp], eax

; 63   : 	pDesc.BufferDesc.Height = m_renderWindow->GetHeight();

  00372	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00379	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  0037d	e8 00 00 00 00	 call	 ?GetHeight@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetHeight
  00382	89 45 54	 mov	 DWORD PTR pDesc$[rbp+4], eax

; 64   : 	pDesc.BufferDesc.RefreshRate.Numerator = m_renderWindow->GetRefreshRate();

  00385	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0038c	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00390	e8 00 00 00 00	 call	 ?GetRefreshRate@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetRefreshRate
  00395	89 45 58	 mov	 DWORD PTR pDesc$[rbp+8], eax

; 65   : 	pDesc.BufferDesc.RefreshRate.Denominator = 1;

  00398	c7 45 5c 01 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+12], 1

; 66   : 	pDesc.BufferDesc.Format = m_backBufferFormat;

  0039f	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003a6	8b 80 98 00 00
	00		 mov	 eax, DWORD PTR [rax+152]
  003ac	89 45 60	 mov	 DWORD PTR pDesc$[rbp+16], eax

; 67   : 	pDesc.BufferDesc.ScanlineOrdering = DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;

  003af	c7 45 64 00 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+20], 0

; 68   : 	pDesc.BufferDesc.Scaling = DXGI_MODE_SCALING_UNSPECIFIED;

  003b6	c7 45 68 00 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+24], 0

; 69   : 	pDesc.SampleDesc.Count = 1;

  003bd	c7 45 6c 01 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+28], 1

; 70   : 	pDesc.SampleDesc.Quality = 0;

  003c4	c7 45 70 00 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+32], 0

; 71   : 	pDesc.BufferCount = BACK_BUFFER_COUNT;

  003cb	c7 45 78 02 00
	00 00		 mov	 DWORD PTR pDesc$[rbp+40], 2

; 72   : 	pDesc.OutputWindow = m_renderWindow->GetHandle();

  003d2	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003d9	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  003dd	e8 00 00 00 00	 call	 ?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ ; FWindowsWindow::GetHandle
  003e2	48 89 85 80 00
	00 00		 mov	 QWORD PTR pDesc$[rbp+48], rax

; 73   : 	pDesc.Windowed = true;

  003e9	c7 85 88 00 00
	00 01 00 00 00	 mov	 DWORD PTR pDesc$[rbp+56], 1

; 74   : 	pDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL;

  003f3	c7 85 8c 00 00
	00 03 00 00 00	 mov	 DWORD PTR pDesc$[rbp+60], 3

; 75   : 	pDesc.Flags = DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH;

  003fd	c7 85 90 00 00
	00 02 00 00 00	 mov	 DWORD PTR pDesc$[rbp+64], 2

; 76   : 	DXCall(Error = m_factory->CreateSwapChain(m_commandQueue.Get(), &pDesc, &m_swapchainT));

  00407	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0040e	48 83 c0 20	 add	 rax, 32			; 00000020H
  00412	48 8b c8	 mov	 rcx, rax
  00415	e8 00 00 00 00	 call	 ??C?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEBAPEAUIDXGIFactory7@@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::operator->
  0041a	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv268[rbp], rax
  00421	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv268[rbp]
  00428	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0042b	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  0042f	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv327[rbp], rax
  00436	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0043d	48 83 c0 70	 add	 rax, 112		; 00000070H
  00441	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  00448	48 8d 95 f0 01
	00 00		 lea	 rdx, QWORD PTR $T12[rbp]
  0044f	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv277[rbp]
  00456	e8 00 00 00 00	 call	 ??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
  0045b	48 8b c8	 mov	 rcx, rax
  0045e	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAAPEAPEAUIDXGISwapChain@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
  00463	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv325[rbp], rax
  0046a	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00471	48 83 c0 48	 add	 rax, 72			; 00000048H
  00475	48 8b c8	 mov	 rcx, rax
  00478	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEBAPEAUID3D12CommandQueue@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::Get
  0047d	48 89 85 00 03
	00 00		 mov	 QWORD PTR tv323[rbp], rax
  00484	4c 8b 8d f8 02
	00 00		 mov	 r9, QWORD PTR tv325[rbp]
  0048b	4c 8d 45 50	 lea	 r8, QWORD PTR pDesc$[rbp]
  0048f	48 8b 95 00 03
	00 00		 mov	 rdx, QWORD PTR tv323[rbp]
  00496	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv268[rbp]
  0049d	ff 95 e8 02 00
	00		 call	 QWORD PTR tv327[rbp]
  004a3	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  004a6	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  004aa	7d 09		 jge	 SHORT $LN9@Init
  004ac	33 d2		 xor	 edx, edx
  004ae	33 c9		 xor	 ecx, ecx
  004b0	e8 00 00 00 00	 call	 _CxxThrowException
$LN9@Init:

; 77   : 	m_swapchainT.As(&m_swapchain);

  004b5	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004bc	48 83 c0 70	 add	 rax, 112		; 00000070H
  004c0	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv342[rbp], rax
  004c7	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004ce	48 83 c0 68	 add	 rax, 104		; 00000068H
  004d2	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv339[rbp], rax
  004d9	48 8d 95 f8 01
	00 00		 lea	 rdx, QWORD PTR $T13[rbp]
  004e0	48 8b 8d e8 02
	00 00		 mov	 rcx, QWORD PTR tv339[rbp]
  004e7	e8 00 00 00 00	 call	 ??I?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator&
  004ec	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  004ef	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv342[rbp]
  004f6	e8 00 00 00 00	 call	 ??$As@UIDXGISwapChain4@@@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@@Details@12@@Z ; Microsoft::WRL::ComPtr<IDXGISwapChain>::As<IDXGISwapChain4>

; 78   : 
; 79   : 
; 80   : 	RTDescriptorHeap = std::make_unique<DescriptorHeap>(m_device.Get(),

  004fb	c7 85 00 02 00
	00 00 00 00 00	 mov	 DWORD PTR $T14[rbp], 0
  00505	c7 85 04 02 00
	00 02 00 00 00	 mov	 DWORD PTR $T15[rbp], 2
  0050f	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00516	48 83 c0 28	 add	 rax, 40			; 00000028H
  0051a	48 8b c8	 mov	 rcx, rax
  0051d	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get
  00522	48 89 85 08 02
	00 00		 mov	 QWORD PTR $T16[rbp], rax
  00529	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?BACK_BUFFER_COUNT@D3D12Renderer@@0IB
  00530	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00535	4c 8d 8d 00 02
	00 00		 lea	 r9, QWORD PTR $T14[rbp]
  0053c	4c 8d 85 04 02
	00 00		 lea	 r8, QWORD PTR $T15[rbp]
  00543	48 8d 95 08 02
	00 00		 lea	 rdx, QWORD PTR $T16[rbp]
  0054a	48 8d 8d 10 02
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00551	e8 00 00 00 00	 call	 ??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@AEBI@Z ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,unsigned int const &,0>
  00556	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv807[rbp], rax
  0055d	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00564	48 83 c0 50	 add	 rax, 80			; 00000050H
  00568	48 8b 95 e0 02
	00 00		 mov	 rdx, QWORD PTR tv807[rbp]
  0056f	48 8b c8	 mov	 rcx, rax
  00572	e8 00 00 00 00	 call	 ??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>
  00577	48 8d 8d 10 02
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0057e	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >

; 81   : 		D3D12_DESCRIPTOR_HEAP_TYPE_RTV,
; 82   : 		D3D12_DESCRIPTOR_HEAP_FLAG_NONE,
; 83   : 		BACK_BUFFER_COUNT);
; 84   : 	DSDescriptorHeap = make_unique<DescriptorHeap>(m_device.Get(),

  00583	c7 85 18 02 00
	00 01 00 00 00	 mov	 DWORD PTR $T18[rbp], 1
  0058d	c7 85 1c 02 00
	00 00 00 00 00	 mov	 DWORD PTR $T19[rbp], 0
  00597	c7 85 20 02 00
	00 03 00 00 00	 mov	 DWORD PTR $T20[rbp], 3
  005a1	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  005a8	48 83 c0 28	 add	 rax, 40			; 00000028H
  005ac	48 8b c8	 mov	 rcx, rax
  005af	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get
  005b4	48 89 85 28 02
	00 00		 mov	 QWORD PTR $T21[rbp], rax
  005bb	48 8d 85 18 02
	00 00		 lea	 rax, QWORD PTR $T18[rbp]
  005c2	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  005c7	4c 8d 8d 1c 02
	00 00		 lea	 r9, QWORD PTR $T19[rbp]
  005ce	4c 8d 85 20 02
	00 00		 lea	 r8, QWORD PTR $T20[rbp]
  005d5	48 8d 95 28 02
	00 00		 lea	 rdx, QWORD PTR $T21[rbp]
  005dc	48 8d 8d 30 02
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  005e3	e8 00 00 00 00	 call	 ??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>
  005e8	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv809[rbp], rax
  005ef	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  005f6	48 83 c0 58	 add	 rax, 88			; 00000058H
  005fa	48 8b 95 e0 02
	00 00		 mov	 rdx, QWORD PTR tv809[rbp]
  00601	48 8b c8	 mov	 rcx, rax
  00604	e8 00 00 00 00	 call	 ??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>
  00609	48 8d 8d 30 02
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  00610	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >

; 85   : 		D3D12_DESCRIPTOR_HEAP_TYPE_DSV,
; 86   : 		D3D12_DESCRIPTOR_HEAP_FLAG_NONE,
; 87   : 		1);
; 88   : 	SRDescriptorHeap = make_unique<DescriptorHeap>(m_device.Get(),

  00615	c7 85 38 02 00
	00 40 42 0f 00	 mov	 DWORD PTR $T23[rbp], 1000000 ; 000f4240H
  0061f	c7 85 3c 02 00
	00 01 00 00 00	 mov	 DWORD PTR $T24[rbp], 1
  00629	c7 85 40 02 00
	00 00 00 00 00	 mov	 DWORD PTR $T25[rbp], 0
  00633	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0063a	48 83 c0 28	 add	 rax, 40			; 00000028H
  0063e	48 8b c8	 mov	 rcx, rax
  00641	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::Get
  00646	48 89 85 48 02
	00 00		 mov	 QWORD PTR $T26[rbp], rax
  0064d	48 8d 85 38 02
	00 00		 lea	 rax, QWORD PTR $T23[rbp]
  00654	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00659	4c 8d 8d 3c 02
	00 00		 lea	 r9, QWORD PTR $T24[rbp]
  00660	4c 8d 85 40 02
	00 00		 lea	 r8, QWORD PTR $T25[rbp]
  00667	48 8d 95 48 02
	00 00		 lea	 rdx, QWORD PTR $T26[rbp]
  0066e	48 8d 8d 50 02
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  00675	e8 00 00 00 00	 call	 ??$make_unique@VDescriptorHeap@DirectX@@PEAUID3D12Device8@@W4D3D12_DESCRIPTOR_HEAP_TYPE@@W4D3D12_DESCRIPTOR_HEAP_FLAGS@@H$0A@@std@@YA?AV?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@0@$$QEAPEAUID3D12Device8@@$$QEAW4D3D12_DESCRIPTOR_HEAP_TYPE@@$$QEAW4D3D12_DESCRIPTOR_HEAP_FLAGS@@$$QEAH@Z ; std::make_unique<DirectX::DescriptorHeap,ID3D12Device8 *,enum D3D12_DESCRIPTOR_HEAP_TYPE,enum D3D12_DESCRIPTOR_HEAP_FLAGS,int,0>
  0067a	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv811[rbp], rax
  00681	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00688	48 83 c0 60	 add	 rax, 96			; 00000060H
  0068c	48 8b 95 e0 02
	00 00		 mov	 rdx, QWORD PTR tv811[rbp]
  00693	48 8b c8	 mov	 rcx, rax
  00696	e8 00 00 00 00	 call	 ??$?4U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator=<std::default_delete<DirectX::DescriptorHeap>,0>
  0069b	48 8d 8d 50 02
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  006a2	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >

; 89   : 		D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV,
; 90   : 		D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE,
; 91   : 		D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1);
; 92   : 	
; 93   : 	RTHandleSize = m_device->GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE_RTV);

  006a7	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  006ae	48 83 c0 28	 add	 rax, 40			; 00000028H
  006b2	48 8b c8	 mov	 rcx, rax
  006b5	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  006ba	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv425[rbp], rax
  006c1	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv425[rbp]
  006c8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  006cb	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  006cf	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv431[rbp], rax
  006d6	ba 02 00 00 00	 mov	 edx, 2
  006db	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv425[rbp]
  006e2	ff 95 e8 02 00
	00		 call	 QWORD PTR tv431[rbp]
  006e8	8b c0		 mov	 eax, eax
  006ea	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  006f1	48 89 81 c0 00
	00 00		 mov	 QWORD PTR [rcx+192], rax

; 94   : 	DSHandleSize = m_device->GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE_DSV);

  006f8	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  006ff	48 83 c0 28	 add	 rax, 40			; 00000028H
  00703	48 8b c8	 mov	 rcx, rax
  00706	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  0070b	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv442[rbp], rax
  00712	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv442[rbp]
  00719	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0071c	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00720	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv448[rbp], rax
  00727	ba 03 00 00 00	 mov	 edx, 3
  0072c	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv442[rbp]
  00733	ff 95 e8 02 00
	00		 call	 QWORD PTR tv448[rbp]
  00739	8b c0		 mov	 eax, eax
  0073b	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00742	48 89 81 c8 00
	00 00		 mov	 QWORD PTR [rcx+200], rax

; 95   : 	CBSRUAHandleSize = m_device->GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV);

  00749	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00750	48 83 c0 28	 add	 rax, 40			; 00000028H
  00754	48 8b c8	 mov	 rcx, rax
  00757	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  0075c	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv459[rbp], rax
  00763	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv459[rbp]
  0076a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0076d	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00771	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv465[rbp], rax
  00778	33 d2		 xor	 edx, edx
  0077a	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv459[rbp]
  00781	ff 95 e8 02 00
	00		 call	 QWORD PTR tv465[rbp]
  00787	8b c0		 mov	 eax, eax
  00789	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00790	48 89 81 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], rax

; 96   : 
; 97   : 	for (size_t i = 0; i < BACK_BUFFER_COUNT; i++)

  00797	48 c7 85 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR i$2[rbp], 0
  007a2	eb 11		 jmp	 SHORT $LN4@Init
$LN2@Init:
  007a4	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR i$2[rbp]
  007ab	48 ff c0	 inc	 rax
  007ae	48 89 85 a0 00
	00 00		 mov	 QWORD PTR i$2[rbp], rax
$LN4@Init:
  007b5	48 83 bd a0 00
	00 00 02	 cmp	 QWORD PTR i$2[rbp], 2
  007bd	0f 83 6b 01 00
	00		 jae	 $LN3@Init

; 98   : 	{
; 99   : 		D3D12_CPU_DESCRIPTOR_HANDLE cpuHandle = RTDescriptorHeap->GetCpuHandle(i);

  007c3	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  007ca	48 83 c0 50	 add	 rax, 80			; 00000050H
  007ce	48 8b c8	 mov	 rcx, rax
  007d1	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  007d6	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv477[rbp], rax
  007dd	4c 8b 85 a0 00
	00 00		 mov	 r8, QWORD PTR i$2[rbp]
  007e4	48 8d 95 a8 00
	00 00		 lea	 rdx, QWORD PTR cpuHandle$3[rbp]
  007eb	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv477[rbp]
  007f2	e8 00 00 00 00	 call	 ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ; DirectX::DescriptorHeap::GetCpuHandle

; 100  : 		DXCall(Error = m_swapchain->GetBuffer(i, IID_PPV_ARGS(&m_backBuffers[i])));

  007f7	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  007fe	48 83 c0 68	 add	 rax, 104		; 00000068H
  00802	48 8b c8	 mov	 rcx, rax
  00805	e8 00 00 00 00	 call	 ??C?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEBAPEAUIDXGISwapChain4@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::operator->
  0080a	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv485[rbp], rax
  00811	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv485[rbp]
  00818	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0081b	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0081f	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv505[rbp], rax
  00826	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0082d	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR i$2[rbp]
  00834	48 8d 84 c8 80
	00 00 00	 lea	 rax, QWORD PTR [rax+rcx*8+128]
  0083c	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv497[rbp], rax
  00843	48 8d 95 58 02
	00 00		 lea	 rdx, QWORD PTR $T28[rbp]
  0084a	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv497[rbp]
  00851	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
  00856	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00859	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
  0085e	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv503[rbp], rax
  00865	4c 8b 8d f8 02
	00 00		 mov	 r9, QWORD PTR tv503[rbp]
  0086c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
  00873	8b 95 a0 00 00
	00		 mov	 edx, DWORD PTR i$2[rbp]
  00879	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv485[rbp]
  00880	ff 95 e8 02 00
	00		 call	 QWORD PTR tv505[rbp]
  00886	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  00889	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  0088d	7d 09		 jge	 SHORT $LN10@Init
  0088f	33 d2		 xor	 edx, edx
  00891	33 c9		 xor	 ecx, ecx
  00893	e8 00 00 00 00	 call	 _CxxThrowException
$LN10@Init:

; 101  : 		m_device->CreateRenderTargetView(m_backBuffers[i].Get(), nullptr, cpuHandle);

  00898	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0089f	48 83 c0 28	 add	 rax, 40			; 00000028H
  008a3	48 8b c8	 mov	 rcx, rax
  008a6	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  008ab	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv517[rbp], rax
  008b2	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv517[rbp]
  008b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  008bc	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  008c3	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv533[rbp], rax
  008ca	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR cpuHandle$3[rbp]
  008d1	48 89 85 60 02
	00 00		 mov	 QWORD PTR $T29[rbp], rax
  008d8	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR $T29[rbp]
  008df	48 89 85 68 02
	00 00		 mov	 QWORD PTR $T30[rbp], rax
  008e6	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  008ed	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR i$2[rbp]
  008f4	48 8d 84 c8 80
	00 00 00	 lea	 rax, QWORD PTR [rax+rcx*8+128]
  008fc	48 8b c8	 mov	 rcx, rax
  008ff	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  00904	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv529[rbp], rax
  0090b	4c 8b 8d 68 02
	00 00		 mov	 r9, QWORD PTR $T30[rbp]
  00912	45 33 c0	 xor	 r8d, r8d
  00915	48 8b 95 f0 02
	00 00		 mov	 rdx, QWORD PTR tv529[rbp]
  0091c	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv517[rbp]
  00923	ff 95 e8 02 00
	00		 call	 QWORD PTR tv533[rbp]

; 102  : 	}

  00929	e9 76 fe ff ff	 jmp	 $LN2@Init
$LN3@Init:

; 103  : 
; 104  : 	DXCall(Error = m_device->CreateCommandAllocator(D3D12_COMMAND_LIST_TYPE_DIRECT,

  0092e	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00935	48 83 c0 28	 add	 rax, 40			; 00000028H
  00939	48 8b c8	 mov	 rcx, rax
  0093c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00941	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv542[rbp], rax
  00948	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv542[rbp]
  0094f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00952	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00956	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv560[rbp], rax
  0095d	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00964	48 83 c0 38	 add	 rax, 56			; 00000038H
  00968	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv552[rbp], rax
  0096f	48 8d 95 70 02
	00 00		 lea	 rdx, QWORD PTR $T31[rbp]
  00976	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv552[rbp]
  0097d	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator&
  00982	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00985	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12CommandAllocator> >
  0098a	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv558[rbp], rax
  00991	4c 8b 8d f8 02
	00 00		 mov	 r9, QWORD PTR tv558[rbp]
  00998	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_GUID_6102dee4_af59_4b09_b999_b44d73f09b24
  0099f	33 d2		 xor	 edx, edx
  009a1	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv542[rbp]
  009a8	ff 95 e8 02 00
	00		 call	 QWORD PTR tv560[rbp]
  009ae	89 45 00	 mov	 DWORD PTR Error$[rbp], eax
  009b1	83 7d 00 00	 cmp	 DWORD PTR Error$[rbp], 0
  009b5	7d 09		 jge	 SHORT $LN11@Init
  009b7	33 d2		 xor	 edx, edx
  009b9	33 c9		 xor	 ecx, ecx
  009bb	e8 00 00 00 00	 call	 _CxxThrowException
$LN11@Init:

; 105  : 		IID_PPV_ARGS(&m_commandAllocator)));
; 106  : 	DXCall(m_commandAllocator->Reset());

  009c0	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  009c7	48 83 c0 38	 add	 rax, 56			; 00000038H
  009cb	48 8b c8	 mov	 rcx, rax
  009ce	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEBAPEAUID3D12CommandAllocator@@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::operator->
  009d3	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv568[rbp], rax
  009da	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv568[rbp]
  009e1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  009e4	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv568[rbp]
  009eb	ff 50 40	 call	 QWORD PTR [rax+64]
  009ee	85 c0		 test	 eax, eax
  009f0	7d 09		 jge	 SHORT $LN12@Init
  009f2	33 d2		 xor	 edx, edx
  009f4	33 c9		 xor	 ecx, ecx
  009f6	e8 00 00 00 00	 call	 _CxxThrowException
$LN12@Init:

; 107  : 
; 108  : 	DXCall(m_device->CreateCommandList1(0, D3D12_COMMAND_LIST_TYPE_DIRECT, D3D12_COMMAND_LIST_FLAG_NONE,

  009fb	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00a02	48 83 c0 28	 add	 rax, 40			; 00000028H
  00a06	48 8b c8	 mov	 rcx, rax
  00a09	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00a0e	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv583[rbp], rax
  00a15	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv583[rbp]
  00a1c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a1f	48 8b 80 98 01
	00 00		 mov	 rax, QWORD PTR [rax+408]
  00a26	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv603[rbp], rax
  00a2d	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00a34	48 83 c0 40	 add	 rax, 64			; 00000040H
  00a38	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv593[rbp], rax
  00a3f	48 8d 95 78 02
	00 00		 lea	 rdx, QWORD PTR $T32[rbp]
  00a46	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv593[rbp]
  00a4d	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::operator&
  00a52	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00a55	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6> >
  00a5a	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv601[rbp], rax
  00a61	48 8b 85 f8 02
	00 00		 mov	 rax, QWORD PTR tv601[rbp]
  00a68	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00a6d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_GUID_c3827890_e548_4cfa_96cf_5689a9370f80
  00a74	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00a79	45 33 c9	 xor	 r9d, r9d
  00a7c	45 33 c0	 xor	 r8d, r8d
  00a7f	33 d2		 xor	 edx, edx
  00a81	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv583[rbp]
  00a88	ff 95 e8 02 00
	00		 call	 QWORD PTR tv603[rbp]
  00a8e	85 c0		 test	 eax, eax
  00a90	7d 09		 jge	 SHORT $LN13@Init
  00a92	33 d2		 xor	 edx, edx
  00a94	33 c9		 xor	 ecx, ecx
  00a96	e8 00 00 00 00	 call	 _CxxThrowException
$LN13@Init:

; 109  : 		IID_PPV_ARGS(&m_commandList)));
; 110  : 		
; 111  : 	DXCall(m_device->CreateFence(0, D3D12_FENCE_FLAG_NONE, IID_PPV_ARGS(&m_fence)));

  00a9b	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00aa2	48 83 c0 28	 add	 rax, 40			; 00000028H
  00aa6	48 8b c8	 mov	 rcx, rax
  00aa9	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00aae	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv615[rbp], rax
  00ab5	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv615[rbp]
  00abc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00abf	48 8b 80 20 01
	00 00		 mov	 rax, QWORD PTR [rax+288]
  00ac6	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv634[rbp], rax
  00acd	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00ad4	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00ada	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv625[rbp], rax
  00ae1	48 8d 95 80 02
	00 00		 lea	 rdx, QWORD PTR $T33[rbp]
  00ae8	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv625[rbp]
  00aef	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::operator&
  00af4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00af7	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Fence> >
  00afc	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv632[rbp], rax
  00b03	48 8b 85 f8 02
	00 00		 mov	 rax, QWORD PTR tv632[rbp]
  00b0a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00b0f	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
  00b16	45 33 c0	 xor	 r8d, r8d
  00b19	33 d2		 xor	 edx, edx
  00b1b	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv615[rbp]
  00b22	ff 95 e8 02 00
	00		 call	 QWORD PTR tv634[rbp]
  00b28	85 c0		 test	 eax, eax
  00b2a	7d 09		 jge	 SHORT $LN14@Init
  00b2c	33 d2		 xor	 edx, edx
  00b2e	33 c9		 xor	 ecx, ecx
  00b30	e8 00 00 00 00	 call	 _CxxThrowException
$LN14@Init:

; 112  : 	m_fenceEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  00b35	45 33 c9	 xor	 r9d, r9d
  00b38	45 33 c0	 xor	 r8d, r8d
  00b3b	33 d2		 xor	 edx, edx
  00b3d	33 c9		 xor	 ecx, ecx
  00b3f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventW
  00b45	48 8b 8d 30 03
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00b4c	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax

; 113  : 
; 114  : 
; 115  : 	D3D12_DEPTH_STENCIL_VIEW_DESC depthStencilDesc = {};

  00b53	48 8d 85 b0 00
	00 00		 lea	 rax, QWORD PTR depthStencilDesc$[rbp]
  00b5a	48 8b f8	 mov	 rdi, rax
  00b5d	33 c0		 xor	 eax, eax
  00b5f	b9 18 00 00 00	 mov	 ecx, 24
  00b64	f3 aa		 rep stosb

; 116  : 	depthStencilDesc.Format = DXGI_FORMAT_D32_FLOAT;

  00b66	c7 85 b0 00 00
	00 28 00 00 00	 mov	 DWORD PTR depthStencilDesc$[rbp], 40 ; 00000028H

; 117  : 	depthStencilDesc.ViewDimension = D3D12_DSV_DIMENSION_TEXTURE2D;

  00b70	c7 85 b4 00 00
	00 03 00 00 00	 mov	 DWORD PTR depthStencilDesc$[rbp+4], 3

; 118  : 	depthStencilDesc.Flags = D3D12_DSV_FLAG_NONE;

  00b7a	c7 85 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR depthStencilDesc$[rbp+8], 0

; 119  : 
; 120  : 	D3D12_CLEAR_VALUE depthOptimizedClearValue = {};

  00b84	48 8d 85 c8 00
	00 00		 lea	 rax, QWORD PTR depthOptimizedClearValue$[rbp]
  00b8b	48 8b f8	 mov	 rdi, rax
  00b8e	33 c0		 xor	 eax, eax
  00b90	b9 14 00 00 00	 mov	 ecx, 20
  00b95	f3 aa		 rep stosb

; 121  : 	depthOptimizedClearValue.Format = DXGI_FORMAT_D32_FLOAT;

  00b97	c7 85 c8 00 00
	00 28 00 00 00	 mov	 DWORD PTR depthOptimizedClearValue$[rbp], 40 ; 00000028H

; 122  : 	depthOptimizedClearValue.DepthStencil.Depth = 1.0f;

  00ba1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ba9	f3 0f 11 85 cc
	00 00 00	 movss	 DWORD PTR depthOptimizedClearValue$[rbp+4], xmm0

; 123  : 	depthOptimizedClearValue.DepthStencil.Stencil = 0;

  00bb1	c6 85 d0 00 00
	00 00		 mov	 BYTE PTR depthOptimizedClearValue$[rbp+8], 0

; 124  : 
; 125  : 	auto Properties = CD3DX12_HEAP_PROPERTIES(D3D12_HEAP_TYPE_DEFAULT);

  00bb8	41 b9 01 00 00
	00		 mov	 r9d, 1
  00bbe	41 b8 01 00 00
	00		 mov	 r8d, 1
  00bc4	ba 01 00 00 00	 mov	 edx, 1
  00bc9	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR Properties$[rbp]
  00bd0	e8 00 00 00 00	 call	 ??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z ; CD3DX12_HEAP_PROPERTIES::CD3DX12_HEAP_PROPERTIES

; 126  : 	auto TexScreen = CD3DX12_RESOURCE_DESC::Tex2D(DXGI_FORMAT_D32_FLOAT, m_renderWindow->GetWitdh(),

  00bd5	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00bdc	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00be0	e8 00 00 00 00	 call	 ?GetHeight@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetHeight
  00be5	89 85 e0 02 00
	00		 mov	 DWORD PTR tv678[rbp], eax
  00beb	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00bf2	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00bf6	e8 00 00 00 00	 call	 ?GetWitdh@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetWitdh
  00bfb	8b c0		 mov	 eax, eax
  00bfd	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv676[rbp], rax
  00c04	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR [rsp+80], 0
  00c0d	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR [rsp+72], 0
  00c15	c7 44 24 40 02
	00 00 00	 mov	 DWORD PTR [rsp+64], 2
  00c1d	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  00c25	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR [rsp+48], 1
  00c2d	66 c7 44 24 28
	00 00		 mov	 WORD PTR [rsp+40], 0
  00c34	66 c7 44 24 20
	01 00		 mov	 WORD PTR [rsp+32], 1
  00c3b	44 8b 8d e0 02
	00 00		 mov	 r9d, DWORD PTR tv678[rbp]
  00c42	4c 8b 85 e8 02
	00 00		 mov	 r8, QWORD PTR tv676[rbp]
  00c49	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00c4e	48 8d 8d f8 00
	00 00		 lea	 rcx, QWORD PTR TexScreen$[rbp]
  00c55	e8 00 00 00 00	 call	 ?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z ; CD3DX12_RESOURCE_DESC::Tex2D

; 127  : 		m_renderWindow->GetHeight(),
; 128  : 		1, 0, 1, 0, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL);
; 129  : 
; 130  : 	m_device->CreateCommittedResource(&Properties,

  00c5a	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00c61	48 83 c0 28	 add	 rax, 40			; 00000028H
  00c65	48 8b c8	 mov	 rcx, rax
  00c68	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00c6d	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv686[rbp], rax
  00c74	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv686[rbp]
  00c7b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00c7e	48 8b 80 d8 00
	00 00		 mov	 rax, QWORD PTR [rax+216]
  00c85	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv716[rbp], rax
  00c8c	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00c93	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00c99	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv696[rbp], rax
  00ca0	48 8d 95 88 02
	00 00		 lea	 rdx, QWORD PTR $T34[rbp]
  00ca7	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv696[rbp]
  00cae	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
  00cb3	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00cb6	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
  00cbb	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv714[rbp], rax
  00cc2	48 8b 85 f8 02
	00 00		 mov	 rax, QWORD PTR tv714[rbp]
  00cc9	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00cce	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
  00cd5	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00cda	48 8d 85 c8 00
	00 00		 lea	 rax, QWORD PTR depthOptimizedClearValue$[rbp]
  00ce1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00ce6	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00cee	4c 8d 8d f8 00
	00 00		 lea	 r9, QWORD PTR TexScreen$[rbp]
  00cf5	45 33 c0	 xor	 r8d, r8d
  00cf8	48 8d 95 e0 00
	00 00		 lea	 rdx, QWORD PTR Properties$[rbp]
  00cff	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv686[rbp]
  00d06	ff 95 e8 02 00
	00		 call	 QWORD PTR tv716[rbp]

; 131  : 		D3D12_HEAP_FLAG_NONE,
; 132  : 		&TexScreen,
; 133  : 		D3D12_RESOURCE_STATE_DEPTH_WRITE,
; 134  : 		&depthOptimizedClearValue,
; 135  : 		IID_PPV_ARGS(&m_depthBuffer)
; 136  : 	);
; 137  : 	m_device->CreateDepthStencilView(m_depthBuffer.Get(), &depthStencilDesc,

  00d0c	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d13	48 83 c0 28	 add	 rax, 40			; 00000028H
  00d17	48 8b c8	 mov	 rcx, rax
  00d1a	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEBAPEAUID3D12Device8@@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::operator->
  00d1f	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv724[rbp], rax
  00d26	48 8b 85 e0 02
	00 00		 mov	 rax, QWORD PTR tv724[rbp]
  00d2d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00d30	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  00d37	48 89 85 e8 02
	00 00		 mov	 QWORD PTR tv746[rbp], rax
  00d3e	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d45	48 83 c0 58	 add	 rax, 88			; 00000058H
  00d49	48 8b c8	 mov	 rcx, rax
  00d4c	e8 00 00 00 00	 call	 ??C?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEBAPEAVDescriptorHeap@DirectX@@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::operator->
  00d51	48 89 85 f0 02
	00 00		 mov	 QWORD PTR tv734[rbp], rax
  00d58	48 8d 95 90 02
	00 00		 lea	 rdx, QWORD PTR $T35[rbp]
  00d5f	48 8b 8d f0 02
	00 00		 mov	 rcx, QWORD PTR tv734[rbp]
  00d66	e8 00 00 00 00	 call	 ?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ ; DirectX::DescriptorHeap::GetFirstCpuHandle
  00d6b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00d6e	48 89 85 98 02
	00 00		 mov	 QWORD PTR $T36[rbp], rax
  00d75	48 8b 85 98 02
	00 00		 mov	 rax, QWORD PTR $T36[rbp]
  00d7c	48 89 85 a0 02
	00 00		 mov	 QWORD PTR $T37[rbp], rax
  00d83	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00d8a	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00d90	48 8b c8	 mov	 rcx, rax
  00d93	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  00d98	48 89 85 f8 02
	00 00		 mov	 QWORD PTR tv742[rbp], rax
  00d9f	4c 8b 8d a0 02
	00 00		 mov	 r9, QWORD PTR $T37[rbp]
  00da6	4c 8d 85 b0 00
	00 00		 lea	 r8, QWORD PTR depthStencilDesc$[rbp]
  00dad	48 8b 95 f8 02
	00 00		 mov	 rdx, QWORD PTR tv742[rbp]
  00db4	48 8b 8d e0 02
	00 00		 mov	 rcx, QWORD PTR tv724[rbp]
  00dbb	ff 95 e8 02 00
	00		 call	 QWORD PTR tv746[rbp]

; 138  : 		DSDescriptorHeap->GetFirstCpuHandle());
; 139  : 
; 140  : 	ScissorRect = { 0, 0, static_cast<long>(m_renderWindow->GetWitdh()), 

  00dc1	c7 85 a8 02 00
	00 00 00 00 00	 mov	 DWORD PTR $T38[rbp], 0
  00dcb	c7 85 ac 02 00
	00 00 00 00 00	 mov	 DWORD PTR $T38[rbp+4], 0
  00dd5	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00ddc	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00de0	e8 00 00 00 00	 call	 ?GetWitdh@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetWitdh
  00de5	89 85 b0 02 00
	00		 mov	 DWORD PTR $T38[rbp+8], eax
  00deb	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00df2	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00df6	e8 00 00 00 00	 call	 ?GetHeight@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetHeight
  00dfb	89 85 b4 02 00
	00		 mov	 DWORD PTR $T38[rbp+12], eax
  00e01	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00e08	48 8d 8d a8 02
	00 00		 lea	 rcx, QWORD PTR $T38[rbp]
  00e0f	48 8d b8 f0 00
	00 00		 lea	 rdi, QWORD PTR [rax+240]
  00e16	48 8b f1	 mov	 rsi, rcx
  00e19	b9 10 00 00 00	 mov	 ecx, 16
  00e1e	f3 a4		 rep movsb

; 141  : 		static_cast<long>(m_renderWindow->GetHeight()) };
; 142  : 	Viewport = { 0.f, 0.f,  static_cast<float>(m_renderWindow->GetWitdh()),

  00e20	0f 57 c0	 xorps	 xmm0, xmm0
  00e23	f3 0f 11 85 b8
	02 00 00	 movss	 DWORD PTR $T39[rbp], xmm0
  00e2b	0f 57 c0	 xorps	 xmm0, xmm0
  00e2e	f3 0f 11 85 bc
	02 00 00	 movss	 DWORD PTR $T39[rbp+4], xmm0
  00e36	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00e3d	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00e41	e8 00 00 00 00	 call	 ?GetWitdh@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetWitdh
  00e46	8b c0		 mov	 eax, eax
  00e48	f3 48 0f 2a c0	 cvtsi2ss xmm0, rax
  00e4d	f3 0f 11 85 c0
	02 00 00	 movss	 DWORD PTR $T39[rbp+8], xmm0
  00e55	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00e5c	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00e60	e8 00 00 00 00	 call	 ?GetHeight@FWindowsWindow@@QEAAIXZ ; FWindowsWindow::GetHeight
  00e65	8b c0		 mov	 eax, eax
  00e67	f3 48 0f 2a c0	 cvtsi2ss xmm0, rax
  00e6c	f3 0f 11 85 c4
	02 00 00	 movss	 DWORD PTR $T39[rbp+12], xmm0
  00e74	0f 57 c0	 xorps	 xmm0, xmm0
  00e77	f3 0f 11 85 c8
	02 00 00	 movss	 DWORD PTR $T39[rbp+16], xmm0
  00e7f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00e87	f3 0f 11 85 cc
	02 00 00	 movss	 DWORD PTR $T39[rbp+20], xmm0
  00e8f	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00e96	48 8d 8d b8 02
	00 00		 lea	 rcx, QWORD PTR $T39[rbp]
  00e9d	48 8d b8 d8 00
	00 00		 lea	 rdi, QWORD PTR [rax+216]
  00ea4	48 8b f1	 mov	 rsi, rcx
  00ea7	b9 18 00 00 00	 mov	 ecx, 24
  00eac	f3 a4		 rep movsb

; 143  : 		static_cast<float>(m_renderWindow->GetHeight()), 0.f, 1.f };
; 144  : 
; 145  : 
; 146  : 	m_passBuffer = std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>>(1, true);

  00eae	c6 85 d0 02 00
	00 01		 mov	 BYTE PTR $T40[rbp], 1
  00eb5	c7 85 d4 02 00
	00 01 00 00 00	 mov	 DWORD PTR $T41[rbp], 1
  00ebf	4c 8d 85 d0 02
	00 00		 lea	 r8, QWORD PTR $T40[rbp]
  00ec6	48 8d 95 d4 02
	00 00		 lea	 rdx, QWORD PTR $T41[rbp]
  00ecd	48 8d 8d d8 02
	00 00		 lea	 rcx, QWORD PTR $T42[rbp]
  00ed4	e8 00 00 00 00	 call	 ??$make_unique@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@H_N$0A@@std@@YA?AV?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@0@$$QEAH$$QEA_N@Z ; std::make_unique<D3D12UploadBufferResource<D3D12PassConstants>,int,bool,0>
  00ed9	48 89 85 e0 02
	00 00		 mov	 QWORD PTR tv813[rbp], rax
  00ee0	48 8b 85 30 03
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00ee7	48 05 08 01 00
	00		 add	 rax, 264		; 00000108H
  00eed	48 8b 95 e0 02
	00 00		 mov	 rdx, QWORD PTR tv813[rbp]
  00ef4	48 8b c8	 mov	 rcx, rax
  00ef7	e8 00 00 00 00	 call	 ??$?4U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::operator=<std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>
  00efc	48 8d 8d d8 02
	00 00		 lea	 rcx, QWORD PTR $T42[rbp]
  00f03	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::~unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >

; 147  : 	D3DUtil::InitStaticSamples();

  00f08	e8 00 00 00 00	 call	 ?InitStaticSamples@D3DUtil@@SAXXZ ; D3DUtil::InitStaticSamples

; 148  : 	D3DUtil::InitPipelines();

  00f0d	e8 00 00 00 00	 call	 ?InitPipelines@D3DUtil@@SAXXZ ; D3DUtil::InitPipelines

; 149  : 		
; 150  : 
; 151  : 	return Error;

  00f12	8b 45 00	 mov	 eax, DWORD PTR Error$[rbp]

; 152  : 
; 153  : }

  00f15	48 8d a5 10 03
	00 00		 lea	 rsp, QWORD PTR [rbp+784]
  00f1c	5f		 pop	 rdi
  00f1d	5e		 pop	 rsi
  00f1e	5d		 pop	 rbp
  00f1f	c3		 ret	 0
$LN21@Init:
?Init@D3D12Renderer@@UEAAHXZ ENDP			; D3D12Renderer::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
Error$ = 0
debug$1 = 8
CommandQueueDesc$ = 16
SwapChainDesc$ = 32
pDesc$ = 80
i$2 = 160
cpuHandle$3 = 168
depthStencilDesc$ = 176
depthOptimizedClearValue$ = 200
Properties$ = 224
TexScreen$ = 248
$T4 = 432
$T5 = 440
$T6 = 448
$T7 = 456
$T8 = 464
$T9 = 472
$T10 = 480
$T11 = 488
$T12 = 496
$T13 = 504
$T14 = 512
$T15 = 516
$T16 = 520
$T17 = 528
$T18 = 536
$T19 = 540
$T20 = 544
$T21 = 552
$T22 = 560
$T23 = 568
$T24 = 572
$T25 = 576
$T26 = 584
$T27 = 592
$T28 = 600
$T29 = 608
$T30 = 616
$T31 = 624
$T32 = 632
$T33 = 640
$T34 = 648
$T35 = 656
$T36 = 664
$T37 = 672
$T38 = 680
$T39 = 696
$T40 = 720
$T41 = 724
$T42 = 728
tv813 = 736
tv811 = 736
tv809 = 736
tv807 = 736
tv724 = 736
tv686 = 736
tv678 = 736
tv615 = 736
tv583 = 736
tv568 = 736
tv542 = 736
tv517 = 736
tv485 = 736
tv477 = 736
tv459 = 736
tv442 = 736
tv425 = 736
tv342 = 736
tv268 = 736
tv217 = 736
tv166 = 736
tv149 = 736
tv134 = 736
tv94 = 736
tv87 = 736
tv77 = 736
tv746 = 744
tv716 = 744
tv676 = 744
tv634 = 744
tv603 = 744
tv560 = 744
tv533 = 744
tv505 = 744
tv465 = 744
tv448 = 744
tv431 = 744
tv339 = 744
tv327 = 744
tv235 = 744
tv201 = 744
tv734 = 752
tv696 = 752
tv625 = 752
tv593 = 752
tv552 = 752
tv529 = 752
tv497 = 752
tv277 = 752
tv227 = 752
tv176 = 752
tv742 = 760
tv714 = 760
tv632 = 760
tv601 = 760
tv558 = 760
tv503 = 760
tv325 = 760
tv233 = 760
tv198 = 760
tv323 = 768
tv188 = 768
tv194 = 776
this$ = 816
?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA PROC	; `D3D12Renderer::Init'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 60	 lea	 rbp, QWORD PTR [rdx+96]
  0000a	48 8d 4d 08	 lea	 rcx, QWORD PTR debug$1[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Debug@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Debug>::~ComPtr<ID3D12Debug>
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0??Init@D3D12Renderer@@UEAAHXZ@4HA ENDP	; `D3D12Renderer::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ??0D3D12Renderer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0D3D12Renderer@@QEAA@XZ PROC				; D3D12Renderer::D3D12Renderer, COMDAT

; 28   : {

$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0Renderer@@QEAA@XZ
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7D3D12Renderer@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.h

; 78   : 	float rot = 0.0f;

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	0f 57 c0	 xorps	 xmm0, xmm0
  00039	f3 0f 11 40 10	 movss	 DWORD PTR [rax+16], xmm0

; 79   : 	uint64_t m_freeSRVDescriptor = 0;

  0003e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00042	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp

; 28   : {

  0004a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 c0 20	 add	 rax, 32			; 00000020H
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??0?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::ComPtr<IDXGIFactory7>
  0005a	90		 npad	 1
  0005b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::ComPtr<ID3D12Device8>
  0006b	90		 npad	 1
  0006c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00070	48 83 c0 30	 add	 rax, 48			; 00000030H
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??0?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::ComPtr<IDXGIAdapter1>
  0007c	90		 npad	 1
  0007d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00081	48 83 c0 38	 add	 rax, 56			; 00000038H
  00085	48 8b c8	 mov	 rcx, rax
  00088	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::ComPtr<ID3D12CommandAllocator>
  0008d	90		 npad	 1
  0008e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00092	48 83 c0 40	 add	 rax, 64			; 00000040H
  00096	48 8b c8	 mov	 rcx, rax
  00099	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::ComPtr<ID3D12GraphicsCommandList6>
  0009e	90		 npad	 1
  0009f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000a3	48 83 c0 48	 add	 rax, 72			; 00000048H
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::ComPtr<ID3D12CommandQueue>
  000af	90		 npad	 1
  000b0	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000b4	48 83 c0 50	 add	 rax, 80			; 00000050H
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
  000c0	90		 npad	 1
  000c1	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 83 c0 58	 add	 rax, 88			; 00000058H
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
  000d1	90		 npad	 1
  000d2	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000d6	48 83 c0 60	 add	 rax, 96			; 00000060H
  000da	48 8b c8	 mov	 rcx, rax
  000dd	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VDescriptorHeap@DirectX@@@std@@$0A@@?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> ><std::default_delete<DirectX::DescriptorHeap>,0>
  000e2	90		 npad	 1
  000e3	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000e7	48 83 c0 68	 add	 rax, 104		; 00000068H
  000eb	48 8b c8	 mov	 rcx, rax
  000ee	e8 00 00 00 00	 call	 ??0?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::ComPtr<IDXGISwapChain4>
  000f3	90		 npad	 1
  000f4	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000f8	48 83 c0 70	 add	 rax, 112		; 00000070H
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 ??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
  00104	90		 npad	 1
  00105	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00109	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0010f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  00116	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0011b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00122	41 b8 02 00 00
	00		 mov	 r8d, 2
  00128	ba 08 00 00 00	 mov	 edx, 8
  0012d	48 8b c8	 mov	 rcx, rax
  00130	e8 00 00 00 00	 call	 ??_L@YAXPEAX_K1P6AX0@Z2@Z
  00135	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00139	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  0013f	48 8b c8	 mov	 rcx, rax
  00142	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00147	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0014b	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00151	48 8b c8	 mov	 rcx, rax
  00154	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Fence@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Fence>::ComPtr<ID3D12Fence>
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.h

; 112  : 	uint64_t CurrentBackBufferIndex = 0;

  00159	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0015d	48 c7 80 b8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+184], 0

; 113  : 	SIZE_T RTHandleSize =		0;

  00168	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0016c	48 c7 80 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+192], 0

; 114  : 	SIZE_T DSHandleSize =		0;

  00177	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0017b	48 c7 80 c8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+200], 0

; 115  : 	SIZE_T CBSRUAHandleSize =	0;

  00186	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0018a	48 c7 80 d0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+208], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp

; 28   : {

  00195	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00199	48 05 08 01 00
	00		 add	 rax, 264		; 00000108H
  0019f	48 8b c8	 mov	 rcx, rax
  001a2	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@$0A@@?$unique_ptr@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@U?$default_delete@V?$D3D12UploadBufferResource@UD3D12PassConstants@@@@@std@@@std@@QEAA@XZ ; std::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > >::unique_ptr<D3D12UploadBufferResource<D3D12PassConstants>,std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> > ><std::default_delete<D3D12UploadBufferResource<D3D12PassConstants> >,0>

; 29   : 	m_backBufferFormat = DXGI_FORMAT_R8G8B8A8_UNORM;

  001a7	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  001ab	c7 80 98 00 00
	00 1c 00 00 00	 mov	 DWORD PTR [rax+152], 28

; 30   : 	m_depthStencilFormat = DXGI_FORMAT_D32_FLOAT; //DXGI_FORMAT_D16_UNORM

  001b5	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  001b9	c7 80 9c 00 00
	00 28 00 00 00	 mov	 DWORD PTR [rax+156], 40	; 00000028H

; 31   : }

  001c3	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  001c7	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  001cb	5d		 pop	 rbp
  001cc	c3		 ret	 0
??0D3D12Renderer@@QEAA@XZ ENDP				; D3D12Renderer::D3D12Renderer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UIDXGIFactory7@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIFactory7>::~ComPtr<IDXGIFactory7>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Device8@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Device8>::~ComPtr<ID3D12Device8>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$1@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UIDXGIAdapter1@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGIAdapter1>::~ComPtr<IDXGIAdapter1>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$2@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$3
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12CommandAllocator@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandAllocator>::~ComPtr<ID3D12CommandAllocator>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$3@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$4
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12GraphicsCommandList6@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList6>::~ComPtr<ID3D12GraphicsCommandList6>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$4@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$5
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 48	 add	 rcx, 72			; 00000048H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12CommandQueue@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12CommandQueue>::~ComPtr<ID3D12CommandQueue>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$5@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$6
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 50	 add	 rcx, 80			; 00000050H
  00012	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$6@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$7
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00012	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$7@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$8
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 60	 add	 rcx, 96			; 00000060H
  00012	e8 00 00 00 00	 call	 ??1?$unique_ptr@VDescriptorHeap@DirectX@@U?$default_delete@VDescriptorHeap@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >::~unique_ptr<DirectX::DescriptorHeap,std::default_delete<DirectX::DescriptorHeap> >
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$8@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$9
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 68	 add	 rcx, 104		; 00000068H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UIDXGISwapChain4@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain4>::~ComPtr<IDXGISwapChain4>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$9@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA PROC		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$10
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00012	e8 00 00 00 00	 call	 ??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$10@?0???0D3D12Renderer@@QEAA@XZ@4HA ENDP		; `D3D12Renderer::D3D12Renderer'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 80
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >, COMDAT

; 914  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 915  :     static_assert(__is_base_of(IUnknown, typename T::InterfaceType), "T has to derive from IUnknown");
; 916  :     return pp;

  0001b	48 8d 4d 50	 lea	 rcx, QWORD PTR pp$[rbp]
  0001f	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * *

; 917  : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 80
??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * *, COMDAT

; 151  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 152  :         return reinterpret_cast<void**>(this->ptr_->ReleaseAndGetAddressOf());

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf

; 153  :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z
_TEXT	SEGMENT
this$ = 80
ptr$ = 88
??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >, COMDAT

; 144  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 145  :     {
; 146  :          this->ptr_ = ptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR ptr$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 147  :     }

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00033	5d		 pop	 rbp
  00034	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf, COMDAT

; 406  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 407  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease

; 408  :         return &ptr_;

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 409  :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&, COMDAT

; 386  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         return Details::ComPtrRef<ComPtr<T>>(this);

  00020	48 8b 55 50	 mov	 rdx, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
  0002d	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 388  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->, COMDAT

; 380  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 381  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 382  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 80
other$ = 88
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>, COMDAT

; 258  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 257  :     ComPtr(const ComPtr& other) throw() : ptr_(other.ptr_)

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR other$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 259  :         InternalAddRef();

  0002e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00032	e8 00 00 00 00	 call	 ?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalAddRef

; 260  :     }

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@AEBV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>, COMDAT

; 244  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 243  :     ComPtr() throw() : ptr_(nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 245  :     }

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ
_TEXT	SEGMENT
this$ = 80
?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalAddRef, COMDAT

; 220  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 221  :         if (ptr_ != nullptr)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 15		 je	 SHORT $LN2@InternalAd

; 222  :         {
; 223  :             ptr_->AddRef();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	ff 50 08	 call	 QWORD PTR [rax+8]
  00039	90		 npad	 1
$LN2@InternalAd:

; 224  :         }
; 225  :     }

  0003a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?InternalAddRef@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEBAXXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalAddRef
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ
_TEXT	SEGMENT
this$ = 80
?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ PROC ; std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >::get, COMDAT

; 3300 :     _NODISCARD _CONSTEXPR23 pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3301 :         return _Mypair._Myval2;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3302 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ ENDP ; std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__param0$ = 88
__param1$ = 96
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >, COMDAT
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	4c 8b 45 60	 mov	 r8, QWORD PTR __param1$[rbp]
  0001d	48 8b 55 58	 mov	 rdx, QWORD PTR __param0$[rbp]
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
this$ = 80
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator->, COMDAT

; 241  :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__52656974_list
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :         return pointer_traits<pointer>::pointer_to(**this);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@SAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@2@AEAU32@@Z ; std::pointer_traits<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > *>::pointer_to

; 243  :     }

  0002c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
this$ = 80
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*, COMDAT

; 237  :     _NODISCARD reference operator*() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__52656974_list
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 238  :         return const_cast<reference>(_Mybase::operator*());

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*

; 239  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__param0$ = 88
__param1$ = 96
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >, COMDAT
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	4c 8b 45 60	 mov	 r8, QWORD PTR __param1$[rbp]
  0001d	48 8b 55 58	 mov	 rdx, QWORD PTR __param0$[rbp]
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ
_TEXT	SEGMENT
_Mycont$ = 0
this$ = 96
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*, COMDAT

; 143  :     _NODISCARD reference operator*() const noexcept {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__52656974_list
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 144  : #if _ITERATOR_DEBUG_LEVEL == 2
; 145  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

  0001e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00027	48 89 45 00	 mov	 QWORD PTR _Mycont$[rbp], rax
$LN4@operator:

; 146  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized list iterator");

  0002b	48 83 7d 00 00	 cmp	 QWORD PTR _Mycont$[rbp], 0
  00030	74 02		 je	 SHORT $LN7@operator
  00032	eb 6b		 jmp	 SHORT $LN15@operator
$LN7@operator:
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
  0003b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00040	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00047	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004c	45 33 c9	 xor	 r9d, r9d
  0004f	41 b8 92 00 00
	00		 mov	 r8d, 146		; 00000092H
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FN@EEGLACMD@C?3?2Program?5Files?2Microsoft?5Visu@
  0005c	b9 02 00 00 00	 mov	 ecx, 2
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 03		 jne	 SHORT $LN19@operator
  0006c	cc		 int	 3
  0006d	33 c0		 xor	 eax, eax
$LN19@operator:
  0006f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00078	41 b9 92 00 00
	00		 mov	 r9d, 146		; 00000092H
  0007e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LK@GCOFKPID@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00085	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  00093	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00099	33 c0		 xor	 eax, eax
  0009b	85 c0		 test	 eax, eax
  0009d	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	85 c0		 test	 eax, eax
  000a3	75 86		 jne	 SHORT $LN4@operator
$LN10@operator:

; 147  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end list iterator");

  000a5	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 8b 4d 00	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  000ad	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000b1	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000b5	74 02		 je	 SHORT $LN13@operator
  000b7	eb 6b		 jmp	 SHORT $LN17@operator
$LN13@operator:
  000b9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
  000c0	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000cc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	41 b8 93 00 00
	00		 mov	 r8d, 147		; 00000093H
  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FN@EEGLACMD@C?3?2Program?5Files?2Microsoft?5Visu@
  000e1	b9 02 00 00 00	 mov	 ecx, 2
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ec	83 f8 01	 cmp	 eax, 1
  000ef	75 03		 jne	 SHORT $LN20@operator
  000f1	cc		 int	 3
  000f2	33 c0		 xor	 eax, eax
$LN20@operator:
  000f4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000fd	41 b9 93 00 00
	00		 mov	 r9d, 147		; 00000093H
  00103	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LK@GCOFKPID@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0010a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00111	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  00118	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0011e	33 c0		 xor	 eax, eax
  00120	85 c0		 test	 eax, eax
  00122	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00124	33 c0		 xor	 eax, eax
  00126	85 c0		 test	 eax, eax
  00128	0f 85 77 ff ff
	ff		 jne	 $LN10@operator

; 148  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 149  : 
; 150  :         return this->_Ptr->_Myval;

  0012e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00132	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00136	48 83 c0 10	 add	 rax, 16

; 151  :     }

  0013a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0013e	5d		 pop	 rbp
  0013f	c3		 ret	 0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 80
_Pnode$ = 88
_Plist$ = 96
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>, COMDAT

; 37   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist) noexcept : _Ptr(_Pnode) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__52656974_list
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 58	 mov	 rcx, QWORD PTR _Pnode$[rbp]
  00036	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 38   :         this->_Adopt(_Plist);

  0003a	48 8b 55 60	 mov	 rdx, QWORD PTR _Plist$[rbp]
  0003e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 39   :     }

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xhash
;	COMDAT ??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z
_TEXT	SEGMENT
$T1 = 64
tv84 = 72
tv78 = 80
this$ = 112
__$ReturnUdt$ = 120
_Keyval$ = 128
??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::find<void>, COMDAT

; 1228 :     _NODISCARD iterator find(typename _Traits::template _Deduce_key<_Keyty> _Keyval) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	c7 45 40 00 00
	00 00		 mov	 DWORD PTR $T1[rbp], 0
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__696C8ED8_xhash
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1229 :         return _List._Make_iter(_Find(_Keyval, _Traitsobj(_Keyval)));

  0002f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 89 45 48	 mov	 QWORD PTR tv84[rbp], rax
  0003b	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 89 45 50	 mov	 QWORD PTR tv78[rbp], rax
  00043	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR _Keyval$[rbp]
  0004a	48 8b 4d 50	 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??$?RI@?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@QEBA_KAEBI@Z ; std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >::operator()<unsigned int>
  00053	4c 8b c0	 mov	 r8, rax
  00056	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR _Keyval$[rbp]
  0005d	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00061	e8 00 00 00 00	 call	 ??$_Find@I@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@AEBI_K@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::_Find<unsigned int>
  00066	4c 8b c0	 mov	 r8, rax
  00069	48 8b 55 78	 mov	 rdx, QWORD PTR __$ReturnUdt$[rbp]
  0006d	48 8b 4d 48	 mov	 rcx, QWORD PTR tv84[rbp]
  00071	e8 00 00 00 00	 call	 ?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z ; std::list<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >::_Make_iter
  00076	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  00079	83 c8 01	 or	 eax, 1
  0007c	89 45 40	 mov	 DWORD PTR $T1[rbp], eax
  0007f	48 8b 45 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1230 :     }

  00083	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00087	5d		 pop	 rbp
  00088	c3		 ret	 0
??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::find<void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
_Where$ = 96
?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z PROC ; std::list<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >::_Make_iter, COMDAT

; 1120 :     iterator _Make_iter(_Nodeptr _Where) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__52656974_list
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1121 :         return iterator(_Where, _STD addressof(_Mypair._Myval2));

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@YAPEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > const >
  00031	4c 8b c0	 mov	 r8, rax
  00034	48 8b 55 60	 mov	 rdx, QWORD PTR _Where$[rbp]
  00038	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0003c	e8 00 00 00 00	 call	 ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@1@@Z
  00041	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1122 :     }

  00045	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?_Make_iter@?$list@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@QEBA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@2@PEAU?$_List_node@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@PEAX@2@@Z ENDP ; std::list<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ PROC ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$hash@I@std@@V?$_Compressed_pair@U?$equal_to@I@std@@M$00@2@$00@std@@QEBAAEBU?$hash@I@2@XZ ENDP ; std::_Compressed_pair<std::hash<unsigned int>,std::_Compressed_pair<std::equal_to<unsigned int>,float,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ PROC ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$equal_to@I@std@@M$00@std@@QEBAAEBU?$equal_to@I@2@XZ ENDP ; std::_Compressed_pair<std::equal_to<unsigned int>,float,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??R?$equal_to@I@std@@QEBA_NAEBI0@Z
_TEXT	SEGMENT
tv65 = 64
this$ = 96
_Left$ = 104
_Right$ = 112
??R?$equal_to@I@std@@QEBA_NAEBI0@Z PROC			; std::equal_to<unsigned int>::operator(), COMDAT

; 392  :         noexcept(noexcept(_Fake_copy_init<bool>(_Left == _Right))) /* strengthened */ {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 393  :         return _Left == _Right;

  00025	48 8b 45 68	 mov	 rax, QWORD PTR _Left$[rbp]
  00029	48 8b 4d 70	 mov	 rcx, QWORD PTR _Right$[rbp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	75 09		 jne	 SHORT $LN3@operator
  00033	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv65[rbp], 1
  0003a	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003c	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv65[rbp], 0
$LN4@operator:
  00043	0f b6 45 40	 movzx	 eax, BYTE PTR tv65[rbp]

; 394  :     }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??R?$equal_to@I@std@@QEBA_NAEBI0@Z ENDP			; std::equal_to<unsigned int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ?_Do_hash@?$hash@I@std@@SA_KAEBI@Z
_TEXT	SEGMENT
_Keyval$ = 80
?_Do_hash@?$hash@I@std@@SA_KAEBI@Z PROC			; std::hash<unsigned int>::_Do_hash, COMDAT

; 2389 :     static size_t _Do_hash(const _Kty& _Keyval) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2390 :         return _Hash_representation(_Keyval);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Keyval$[rbp]
  0001f	e8 00 00 00 00	 call	 ??$_Hash_representation@I@std@@YA_KAEBI@Z ; std::_Hash_representation<unsigned int>

; 2391 :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?_Do_hash@?$hash@I@std@@SA_KAEBI@Z ENDP			; std::hash<unsigned int>::_Do_hash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z
_TEXT	SEGMENT
this$ = 80
_Keyval$ = 88
??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z PROC ; std::_Conditionally_enabled_hash<unsigned int,1>::operator(), COMDAT

; 2371 :         noexcept(noexcept(hash<_Kty>::_Do_hash(_Keyval))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2372 :         return hash<_Kty>::_Do_hash(_Keyval);

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Keyval$[rbp]
  00024	e8 00 00 00 00	 call	 ?_Do_hash@?$hash@I@std@@SA_KAEBI@Z ; std::hash<unsigned int>::_Do_hash

; 2373 :     }

  00029	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
??R?$_Conditionally_enabled_hash@I$00@std@@QEBA_KAEBI@Z ENDP ; std::_Conditionally_enabled_hash<unsigned int,1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Utils.h
;	COMDAT ?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z
_TEXT	SEGMENT
front$ = 64
position$ = 80
direction$ = 96
ViewMatrix$ = 112
ProjectionMatrix$ = 176
VP$ = 240
$T1 = 432
$T2 = 448
$T3 = 512
$T4 = 576
tv91 = 640
tv69 = 640
__$ReturnUdt$ = 688
camera$ = 696
?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z PROC ; D3DUtil::GetViewProjMatrix, COMDAT

; 98   : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec b0 02
	00 00		 sub	 rsp, 688		; 000002b0H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__466C4D22_D3D12Utils@h
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   : 		XMFLOAT4X4 ViewProj = {};

  00025	48 8b bd b0 02
	00 00		 mov	 rdi, QWORD PTR __$ReturnUdt$[rbp]
  0002c	33 c0		 xor	 eax, eax
  0002e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00033	f3 aa		 rep stosb

; 100  : 		if (!camera)

  00035	48 83 bd b8 02
	00 00 00	 cmp	 QWORD PTR camera$[rbp], 0
  0003d	75 0c		 jne	 SHORT $LN2@GetViewPro

; 101  : 			return ViewProj;

  0003f	48 8b 85 b0 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00046	e9 29 02 00 00	 jmp	 $LN1@GetViewPro
$LN2@GetViewPro:

; 102  : 
; 103  : 		//camera->m_rotation.z = 130.f;
; 104  : 
; 105  : 		XMFLOAT3 front;
; 106  : 		front.x = -(cos(XMConvertToRadians(camera->m_rotation.z)) * cos(XMConvertToRadians(camera->m_rotation.y)));

  0004b	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  00052	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [rax+20]
  00057	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  0005c	e8 00 00 00 00	 call	 ?cos@@YAMM@Z		; cos
  00061	f3 0f 11 85 80
	02 00 00	 movss	 DWORD PTR tv69[rbp], xmm0
  00069	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  00070	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [rax+16]
  00075	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  0007a	e8 00 00 00 00	 call	 ?cos@@YAMM@Z		; cos
  0007f	f3 0f 10 8d 80
	02 00 00	 movss	 xmm1, DWORD PTR tv69[rbp]
  00087	f3 0f 59 c8	 mulss	 xmm1, xmm0
  0008b	0f 28 c1	 movaps	 xmm0, xmm1
  0008e	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00095	f3 0f 11 45 40	 movss	 DWORD PTR front$[rbp], xmm0

; 107  : 		front.y = -sin(XMConvertToRadians(camera->m_rotation.y));

  0009a	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  000a1	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [rax+16]
  000a6	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  000ab	e8 00 00 00 00	 call	 ?sin@@YAMM@Z		; sin
  000b0	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000b7	f3 0f 11 45 44	 movss	 DWORD PTR front$[rbp+4], xmm0

; 108  : 		front.z = sin(XMConvertToRadians(camera->m_rotation.z))

  000bc	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  000c3	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [rax+20]
  000c8	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  000cd	e8 00 00 00 00	 call	 ?sin@@YAMM@Z		; sin
  000d2	f3 0f 11 85 80
	02 00 00	 movss	 DWORD PTR tv91[rbp], xmm0
  000da	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  000e1	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [rax+16]
  000e6	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  000eb	e8 00 00 00 00	 call	 ?cos@@YAMM@Z		; cos
  000f0	f3 0f 10 8d 80
	02 00 00	 movss	 xmm1, DWORD PTR tv91[rbp]
  000f8	f3 0f 59 c8	 mulss	 xmm1, xmm0
  000fc	0f 28 c1	 movaps	 xmm0, xmm1
  000ff	f3 0f 11 45 48	 movss	 DWORD PTR front$[rbp+8], xmm0

; 109  : 			* cos(XMConvertToRadians(camera->m_rotation.y));
; 110  : 
; 111  : 		const XMVECTOR position = XMLoadFloat3(&camera->m_position);

  00104	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  0010b	48 8b c8	 mov	 rcx, rax
  0010e	e8 00 00 00 00	 call	 ?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ; DirectX::XMLoadFloat3
  00113	0f 29 45 50	 movaps	 XMMWORD PTR position$[rbp], xmm0

; 112  : 		const XMVECTOR direction = XMLoadFloat3(&front);

  00117	48 8d 4d 40	 lea	 rcx, QWORD PTR front$[rbp]
  0011b	e8 00 00 00 00	 call	 ?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ; DirectX::XMLoadFloat3
  00120	0f 29 45 60	 movaps	 XMMWORD PTR direction$[rbp], xmm0

; 113  : 		XMMATRIX ViewMatrix = XMMatrixLookToLH(position, direction, XMVectorSet(0, 1, 0, 0));

  00124	0f 57 db	 xorps	 xmm3, xmm3
  00127	0f 57 d2	 xorps	 xmm2, xmm2
  0012a	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00132	0f 57 c0	 xorps	 xmm0, xmm0
  00135	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  0013a	0f 29 85 b0 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00141	0f 28 95 b0 01
	00 00		 movaps	 xmm2, XMMWORD PTR $T1[rbp]
  00148	0f 28 4d 60	 movaps	 xmm1, XMMWORD PTR direction$[rbp]
  0014c	0f 28 45 50	 movaps	 xmm0, XMMWORD PTR position$[rbp]
  00150	e8 00 00 00 00	 call	 ?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z ; DirectX::XMMatrixLookToLH
  00155	0f 11 9d f0 01
	00 00		 movups	 XMMWORD PTR $T2[rbp+48], xmm3
  0015c	0f 11 95 e0 01
	00 00		 movups	 XMMWORD PTR $T2[rbp+32], xmm2
  00163	0f 11 8d d0 01
	00 00		 movups	 XMMWORD PTR $T2[rbp+16], xmm1
  0016a	0f 11 85 c0 01
	00 00		 movups	 XMMWORD PTR $T2[rbp], xmm0
  00171	48 8d 45 70	 lea	 rax, QWORD PTR ViewMatrix$[rbp]
  00175	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0017c	48 8b f8	 mov	 rdi, rax
  0017f	48 8b f1	 mov	 rsi, rcx
  00182	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00187	f3 a4		 rep movsb

; 114  : 
; 115  : 		XMMATRIX ProjectionMatrix = XMMatrixPerspectiveFovLH(1.48, camera->m_aspectRatio,

  00189	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@42c80000
  00191	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3dcccccd
  00199	48 8b 85 b8 02
	00 00		 mov	 rax, QWORD PTR camera$[rbp]
  001a0	f3 0f 10 48 1c	 movss	 xmm1, DWORD PTR [rax+28]
  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fbd70a4
  001ad	e8 00 00 00 00	 call	 ?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixPerspectiveFovLH
  001b2	0f 11 9d 30 02
	00 00		 movups	 XMMWORD PTR $T3[rbp+48], xmm3
  001b9	0f 11 95 20 02
	00 00		 movups	 XMMWORD PTR $T3[rbp+32], xmm2
  001c0	0f 11 8d 10 02
	00 00		 movups	 XMMWORD PTR $T3[rbp+16], xmm1
  001c7	0f 11 85 00 02
	00 00		 movups	 XMMWORD PTR $T3[rbp], xmm0
  001ce	48 8d 85 b0 00
	00 00		 lea	 rax, QWORD PTR ProjectionMatrix$[rbp]
  001d5	48 8d 8d 00 02
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  001dc	48 8b f8	 mov	 rdi, rax
  001df	48 8b f1	 mov	 rsi, rcx
  001e2	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  001e7	f3 a4		 rep movsb

; 116  : 			0.1f, 100.f);
; 117  : 		XMMATRIX VP = XMMatrixMultiply(ViewMatrix, ProjectionMatrix);

  001e9	48 8d 95 b0 00
	00 00		 lea	 rdx, QWORD PTR ProjectionMatrix$[rbp]
  001f0	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR ViewMatrix$[rbp]
  001f4	0f 28 8d 80 00
	00 00		 movaps	 xmm1, XMMWORD PTR ViewMatrix$[rbp+16]
  001fb	0f 28 95 90 00
	00 00		 movaps	 xmm2, XMMWORD PTR ViewMatrix$[rbp+32]
  00202	0f 28 9d a0 00
	00 00		 movaps	 xmm3, XMMWORD PTR ViewMatrix$[rbp+48]
  00209	e8 00 00 00 00	 call	 ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ; DirectX::XMMatrixMultiply
  0020e	0f 11 9d 70 02
	00 00		 movups	 XMMWORD PTR $T4[rbp+48], xmm3
  00215	0f 11 95 60 02
	00 00		 movups	 XMMWORD PTR $T4[rbp+32], xmm2
  0021c	0f 11 8d 50 02
	00 00		 movups	 XMMWORD PTR $T4[rbp+16], xmm1
  00223	0f 11 85 40 02
	00 00		 movups	 XMMWORD PTR $T4[rbp], xmm0
  0022a	48 8d 85 f0 00
	00 00		 lea	 rax, QWORD PTR VP$[rbp]
  00231	48 8d 8d 40 02
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00238	48 8b f8	 mov	 rdi, rax
  0023b	48 8b f1	 mov	 rsi, rcx
  0023e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00243	f3 a4		 rep movsb

; 118  : 
; 119  : 		XMStoreFloat4x4(&ViewProj, VP);

  00245	0f 28 85 f0 00
	00 00		 movaps	 xmm0, XMMWORD PTR VP$[rbp]
  0024c	0f 28 8d 00 01
	00 00		 movaps	 xmm1, XMMWORD PTR VP$[rbp+16]
  00253	0f 28 95 10 01
	00 00		 movaps	 xmm2, XMMWORD PTR VP$[rbp+32]
  0025a	0f 28 9d 20 01
	00 00		 movaps	 xmm3, XMMWORD PTR VP$[rbp+48]
  00261	48 8b 8d b0 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00268	e8 00 00 00 00	 call	 ?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4

; 120  : 		return ViewProj;

  0026d	48 8b 85 b0 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetViewPro:

; 121  : 	}

  00274	48 8d a5 90 02
	00 00		 lea	 rsp, QWORD PTR [rbp+656]
  0027b	5f		 pop	 rdi
  0027c	5e		 pop	 rsi
  0027d	5d		 pop	 rbp
  0027e	c3		 ret	 0
?GetViewProjMatrix@D3DUtil@@SA?AUXMFLOAT4X4@DirectX@@PEAUD3D12Camera@@@Z ENDP ; D3DUtil::GetViewProjMatrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Utils.h
;	COMDAT ?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
tv81 = 96
id$ = 128
?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z PROC ; D3DUtil::GetPipeline, COMDAT

; 54   : 	static D3D12PipelineShaderRootSignature* GetPipeline(UINT id) { return Pipelines.find(id)->second.get(); }

$LN4:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__466C4D22_D3D12Utils@h
  00018	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001d	4c 8d 85 80 00
	00 00		 lea	 r8, QWORD PTR id$[rbp]
  00024	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?Pipelines@D3DUtil@@0V?$unordered_map@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@U?$hash@I@2@U?$equal_to@I@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@@std@@A ; D3DUtil::Pipelines
  0002f	e8 00 00 00 00	 call	 ??$find@X@?$_Hash@V?$_Umap_traits@IV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@2@V?$allocator@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@1@AEBI@Z ; std::_Hash<std::_Umap_traits<unsigned int,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > >,0> >::find<void>
  00034	48 89 45 60	 mov	 QWORD PTR tv81[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR tv81[rbp]
  0003c	e8 00 00 00 00	 call	 ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@1@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> > > > > >::operator->
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ?get@?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@QEBAPEAVD3D12PipelineShaderRootSignature@@XZ ; std::unique_ptr<D3D12PipelineShaderRootSignature,std::default_delete<D3D12PipelineShaderRootSignature> >::get
  0004d	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00051	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00055	e8 00 00 00 00	 call	 ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIV?$unique_ptr@VD3D12PipelineShaderRootSignature@@U?$default_delete@VD3D12PipelineShaderRootSignature@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
  0005a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  0005e	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
?GetPipeline@D3DUtil@@SAPEAVD3D12PipelineShaderRootSignature@@I@Z ENDP ; D3DUtil::GetPipeline
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Utils.h
;	COMDAT ?InitPipelines@D3DUtil@@SAXXZ
_TEXT	SEGMENT
i$1 = 0
?InitPipelines@D3DUtil@@SAXXZ PROC			; D3DUtil::InitPipelines, COMDAT

; 47   : 	{

$LN6:
  00000	40 55		 push	 rbp
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__466C4D22_D3D12Utils@h
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 48   : 		for (size_t i = 0; i < eShaderType::Size; i++)

  00017	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR i$1[rbp], 0
  0001f	eb 0b		 jmp	 SHORT $LN4@InitPipeli
$LN2@InitPipeli:
  00021	48 8b 45 00	 mov	 rax, QWORD PTR i$1[rbp]
  00025	48 ff c0	 inc	 rax
  00028	48 89 45 00	 mov	 QWORD PTR i$1[rbp], rax
$LN4@InitPipeli:
  0002c	48 83 7d 00 02	 cmp	 QWORD PTR i$1[rbp], 2
  00031	73 0a		 jae	 SHORT $LN3@InitPipeli

; 49   : 		{
; 50   : 			CreatePipeline(static_cast<eShaderType>(i));

  00033	8b 4d 00	 mov	 ecx, DWORD PTR i$1[rbp]
  00036	e8 00 00 00 00	 call	 ?CreatePipeline@D3DUtil@@SAIW4eShaderType@@@Z ; D3DUtil::CreatePipeline

; 51   : 		}

  0003b	eb e4		 jmp	 SHORT $LN2@InitPipeli
$LN3@InitPipeli:

; 52   : 	}

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?InitPipelines@D3DUtil@@SAXXZ ENDP			; D3DUtil::InitPipelines
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Utils.h
;	COMDAT ?CalcConstantBufferByteSize@D3DUtil@@SAII@Z
_TEXT	SEGMENT
byteSize$ = 80
?CalcConstantBufferByteSize@D3DUtil@@SAII@Z PROC	; D3DUtil::CalcConstantBufferByteSize, COMDAT

; 37   : 	{

$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__466C4D22_D3D12Utils@h
  00015	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 38   : 		return (byteSize + 255) & ~255;

  0001a	8b 45 50	 mov	 eax, DWORD PTR byteSize$[rbp]
  0001d	05 ff 00 00 00	 add	 eax, 255		; 000000ffH
  00022	25 00 ff ff ff	 and	 eax, -256		; ffffff00H

; 39   : 	}

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?CalcConstantBufferByteSize@D3DUtil@@SAII@Z ENDP	; D3DUtil::CalcConstantBufferByteSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\cmath
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 80
?sin@@YAMM@Z PROC					; sin, COMDAT

; 256  : _NODISCARD _Check_return_ inline float sin(_In_ float _Xx) noexcept /* strengthened */ {

$LN3:
  00000	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00006	55		 push	 rbp
  00007	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__06C34EBE_cmath
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 257  :     return _CSTD sinf(_Xx);

  0001c	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR _Xx$[rbp]
  00021	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_sinf

; 258  : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\cmath
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 80
?cos@@YAMM@Z PROC					; cos, COMDAT

; 88   : _NODISCARD _Check_return_ inline float cos(_In_ float _Xx) noexcept /* strengthened */ {

$LN3:
  00000	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00006	55		 push	 rbp
  00007	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__06C34EBE_cmath
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 89   :     return _CSTD cosf(_Xx);

  0001c	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR _Xx$[rbp]
  00021	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_cosf

; 90   : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
_Pos$ = 104
??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[], COMDAT

; 1891 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1892 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax
$LN4@operator:

; 1893 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1894 :         _STL_VERIFY(

  0002b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00037	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003b	48 2b c1	 sub	 rax, rcx
  0003e	48 c1 f8 03	 sar	 rax, 3
  00042	48 39 45 68	 cmp	 QWORD PTR _Pos$[rbp], rax
  00046	73 02		 jae	 SHORT $LN7@operator
  00048	eb 6b		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00051	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	45 33 c9	 xor	 r9d, r9d
  00065	41 b8 67 07 00
	00		 mov	 r8d, 1895		; 00000767H
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  00072	b9 02 00 00 00	 mov	 ecx, 2
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN11@operator
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN11@operator:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 67 07 00
	00		 mov	 r9d, 1895		; 00000767H
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	75 95		 jne	 SHORT $LN7@operator
$LN9@operator:
  000b5	33 c0		 xor	 eax, eax
  000b7	85 c0		 test	 eax, eax
  000b9	0f 85 6c ff ff
	ff		 jne	 $LN4@operator

; 1895 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1896 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1897 : 
; 1898 :         return _My_data._Myfirst[_Pos];

  000bf	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000c3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c7	48 8b 4d 68	 mov	 rcx, QWORD PTR _Pos$[rbp]
  000cb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 1899 :     }

  000cf	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000d3	5d		 pop	 rbp
  000d4	c3		 ret	 0
??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size, COMDAT

; 1876 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1877 :         auto& _My_data = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1878 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0002f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00033	48 2b c1	 sub	 rax, rcx
  00036	48 c1 f8 03	 sar	 rax, 3

; 1879 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
;	COMDAT ?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z
_TEXT	SEGMENT
tv64 = 64
tv76 = 72
tv75 = 80
this$ = 112
index$ = 120
?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z PROC ; FWindowsWindowManager::GetWindow, COMDAT

; 116  : 	FWindowsWindow* GetWindow(UINT index) { return index > windows.size() ? nullptr : windows[index]; }

$LN5:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7671EFE0_WindowsWindow@h
  0001d	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00022	8b 45 78	 mov	 eax, DWORD PTR index$[rbp]
  00025	48 89 45 40	 mov	 QWORD PTR tv64[rbp], rax
  00029	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002d	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00031	e8 00 00 00 00	 call	 ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
  00036	48 8b 4d 40	 mov	 rcx, QWORD PTR tv64[rbp]
  0003a	48 3b c8	 cmp	 rcx, rax
  0003d	76 0a		 jbe	 SHORT $LN3@GetWindow
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv76[rbp], 0
  00047	eb 21		 jmp	 SHORT $LN4@GetWindow
$LN3@GetWindow:
  00049	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00051	48 89 45 50	 mov	 QWORD PTR tv75[rbp], rax
  00055	8b 45 78	 mov	 eax, DWORD PTR index$[rbp]
  00058	8b d0		 mov	 edx, eax
  0005a	48 8b 4d 50	 mov	 rcx, QWORD PTR tv75[rbp]
  0005e	e8 00 00 00 00	 call	 ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
  00063	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00066	48 89 45 48	 mov	 QWORD PTR tv76[rbp], rax
$LN4@GetWindow:
  0006a	48 8b 45 48	 mov	 rax, QWORD PTR tv76[rbp]
  0006e	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
?GetWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@I@Z ENDP ; FWindowsWindowManager::GetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
;	COMDAT ?GetRefreshRate@FWindowsWindow@@QEAAIXZ
_TEXT	SEGMENT
this$ = 80
?GetRefreshRate@FWindowsWindow@@QEAAIXZ PROC		; FWindowsWindow::GetRefreshRate, COMDAT

; 58   : 	UINT GetRefreshRate() { return 75; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7671EFE0_WindowsWindow@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b8 4b 00 00 00	 mov	 eax, 75			; 0000004bH
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?GetRefreshRate@FWindowsWindow@@QEAAIXZ ENDP		; FWindowsWindow::GetRefreshRate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
;	COMDAT ?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ
_TEXT	SEGMENT
this$ = 80
?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ PROC	; FWindowsWindow::GetHandle, COMDAT

; 54   : 	HWND GetHandle() { return m_Wnd; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7671EFE0_WindowsWindow@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?GetHandle@FWindowsWindow@@QEAAPEAUHWND__@@XZ ENDP	; FWindowsWindow::GetHandle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
;	COMDAT ?GetHeight@FWindowsWindow@@QEAAIXZ
_TEXT	SEGMENT
this$ = 80
?GetHeight@FWindowsWindow@@QEAAIXZ PROC			; FWindowsWindow::GetHeight, COMDAT

; 50   : 	UINT GetHeight() { return height; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7671EFE0_WindowsWindow@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?GetHeight@FWindowsWindow@@QEAAIXZ ENDP			; FWindowsWindow::GetHeight
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
;	COMDAT ?GetWitdh@FWindowsWindow@@QEAAIXZ
_TEXT	SEGMENT
this$ = 80
?GetWitdh@FWindowsWindow@@QEAAIXZ PROC			; FWindowsWindow::GetWitdh, COMDAT

; 49   : 	UINT GetWitdh() { return width; }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7671EFE0_WindowsWindow@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?GetWitdh@FWindowsWindow@@QEAAIXZ ENDP			; FWindowsWindow::GetWitdh
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z
_TEXT	SEGMENT
tv67 = 64
a$ = 96
__formal$ = 104
??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z PROC ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>, COMDAT

; 822  : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 823  :     return a.Get() != nullptr;

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR a$[rbp]
  00024	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::Get
  00029	48 85 c0	 test	 rax, rax
  0002c	74 09		 je	 SHORT $LN3@operator
  0002e	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv67[rbp], 1
  00035	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00037	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv67[rbp], 0
$LN4@operator:
  0003e	0f b6 45 40	 movzx	 eax, BYTE PTR tv67[rbp]

; 824  : }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z ENDP ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z PROC		; DirectX::DescriptorHeap::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1DescriptorHeap@DirectX@@QEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_GDescriptorHeap@DirectX@@QEAAPEAXI@Z ENDP		; DirectX::DescriptorHeap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1DescriptorHeap@DirectX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1DescriptorHeap@DirectX@@QEAA@XZ PROC			; DirectX::DescriptorHeap::~DescriptorHeap, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::~ComPtr<ID3D12DescriptorHeap>
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1DescriptorHeap@DirectX@@QEAA@XZ ENDP			; DirectX::DescriptorHeap::~DescriptorHeap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ
_TEXT	SEGMENT
this$ = 80
?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::Get, COMDAT

; 369  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 370  :         return ptr_;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 371  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::~ComPtr<ID3D12DescriptorHeap>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::~ComPtr<ID3D12DescriptorHeap>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\ThirdParty\DTK12\DescriptorHeap.h
;	COMDAT ?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ
_TEXT	SEGMENT
this$ = 80
?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ PROC ; DirectX::DescriptorHeap::Heap, COMDAT

; 127  :         ID3D12DescriptorHeap* Heap() const noexcept { return m_pHeap.Get(); }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EEE0DC84_DescriptorHeap@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12DescriptorHeap@@@WRL@Microsoft@@QEBAPEAUID3D12DescriptorHeap@@XZ ; Microsoft::WRL::ComPtr<ID3D12DescriptorHeap>::Get
  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?Heap@DescriptorHeap@DirectX@@QEBAPEAUID3D12DescriptorHeap@@XZ ENDP ; DirectX::DescriptorHeap::Heap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\ThirdParty\DTK12\DescriptorHeap.h
;	COMDAT ?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z
_TEXT	SEGMENT
$T1 = 72
this$ = 112
__$ReturnUdt$ = 120
index$ = 128
?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z PROC ; DirectX::DescriptorHeap::GetCpuHandle, COMDAT

; 111  :         {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EEE0DC84_DescriptorHeap@h
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 112  :             assert(m_pHeap != nullptr);

  00028	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002c	33 d2		 xor	 edx, edx
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	75 1c		 jne	 SHORT $LN4@GetCpuHand
  0003d	41 b8 70 00 00
	00		 mov	 r8d, 112		; 00000070H
  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00057	33 c0		 xor	 eax, eax
$LN4@GetCpuHand:

; 113  :             if (index >= m_desc.NumDescriptors)

  00059	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0005d	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  00060	48 39 85 80 00
	00 00		 cmp	 QWORD PTR index$[rbp], rax
  00067	72 20		 jb	 SHORT $LN2@GetCpuHand

; 114  :             {
; 115  :                 throw std::out_of_range("D3DX12_CPU_DESCRIPTOR_HANDLE");

  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BN@OLKEIKPG@D3DX12_CPU_DESCRIPTOR_HANDLE@
  00070	48 8d 4d 48	 lea	 rcx, QWORD PTR $T1[rbp]
  00074	e8 00 00 00 00	 call	 ??0out_of_range@std@@QEAA@PEBD@Z ; std::out_of_range::out_of_range
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVout_of_range@std@@
  00080	48 8d 4d 48	 lea	 rcx, QWORD PTR $T1[rbp]
  00084	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@GetCpuHand:

; 116  :             }
; 117  : 
; 118  :             D3D12_CPU_DESCRIPTOR_HANDLE handle;
; 119  :             handle.ptr = static_cast<SIZE_T>(m_hCPU.ptr + UINT64(index) * UINT64(m_increment));

  00089	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0008d	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00090	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR index$[rbp]
  00097	48 0f af c8	 imul	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000a2	48 03 41 18	 add	 rax, QWORD PTR [rcx+24]
  000a6	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000aa	48 89 01	 mov	 QWORD PTR [rcx], rax

; 120  :             return handle;

  000ad	48 8b 45 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN3@GetCpuHand:

; 121  :         }

  000b1	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000b5	5d		 pop	 rbp
  000b6	c3		 ret	 0
?GetCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@_K@Z ENDP ; DirectX::DescriptorHeap::GetCpuHandle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\ThirdParty\DTK12\DescriptorHeap.h
;	COMDAT ?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z
_TEXT	SEGMENT
$T1 = 72
this$ = 112
__$ReturnUdt$ = 120
index$ = 128
?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z PROC ; DirectX::DescriptorHeap::GetGpuHandle, COMDAT

; 97   :         {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EEE0DC84_DescriptorHeap@h
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 98   :             assert(m_pHeap != nullptr);

  00028	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002c	33 d2		 xor	 edx, edx
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	75 1c		 jne	 SHORT $LN4@GetGpuHand
  0003d	41 b8 62 00 00
	00		 mov	 r8d, 98			; 00000062H
  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00057	33 c0		 xor	 eax, eax
$LN4@GetGpuHand:

; 99   :             if (index >= m_desc.NumDescriptors)

  00059	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0005d	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  00060	48 39 85 80 00
	00 00		 cmp	 QWORD PTR index$[rbp], rax
  00067	72 20		 jb	 SHORT $LN2@GetGpuHand

; 100  :             {
; 101  :                 throw std::out_of_range("D3DX12_GPU_DESCRIPTOR_HANDLE");

  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BN@LHAFBJPG@D3DX12_GPU_DESCRIPTOR_HANDLE@
  00070	48 8d 4d 48	 lea	 rcx, QWORD PTR $T1[rbp]
  00074	e8 00 00 00 00	 call	 ??0out_of_range@std@@QEAA@PEBD@Z ; std::out_of_range::out_of_range
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVout_of_range@std@@
  00080	48 8d 4d 48	 lea	 rcx, QWORD PTR $T1[rbp]
  00084	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@GetGpuHand:

; 102  :             }
; 103  :             assert(m_desc.Flags & D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE);

  00089	ba 01 00 00 00	 mov	 edx, 1
  0008e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00092	8b 48 10	 mov	 ecx, DWORD PTR [rax+16]
  00095	e8 00 00 00 00	 call	 ??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z ; operator&
  0009a	85 c0		 test	 eax, eax
  0009c	75 1c		 jne	 SHORT $LN5@GetGpuHand
  0009e	41 b8 67 00 00
	00		 mov	 r8d, 103		; 00000067H
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@
  000ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HC@EFHFIDCI@?$AAm?$AA_?$AAd?$AAe?$AAs?$AAc?$AA?4?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?$CG?$AA?5@
  000b2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b8	33 c0		 xor	 eax, eax
$LN5@GetGpuHand:

; 104  : 
; 105  :             D3D12_GPU_DESCRIPTOR_HANDLE handle;
; 106  :             handle.ptr = m_hGPU.ptr + UINT64(index) * UINT64(m_increment);

  000ba	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000be	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  000c1	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR index$[rbp]
  000c8	48 0f af c8	 imul	 rcx, rax
  000cc	48 8b c1	 mov	 rax, rcx
  000cf	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000d3	48 03 41 20	 add	 rax, QWORD PTR [rcx+32]
  000d7	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000db	48 89 01	 mov	 QWORD PTR [rcx], rax

; 107  :             return handle;

  000de	48 8b 45 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN3@GetGpuHand:

; 108  :         }

  000e2	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000e6	5d		 pop	 rbp
  000e7	c3		 ret	 0
?GetGpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_GPU_DESCRIPTOR_HANDLE@@_K@Z ENDP ; DirectX::DescriptorHeap::GetGpuHandle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\ThirdParty\DTK12\DescriptorHeap.h
;	COMDAT ?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ PROC ; DirectX::DescriptorHeap::GetFirstCpuHandle, COMDAT

; 91   :         {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EEE0DC84_DescriptorHeap@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 92   :             assert(m_pHeap != nullptr);

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	33 d2		 xor	 edx, edx
  00026	48 8b c8	 mov	 rcx, rax
  00029	e8 00 00 00 00	 call	 ??$?9UID3D12DescriptorHeap@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UID3D12DescriptorHeap@@@01@$$T@Z ; Microsoft::WRL::operator!=<ID3D12DescriptorHeap>
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 1c		 jne	 SHORT $LN3@GetFirstCp
  00035	41 b8 5c 00 00
	00		 mov	 r8d, 92			; 0000005cH
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@IBLCMEON@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAn?$AAa?$AAh?$AAm?$AAu?$AA?2@
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@OBBODHE@?$AAm?$AA_?$AAp?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl@
  00049	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0004f	33 c0		 xor	 eax, eax
$LN3@GetFirstCp:

; 93   :             return m_hCPU;

  00051	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00059	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0005d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00060	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 94   :         }

  00064	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
?GetFirstCpuHandle@DescriptorHeap@DirectX@@QEBA?AUD3D12_CPU_DESCRIPTOR_HANDLE@@XZ ENDP ; DirectX::DescriptorHeap::GetFirstCpuHandle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gout_of_range@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gout_of_range@std@@UEAAPEAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1out_of_range@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gout_of_range@std@@UEAAPEAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0out_of_range@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0out_of_range@std@@QEAA@AEBV01@@Z PROC		; std::out_of_range::out_of_range, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0logic_error@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7out_of_range@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0out_of_range@std@@QEAA@AEBV01@@Z ENDP		; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1out_of_range@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1out_of_range@std@@UEAA@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1logic_error@std@@UEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1out_of_range@std@@UEAA@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\stdexcept
;	COMDAT ??0out_of_range@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0out_of_range@std@@QEAA@PEBD@Z PROC			; std::out_of_range::out_of_range, COMDAT

; 90   :     explicit out_of_range(const char* _Message) : _Mybase(_Message) {}

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A4A32444_stdexcept
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ??0logic_error@std@@QEAA@PEBD@Z ; std::logic_error::logic_error
  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7out_of_range@std@@6B@
  00038	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
??0out_of_range@std@@QEAA@PEBD@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Glogic_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Glogic_error@std@@UEAAPEAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1logic_error@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Glogic_error@std@@UEAAPEAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0logic_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0logic_error@std@@QEAA@AEBV01@@Z PROC			; std::logic_error::logic_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7logic_error@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0logic_error@std@@QEAA@AEBV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1logic_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1logic_error@std@@UEAA@XZ PROC			; std::logic_error::~logic_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1logic_error@std@@UEAA@XZ ENDP			; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\stdexcept
;	COMDAT ??0logic_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0logic_error@std@@QEAA@PEBD@Z PROC			; std::logic_error::logic_error, COMDAT

; 26   :     explicit logic_error(const char* _Message) : _Mybase(_Message) {}

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A4A32444_stdexcept
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBD@Z ; std::exception::exception
  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7logic_error@std@@6B@
  00038	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
??0logic_error@std@@QEAA@PEBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4878 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4879 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4880 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4874 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4875 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4876 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 64
tv74 = 72
this$ = 96
_Requested$ = 104
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4739 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4740 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00029	48 89 45 40	 mov	 QWORD PTR tv76[rbp], rax
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00035	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  00039	4c 8b 45 40	 mov	 r8, QWORD PTR tv76[rbp]
  0003d	48 8b 55 48	 mov	 rdx, QWORD PTR tv74[rbp]
  00041	48 8b 4d 68	 mov	 rcx, QWORD PTR _Requested$[rbp]
  00045	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4741 :     }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 0
$T1 = 72
_Requested$ = 96
_Old$ = 104
_Max$ = 112
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4726 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4727 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _Requested$[rbp]
  00029	48 83 c8 0f	 or	 rax, 15
  0002d	48 89 45 00	 mov	 QWORD PTR _Masked$[rbp], rax

; 4728 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00035	48 39 45 00	 cmp	 QWORD PTR _Masked$[rbp], rax
  00039	76 06		 jbe	 SHORT $LN2@Calculate_

; 4729 :             return _Max;

  0003b	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  0003f	eb 50		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4730 :         }
; 4731 : 
; 4732 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00041	33 d2		 xor	 edx, edx
  00043	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  00047	b9 02 00 00 00	 mov	 ecx, 2
  0004c	48 f7 f1	 div	 rcx
  0004f	48 8b 4d 70	 mov	 rcx, QWORD PTR _Max$[rbp]
  00053	48 2b c8	 sub	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 39 45 68	 cmp	 QWORD PTR _Old$[rbp], rax
  0005d	76 06		 jbe	 SHORT $LN3@Calculate_

; 4733 :             return _Max;

  0005f	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00063	eb 2c		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4734 :         }
; 4735 : 
; 4736 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00065	33 d2		 xor	 edx, edx
  00067	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	48 f7 f1	 div	 rcx
  00073	48 8b 4d 68	 mov	 rcx, QWORD PTR _Old$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00081	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00085	48 8d 4d 00	 lea	 rcx, QWORD PTR _Masked$[rbp]
  00089	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4737 :     }

  00091	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 0
_Storage_max$ = 8
$T1 = 80
$T2 = 88
$T3 = 96
this$ = 128
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 4141 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4142 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002a	48 8b c8	 mov	 rcx, rax
  0002d	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00032	48 89 45 00	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 4143 :         const size_type _Storage_max = // can always store small string

  00036	48 c7 45 50 10
	00 00 00	 mov	 QWORD PTR $T1[rbp], 16
  0003e	48 8d 55 50	 lea	 rdx, QWORD PTR $T1[rbp]
  00042	48 8d 4d 00	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00046	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 45 08	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 4144 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 4145 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00056	48 ff c8	 dec	 rax
  00059	48 89 45 58	 mov	 QWORD PTR $T2[rbp], rax
  0005d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00062	48 89 45 60	 mov	 QWORD PTR $T3[rbp], rax
  00066	48 8d 55 58	 lea	 rdx, QWORD PTR $T2[rbp]
  0006a	48 8d 4d 60	 lea	 rcx, QWORD PTR $T3[rbp]
  0006e	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 4146 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 4147 :         );
; 4148 :     }

  00076	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Ptr$ = 96
_Size$ = 104
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes, COMDAT

; 2591 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2592 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2593 :         // but likely more impactful to throughput.
; 2594 : #if _HAS_CXX20
; 2595 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 37		 je	 SHORT $LN5@Start_elem

; 2596 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {

  0002c	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00034	eb 0b		 jmp	 SHORT $LN4@Start_elem
$LN2@Start_elem:
  00036	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Start_elem:
  00041	48 8b 45 68	 mov	 rax, QWORD PTR _Size$[rbp]
  00045	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00049	73 18		 jae	 SHORT $LN3@Start_elem

; 2597 :                 _STD construct_at(_Ptr + _Idx);

  0004b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0004f	48 8b 4d 60	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00053	48 03 c8	 add	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ; std::construct_at<char,0>

; 2598 :             }

  00061	eb d3		 jmp	 SHORT $LN2@Start_elem
$LN3@Start_elem:
$LN5@Start_elem:

; 2599 :         }
; 2600 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2601 :         (void) _Ptr;
; 2602 :         (void) _Size;
; 2603 : #endif // _HAS_CXX20
; 2604 :     }

  00063	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2538 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00028	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  0002c	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00030	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00035	90		 npad	 1

; 2539 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0003a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	48 8b 55 68	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0004e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
  00057	90		 npad	 1

; 2540 :     }

  00058	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 83 c0 08	 add	 rax, 8
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 96
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00020	48 8b 7d 60	 mov	 rdi, QWORD PTR this$[rbp]
  00024	33 c0		 xor	 eax, eax
  00026	b9 10 00 00 00	 mov	 ecx, 16
  0002b	f3 aa		 rep stosb
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00035	5f		 pop	 rdi
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2214 : 
; 2215 :     // length of internal buffer, [1, 16]:
; 2216 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2217 :     // roundup mask for allocated buffers, [0, 15]:
; 2218 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2219 :                                            : sizeof(value_type) <= 2 ? 7
; 2220 :                                            : sizeof(value_type) <= 4 ? 3
; 2221 :                                            : sizeof(value_type) <= 8 ? 1
; 2222 :                                                                      : 0;
; 2223 : 
; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2225 :         value_type* _Result = _Bx._Buf;
; 2226 :         if (_Large_string_engaged()) {
; 2227 :             _Result = _Unfancy(_Bx._Ptr);
; 2228 :         }
; 2229 : 
; 2230 :         return _Result;
; 2231 :     }
; 2232 : 
; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2234 :         const value_type* _Result = _Bx._Buf;
; 2235 :         if (_Large_string_engaged()) {
; 2236 :             _Result = _Unfancy(_Bx._Ptr);
; 2237 :         }
; 2238 : 
; 2239 :         return _Result;
; 2240 :     }
; 2241 : 
; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2243 :         return _BUF_SIZE <= _Myres;
; 2244 :     }
; 2245 : 
; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {
; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {
; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2251 :                 _Bx._Buf[_Idx] = value_type();
; 2252 :             }
; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }
; 2256 : 
; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {
; 2260 :             _Xran();
; 2261 :         }
; 2262 :     }
; 2263 : 
; 2264 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2265 :         // checks whether _Off is in the bounds of [0, size())
; 2266 :         if (_Mysize <= _Off) {
; 2267 :             _Xran();
; 2268 :         }
; 2269 :     }
; 2270 : 
; 2271 :     [[noreturn]] static void _Xran() {
; 2272 :         _Xout_of_range("invalid string position");
; 2273 :     }
; 2274 : 
; 2275 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2276 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2277 :         return (_STD min)(_Size, _Mysize - _Off);
; 2278 :     }
; 2279 : 
; 2280 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2281 :         // This constructor previously initialized _Ptr. Don't rely on the new behavior without
; 2282 :         // renaming `_String_val` (and fixing the visualizer).
; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers
; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2285 : 
; 2286 :         value_type _Buf[_BUF_SIZE];
; 2287 :         pointer _Ptr;
; 2288 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2289 :     };
; 2290 :     _Bxty _Bx;
; 2291 : 
; 2292 :     size_type _Mysize = 0; // current length of string

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2293 :     size_type _Myres  = 0; // current storage reserved for string

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

  0004c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 738  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2310 : [[noreturn]] inline void _Xlen_string() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2311 :     _Xlength_error("string too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen_strin:

; 2312 : }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 439  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 440  : #if _HAS_CXX20
; 441  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@assign

; 442  :             return _Primary_char_traits::assign(_Left, _Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00034	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Char_traits<char,int>::assign
  00039	eb 0d		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 443  :         }
; 444  : #endif // _HAS_CXX20
; 445  :         _Left = _Right;

  0003b	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  0003f	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00046	88 08		 mov	 BYTE PTR [rax], cl
$LN1@assign:

; 446  :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 64
tv69 = 72
_First$ = 96
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 386  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         // find length of null-terminated string
; 388  : #if _HAS_CXX17
; 389  : #ifdef __cpp_char8_t
; 390  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 391  : #if _HAS_U8_INTRINSICS
; 392  :             return __builtin_u8strlen(_First);
; 393  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 394  :             return _Primary_char_traits::length(_First);
; 395  : #endif // _HAS_U8_INTRINSICS
; 396  :         } else
; 397  : #endif // __cpp_char8_t
; 398  :         {
; 399  :             return __builtin_strlen(_First);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  0001f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00023	48 c7 45 48 ff
	ff ff ff	 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  0002b	48 ff 45 48	 inc	 QWORD PTR tv69[rbp]
  0002f	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]
  00033	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00037	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  0003b	75 ee		 jne	 SHORT $LL3@length
  0003d	48 8b 45 48	 mov	 rax, QWORD PTR tv69[rbp]

; 400  :         }
; 401  : #else // _HAS_CXX17
; 402  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 403  : #endif // _HAS_CXX17
; 404  :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z PROC	; std::_Char_traits<char,int>::assign, COMDAT

; 181  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 182  : #if _HAS_CXX20
; 183  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@assign

; 184  :             _STD construct_at(_STD addressof(_Left), _Right);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPEADAEAD@Z ; std::addressof<char>
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ; std::construct_at<char,char const &,0>

; 185  :         } else

  00041	eb 0d		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 186  : #endif // _HAS_CXX20
; 187  :         {
; 188  :             _Left = _Right;

  00043	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0004e	88 08		 mov	 BYTE PTR [rax], cl
$LN3@assign:

; 189  :         }
; 190  :     }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ENDP	; std::_Char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_First1$ = 96
_First2$ = 104
_Count$ = 112
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #if _HAS_CXX20
; 55   :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 48		 je	 SHORT $LN5@copy

; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap
; 57   :             for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00031	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00039	eb 0b		 jmp	 SHORT $LN4@copy
$LN2@copy:
  0003b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003f	48 ff c0	 inc	 rax
  00042	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@copy:
  00046	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  0004a	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  0004e	74 23		 je	 SHORT $LN3@copy

; 58   :                 _First1[_Idx] = _First2[_Idx];

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00058	48 03 c8	 add	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00062	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00066	48 03 d1	 add	 rdx, rcx
  00069	48 8b ca	 mov	 rcx, rdx
  0006c	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0006f	88 08		 mov	 BYTE PTR [rax], cl

; 59   :             }

  00071	eb c8		 jmp	 SHORT $LN2@copy
$LN3@copy:

; 60   : 
; 61   :             return _First1;

  00073	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
  00077	eb 15		 jmp	 SHORT $LN1@copy
$LN5@copy:

; 62   :         }
; 63   : #endif // _HAS_CXX20
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00079	4c 8b 45 70	 mov	 r8, QWORD PTR _Count$[rbp]
  0007d	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00081	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00085	e8 00 00 00 00	 call	 memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

  0008a	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@copy:

; 69   :     }

  0008e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>

; 252  :     } else

  00041	eb 2a		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00061	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00064	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     _Container_proxy* _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1448 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1449 :         _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1450 :     }

  00026	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT

; 1362 :     void _Orphan_me_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1363 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1364 :         _Orphan_me_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1365 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$ = 0
this$ = 96
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT

; 1346 :     _CONSTEXPR20 void _Orphan_me_unlocked_v3() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1347 :         if (!_Myproxy) { // already orphaned

  0001e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN10@Orphan_me_

; 1348 :             return;

  00028	e9 ce 00 00 00	 jmp	 $LN1@Orphan_me_
$LN10@Orphan_me_:

; 1349 :         }
; 1350 : 
; 1351 :         // adopted, remove self from list
; 1352 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_me_:

; 1353 :         while (*_Pnext && *_Pnext != this) {

  0003c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00040	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00044	74 1e		 je	 SHORT $LN6@Orphan_me_
  00046	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0004a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00051	74 11		 je	 SHORT $LN6@Orphan_me_

; 1354 :             _Pnext = &(*_Pnext)->_Mynextiter;

  00053	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00057	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 1355 :         }

  00062	eb d8		 jmp	 SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1356 : 
; 1357 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00064	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00068	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006c	74 02		 je	 SHORT $LN9@Orphan_me_
  0006e	eb 6b		 jmp	 SHORT $LN12@Orphan_me_
$LN9@Orphan_me_:
  00070	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00077	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0007c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00083	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00088	45 33 c9	 xor	 r9d, r9d
  0008b	41 b8 4d 05 00
	00		 mov	 r8d, 1357		; 0000054dH
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00098	b9 02 00 00 00	 mov	 ecx, 2
  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a3	83 f8 01	 cmp	 eax, 1
  000a6	75 03		 jne	 SHORT $LN14@Orphan_me_
  000a8	cc		 int	 3
  000a9	33 c0		 xor	 eax, eax
$LN14@Orphan_me_:
  000ab	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b4	41 b9 4d 05 00
	00		 mov	 r9d, 1357		; 0000054dH
  000ba	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d5	33 c0		 xor	 eax, eax
  000d7	85 c0		 test	 eax, eax
  000d9	75 95		 jne	 SHORT $LN9@Orphan_me_
$LN12@Orphan_me_:
  000db	33 c0		 xor	 eax, eax
  000dd	85 c0		 test	 eax, eax
  000df	75 83		 jne	 SHORT $LN6@Orphan_me_

; 1358 :         *_Pnext  = _Mynextiter;

  000e1	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000e5	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  000e9	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000ed	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1359 :         _Myproxy = nullptr;

  000f0	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  000f4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN1@Orphan_me_:

; 1360 :     }

  000fb	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000ff	5d		 pop	 rbp
  00100	c3		 ret	 0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT

; 1341 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1342 :         _Lockit _Lock(_LOCK_DEBUG);

  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1343 :         _Adopt_unlocked(_Parent);

  0002f	48 8b 55 68	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00033	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00037	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1344 :     }

  0003c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00046	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT

; 1324 :     _CONSTEXPR20 void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1325 :         if (!_Parent) {

  00020	48 83 7d 68 00	 cmp	 QWORD PTR _Parent$[rbp], 0
  00025	75 0b		 jne	 SHORT $LN2@Adopt_unlo

; 1326 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1327 :             return;

  00030	eb 52		 jmp	 SHORT $LN1@Adopt_unlo
$LN2@Adopt_unlo:

; 1328 :         }
; 1329 : 
; 1330 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00032	48 8b 45 68	 mov	 rax, QWORD PTR _Parent$[rbp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 45 00	 mov	 QWORD PTR _Parent_proxy$[rbp], rax

; 1331 :         if (_Myproxy != _Parent_proxy) { // change parentage

  0003d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00041	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00045	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00048	74 3a		 je	 SHORT $LN1@Adopt_unlo

; 1332 :             if (_Myproxy) { // adopted, remove self from list

  0004a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00052	74 09		 je	 SHORT $LN4@Adopt_unlo

; 1333 :                 _Orphan_me_unlocked_v3();

  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1334 :             }
; 1335 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  0005d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00065	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00069	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1336 :             _Parent_proxy->_Myfirstiter = this;

  0006d	48 8b 45 00	 mov	 rax, QWORD PTR _Parent_proxy$[rbp]
  00071	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00075	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1337 :             _Myproxy                    = _Parent_proxy;

  00079	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00081	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@Adopt_unlo:

; 1338 :         }
; 1339 :     }

  00084	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 64
this$ = 96
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 10		 je	 SHORT $LN3@Getcont
  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00033	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00035	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR tv68[rbp], 0
$LN4@Getcont:
  0003d	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]

; 1298 :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
this$ = 80
_Parent$ = 88
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@Adopt

; 1279 :             _Adopt_unlocked(_Parent);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1280 :         } else

  00039	eb 0d		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);

  0003b	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  0003f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
$LN3@Adopt:

; 1284 :         }
; 1285 :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Iterator_b

; 1268 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1269 :         } else

  00030	eb 09		 jmp	 SHORT $LN3@Iterator_b
$LN2@Iterator_b:

; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
$LN3@Iterator_b:

; 1273 :         }
; 1274 :     }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1243 : 
; 1244 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1245 :         *this = _Right;
; 1246 :     }
; 1247 : 
; 1248 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1249 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1250 : #if _HAS_CXX20
; 1251 :         if (_STD is_constant_evaluated()) {
; 1252 :             _Assign_unlocked(_Right);
; 1253 :         } else
; 1254 : #endif // _HAS_CXX20
; 1255 :         {
; 1256 :             _Assign_locked(_Right);
; 1257 :         }
; 1258 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1259 :         _Myproxy = _Right._Myproxy;
; 1260 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1261 :         return *this;
; 1262 :     }
; 1263 : 
; 1264 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {
; 1268 :             _Orphan_me_unlocked_v3();
; 1269 :         } else
; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();
; 1273 :         }
; 1274 :     }
; 1275 : 
; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {
; 1279 :             _Adopt_unlocked(_Parent);
; 1280 :         } else
; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);
; 1284 :         }
; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1288 :         if (_Parent) { // have a parent, do adoption
; 1289 :             _Myproxy = _Parent->_Myproxy;
; 1290 :         } else { // no future parent, just disown current parent
; 1291 :             _Myproxy = nullptr;
; 1292 :         }
; 1293 :     }
; 1294 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1295 : 
; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1298 :     }
; 1299 : 
; 1300 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1301 : 
; 1302 :     mutable _Container_proxy* _Myproxy    = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1303 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1229 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1230 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1231 :         _Orphan_all_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1232 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
$T2 = 72
this$ = 96
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1369 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1370 :     if (!_Myproxy) { // no proxy, already done

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	75 02		 jne	 SHORT $LN5@Orphan_all

; 1371 :         return;

  00025	eb 45		 jmp	 SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1372 :     }
; 1373 : 
; 1374 :     // proxy allocated, drain it
; 1375 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

  00027	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR $T2[rbp], 0
  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
  00046	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
  0004a	eb 0c		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
$LN4@Orphan_all:
  00058	48 83 7d 00 00	 cmp	 QWORD PTR _Pnext$1[rbp], 0
  0005d	74 0d		 je	 SHORT $LN1@Orphan_all

; 1376 :         _Pnext->_Myproxy = nullptr;

  0005f	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00063	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1377 :     }

  0006a	eb e0		 jmp	 SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 1378 : }

  0006c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1380 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1381 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1382 : #if _HAS_CXX20
; 1383 :     if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Orphan_all

; 1384 :         _Orphan_all_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1385 :     } else

  00030	eb 09		 jmp	 SHORT $LN3@Orphan_all
$LN2@Orphan_all:

; 1386 : #endif // _HAS_CXX20
; 1387 :     {
; 1388 :         _Orphan_all_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN3@Orphan_all:

; 1389 :     }
; 1390 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1391 : }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1199 : 
; 1200 :     _Container_base12(const _Container_base12&)            = delete;
; 1201 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1202 : 
; 1203 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1204 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1205 : 
; 1206 :     template <class _Alloc>
; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1209 :         _Construct_in_place(*_New_proxy, this);
; 1210 :         _Myproxy            = _New_proxy;
; 1211 :         _New_proxy->_Mycont = this;
; 1212 :     }
; 1213 : 
; 1214 :     template <class _Alloc>
; 1215 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1216 :         // pre: no iterators refer to the existing proxy
; 1217 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1218 :         _Construct_in_place(*_New_proxy, this);
; 1219 :         _New_proxy->_Mycont = this;
; 1220 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1221 :     }
; 1222 : 
; 1223 :     _Container_proxy* _Myproxy = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Mycont_$ = 88
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1191 : 
; 1192 :     const _Container_base12* _Mycont       = nullptr;
; 1193 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 0
_Ptr_container$ = 8
_Min_back_shift$ = 16
_Back_shift$ = 24
_Ptr$ = 112
_Bytes$ = 120
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 154  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 156  :     _Bytes += _Non_user_size;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00027	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002a	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002e	48 8b 4d 78	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 157  : 
; 158  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

  00035	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 00	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 159  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00040	b8 08 00 00 00	 mov	 eax, 8
  00045	48 6b c0 ff	 imul	 rax, rax, -1
  00049	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0004d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00051	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 160  : 
; 161  :     // If the following asserts, it likely means that we are performing
; 162  :     // an aligned delete on memory coming from an unaligned allocation.
; 163  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00055	b8 08 00 00 00	 mov	 eax, 8
  0005a	48 6b c0 fe	 imul	 rax, rax, -2
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00062	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0006c	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00070	75 02		 jne	 SHORT $LN14@Adjust_man
  00072	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00074	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0007a	83 c0 09	 add	 eax, 9
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00084	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00090	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00095	45 33 c9	 xor	 r9d, r9d
  00098	44 8b c0	 mov	 r8d, eax
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  000a2	b9 02 00 00 00	 mov	 ecx, 2
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 03		 jne	 SHORT $LN19@Adjust_man
  000b2	cc		 int	 3
  000b3	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b5	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000bb	83 c0 09	 add	 eax, 9
  000be	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000c7	44 8b c8	 mov	 r9d, eax
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000eb	33 c0		 xor	 eax, eax
  000ed	85 c0		 test	 eax, eax
  000ef	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 164  : 
; 165  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 166  :     // in range [_Min_back_shift, _Non_user_size]
; 167  : #ifdef _DEBUG
; 168  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f5	48 c7 45 10 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 169  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 170  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 171  : #endif // _DEBUG
; 172  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00101	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00105	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00108	48 2b c1	 sub	 rax, rcx
  0010b	48 89 45 18	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 173  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010f	48 83 7d 18 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00114	72 09		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7d 18 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0011b	77 02		 ja	 SHORT $LN16@Adjust_man
  0011d	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  0011f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00125	83 c0 13	 add	 eax, 19
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  0012f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00134	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0013b	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00140	45 33 c9	 xor	 r9d, r9d
  00143	44 8b c0	 mov	 r8d, eax
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0014d	b9 02 00 00 00	 mov	 ecx, 2
  00152	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00158	83 f8 01	 cmp	 eax, 1
  0015b	75 03		 jne	 SHORT $LN20@Adjust_man
  0015d	cc		 int	 3
  0015e	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00160	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00166	83 c0 13	 add	 eax, 19
  00169	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00172	44 8b c8	 mov	 r9d, eax
  00175	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00183	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0018a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00190	33 c0		 xor	 eax, eax
  00192	85 c0		 test	 eax, eax
  00194	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  00196	33 c0		 xor	 eax, eax
  00198	85 c0		 test	 eax, eax
  0019a	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 174  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001a0	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  001a4	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001a8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 175  : }

  001ab	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  001af	5d		 pop	 rbp
  001b0	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 85   :         void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 86   :         return ::operator new(_Bytes);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 87   :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 64
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 330  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2DED1E19_exception
  00015	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 331  :     _THROW(bad_array_new_length{});

  0001a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0001e	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0002a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0002e	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 332  : }

  00033	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 140  :         : bad_alloc("bad array new length")

  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00022	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00026	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc

; 141  :     {

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 142  :     }

  00039	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 129  :         : exception(_Message, 1)

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception

; 130  :     {

  00033	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 131  :     }

  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 64
this$ = 96
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00024	74 0e		 je	 SHORT $LN3@what
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002e	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00032	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0003b	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR tv69[rbp]

; 96   :     }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 __std_exception_destroy

; 91   :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 96
_Other$ = 104
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00010	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         : _Data()

  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 8b f8	 mov	 rdi, rax
  0003a	33 c0		 xor	 eax, eax
  0003c	b9 10 00 00 00	 mov	 ecx, 16
  00041	f3 aa		 rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00043	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 8b 4d 68	 mov	 rcx, QWORD PTR _Other$[rbp]
  0004f	48 83 c1 08	 add	 rcx, 8
  00053	48 8b d0	 mov	 rdx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  0005b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 96
_Message$ = 104
__formal$ = 112
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00015	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00021	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00031	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         : _Data()

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 83 c0 08	 add	 rax, 8
  0003c	48 8b f8	 mov	 rdi, rax
  0003f	33 c0		 xor	 eax, eax
  00041	b9 10 00 00 00	 mov	 ecx, 16
  00046	f3 aa		 rep stosb

; 67   :         _Data._What = _Message;

  00048	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 4d 68	 mov	 rcx, QWORD PTR _Message$[rbp]
  00050	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 68   :     }

  00054	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 0
this$ = 112
_Message$ = 120
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 59   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00010	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 58   :         : _Data()

  0002f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 8b f8	 mov	 rdi, rax
  0003a	33 c0		 xor	 eax, eax
  0003c	b9 10 00 00 00	 mov	 ecx, 16
  00041	f3 aa		 rep stosb

; 60   :         __std_exception_data _InitData = { _Message, true };

  00043	48 8b 45 78	 mov	 rax, QWORD PTR _Message$[rbp]
  00047	48 89 45 00	 mov	 QWORD PTR _InitData$[rbp], rax
  0004b	c6 45 08 01	 mov	 BYTE PTR _InitData$[rbp+8], 1

; 61   :         __std_exception_copy(&_InitData, &_Data);

  0004f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 83 c0 08	 add	 rax, 8
  00057	48 8b d0	 mov	 rdx, rax
  0005a	48 8d 4d 00	 lea	 rcx, QWORD PTR _InitData$[rbp]
  0005e	e8 00 00 00 00	 call	 __std_exception_copy

; 62   :     }

  00063	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Val$ = 96
_First$ = 104
_Count$ = 112
?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z PROC		; std::_Fnv1a_append_bytes, COMDAT

; 2324 :     const size_t _Count) noexcept { // accumulate range [_First, _First + _Count) into partial FNV-1a hash _Val

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2325 :     for (size_t _Idx = 0; _Idx < _Count; ++_Idx) {

  00025	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  0002d	eb 0b		 jmp	 SHORT $LN4@Fnv1a_appe
$LN2@Fnv1a_appe:
  0002f	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00033	48 ff c0	 inc	 rax
  00036	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Fnv1a_appe:
  0003a	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  0003e	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00042	73 3a		 jae	 SHORT $LN3@Fnv1a_appe

; 2326 :         _Val ^= static_cast<size_t>(_First[_Idx]);

  00044	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00048	48 8b 4d 68	 mov	 rcx, QWORD PTR _First$[rbp]
  0004c	48 03 c8	 add	 rcx, rax
  0004f	48 8b c1	 mov	 rax, rcx
  00052	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00055	48 8b 4d 60	 mov	 rcx, QWORD PTR _Val$[rbp]
  00059	48 33 c8	 xor	 rcx, rax
  0005c	48 8b c1	 mov	 rax, rcx
  0005f	48 89 45 60	 mov	 QWORD PTR _Val$[rbp], rax

; 2327 :         _Val *= _FNV_prime;

  00063	48 b8 b3 01 00
	00 00 01 00 00	 mov	 rax, 1099511628211	; 00000100000001b3H
  0006d	48 8b 4d 60	 mov	 rcx, QWORD PTR _Val$[rbp]
  00071	48 0f af c8	 imul	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 89 45 60	 mov	 QWORD PTR _Val$[rbp], rax

; 2328 :     }

  0007c	eb b1		 jmp	 SHORT $LN2@Fnv1a_appe
$LN3@Fnv1a_appe:

; 2329 : 
; 2330 :     return _Val;

  0007e	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]

; 2331 : }

  00082	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
?_Fnv1a_append_bytes@std@@YA_K_KQEBE_K@Z ENDP		; std::_Fnv1a_append_bytes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 635  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__595ABB90_limits
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 636  :         return LLONG_MAX;

  00017	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 637  :     }

  00021	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 80
_S2$ = 88
_N$ = 96
wmemcpy	PROC						; COMDAT

; 234  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3FCAD62E_wchar@h
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 235  :         #pragma warning(suppress: 6386) // Buffer overrun
; 236  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _N$[rbp]
  00029	48 d1 e0	 shl	 rax, 1
  0002c	4c 8b c0	 mov	 r8, rax
  0002f	48 8b 55 58	 mov	 rdx, QWORD PTR _S2$[rbp]
  00033	48 8b 4d 50	 mov	 rcx, QWORD PTR _S1$[rbp]
  00037	e8 00 00 00 00	 call	 memcpy

; 237  :     }

  0003c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 178  : _EXPORT_STD _NODISCARD constexpr bool is_constant_evaluated() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9A2CA802_xtr1common
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  :     return __builtin_is_constant_evaluated();

  00017	32 c0		 xor	 al, al

; 180  : }

  00019	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0Renderer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0Renderer@@QEAA@XZ PROC				; Renderer::Renderer, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b ec	 mov	 rbp, rsp
  0000d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7Renderer@@6B@
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0
  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??0Renderer@@QEAA@XZ ENDP				; Renderer::Renderer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
format$ = 88
width$ = 96
height$ = 104
arraySize$ = 112
mipLevels$ = 120
sampleCount$ = 128
sampleQuality$ = 136
flags$ = 144
layout$ = 152
alignment$ = 160
?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z PROC ; CD3DX12_RESOURCE_DESC::Tex2D, COMDAT

; 1780 :     {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001b	48 8d 6c 24 60	 lea	 rbp, QWORD PTR [rsp+96]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1781 :         return CD3DX12_RESOURCE_DESC( D3D12_RESOURCE_DIMENSION_TEXTURE2D, alignment, width, height, arraySize,

  0002c	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR flags$[rbp]
  00032	89 44 24 58	 mov	 DWORD PTR [rsp+88], eax
  00036	8b 85 98 00 00
	00		 mov	 eax, DWORD PTR layout$[rbp]
  0003c	89 44 24 50	 mov	 DWORD PTR [rsp+80], eax
  00040	8b 85 88 00 00
	00		 mov	 eax, DWORD PTR sampleQuality$[rbp]
  00046	89 44 24 48	 mov	 DWORD PTR [rsp+72], eax
  0004a	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR sampleCount$[rbp]
  00050	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  00054	8b 45 58	 mov	 eax, DWORD PTR format$[rbp]
  00057	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  0005b	0f b7 45 78	 movzx	 eax, WORD PTR mipLevels$[rbp]
  0005f	66 89 44 24 30	 mov	 WORD PTR [rsp+48], ax
  00064	0f b7 45 70	 movzx	 eax, WORD PTR arraySize$[rbp]
  00068	66 89 44 24 28	 mov	 WORD PTR [rsp+40], ax
  0006d	8b 45 68	 mov	 eax, DWORD PTR height$[rbp]
  00070	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00074	4c 8b 4d 60	 mov	 r9, QWORD PTR width$[rbp]
  00078	4c 8b 85 a0 00
	00 00		 mov	 r8, QWORD PTR alignment$[rbp]
  0007f	ba 03 00 00 00	 mov	 edx, 3
  00084	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00088	e8 00 00 00 00	 call	 ??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z ; CD3DX12_RESOURCE_DESC::CD3DX12_RESOURCE_DESC
  0008d	48 8b 45 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1782 :             mipLevels, format, sampleCount, sampleQuality, layout, flags );
; 1783 :     }

  00091	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?Tex2D@CD3DX12_RESOURCE_DESC@@SA?AU1@W4DXGI_FORMAT@@_KIGGIIW4D3D12_RESOURCE_FLAGS@@W4D3D12_TEXTURE_LAYOUT@@1@Z ENDP ; CD3DX12_RESOURCE_DESC::Tex2D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
width$ = 88
flags$ = 96
alignment$ = 104
?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z PROC ; CD3DX12_RESOURCE_DESC::Buffer, COMDAT

; 1753 :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8d 6c 24 60	 lea	 rbp, QWORD PTR [rsp+96]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1754 :         return CD3DX12_RESOURCE_DESC( D3D12_RESOURCE_DIMENSION_BUFFER, alignment, width, 1, 1, 1,

  0002d	8b 45 60	 mov	 eax, DWORD PTR flags$[rbp]
  00030	89 44 24 58	 mov	 DWORD PTR [rsp+88], eax
  00034	c7 44 24 50 01
	00 00 00	 mov	 DWORD PTR [rsp+80], 1
  0003c	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR [rsp+72], 0
  00044	c7 44 24 40 01
	00 00 00	 mov	 DWORD PTR [rsp+64], 1
  0004c	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  00054	66 c7 44 24 30
	01 00		 mov	 WORD PTR [rsp+48], 1
  0005b	66 c7 44 24 28
	01 00		 mov	 WORD PTR [rsp+40], 1
  00062	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0006a	4c 8b 4d 58	 mov	 r9, QWORD PTR width$[rbp]
  0006e	4c 8b 45 68	 mov	 r8, QWORD PTR alignment$[rbp]
  00072	ba 01 00 00 00	 mov	 edx, 1
  00077	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007b	e8 00 00 00 00	 call	 ??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z ; CD3DX12_RESOURCE_DESC::CD3DX12_RESOURCE_DESC
  00080	48 8b 45 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1755 :             DXGI_FORMAT_UNKNOWN, 1, 0, D3D12_TEXTURE_LAYOUT_ROW_MAJOR, flags );
; 1756 :     }

  00084	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
?Buffer@CD3DX12_RESOURCE_DESC@@SA?AU1@_KW4D3D12_RESOURCE_FLAGS@@0@Z ENDP ; CD3DX12_RESOURCE_DESC::Buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z
_TEXT	SEGMENT
this$ = 80
dimension$ = 88
alignment$ = 96
width$ = 104
height$ = 112
depthOrArraySize$ = 120
mipLevels$ = 128
format$ = 136
sampleCount$ = 144
sampleQuality$ = 152
layout$ = 160
flags$ = 168
??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z PROC ; CD3DX12_RESOURCE_DESC::CD3DX12_RESOURCE_DESC, COMDAT

; 1717 :     CD3DX12_RESOURCE_DESC(

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1718 :         D3D12_RESOURCE_DIMENSION dimension,
; 1719 :         UINT64 alignment,
; 1720 :         UINT64 width,
; 1721 :         UINT height,
; 1722 :         UINT16 depthOrArraySize,
; 1723 :         UINT16 mipLevels,
; 1724 :         DXGI_FORMAT format,
; 1725 :         UINT sampleCount,
; 1726 :         UINT sampleQuality,
; 1727 :         D3D12_TEXTURE_LAYOUT layout,
; 1728 :         D3D12_RESOURCE_FLAGS flags ) noexcept
; 1729 :     {
; 1730 :         Dimension = dimension;

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	8b 4d 58	 mov	 ecx, DWORD PTR dimension$[rbp]
  00030	89 08		 mov	 DWORD PTR [rax], ecx

; 1731 :         Alignment = alignment;

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8b 4d 60	 mov	 rcx, QWORD PTR alignment$[rbp]
  0003a	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1732 :         Width = width;

  0003e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 4d 68	 mov	 rcx, QWORD PTR width$[rbp]
  00046	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 1733 :         Height = height;

  0004a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004e	8b 4d 70	 mov	 ecx, DWORD PTR height$[rbp]
  00051	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 1734 :         DepthOrArraySize = depthOrArraySize;

  00054	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00058	0f b7 4d 78	 movzx	 ecx, WORD PTR depthOrArraySize$[rbp]
  0005c	66 89 48 1c	 mov	 WORD PTR [rax+28], cx

; 1735 :         MipLevels = mipLevels;

  00060	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00064	0f b7 8d 80 00
	00 00		 movzx	 ecx, WORD PTR mipLevels$[rbp]
  0006b	66 89 48 1e	 mov	 WORD PTR [rax+30], cx

; 1736 :         Format = format;

  0006f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00073	8b 8d 88 00 00
	00		 mov	 ecx, DWORD PTR format$[rbp]
  00079	89 48 20	 mov	 DWORD PTR [rax+32], ecx

; 1737 :         SampleDesc.Count = sampleCount;

  0007c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00080	8b 8d 90 00 00
	00		 mov	 ecx, DWORD PTR sampleCount$[rbp]
  00086	89 48 24	 mov	 DWORD PTR [rax+36], ecx

; 1738 :         SampleDesc.Quality = sampleQuality;

  00089	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0008d	8b 8d 98 00 00
	00		 mov	 ecx, DWORD PTR sampleQuality$[rbp]
  00093	89 48 28	 mov	 DWORD PTR [rax+40], ecx

; 1739 :         Layout = layout;

  00096	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0009a	8b 8d a0 00 00
	00		 mov	 ecx, DWORD PTR layout$[rbp]
  000a0	89 48 2c	 mov	 DWORD PTR [rax+44], ecx

; 1740 :         Flags = flags;

  000a3	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000a7	8b 8d a8 00 00
	00		 mov	 ecx, DWORD PTR flags$[rbp]
  000ad	89 48 30	 mov	 DWORD PTR [rax+48], ecx

; 1741 :     }

  000b0	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000b4	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000b8	5d		 pop	 rbp
  000b9	c3		 ret	 0
??0CD3DX12_RESOURCE_DESC@@QEAA@W4D3D12_RESOURCE_DIMENSION@@_K1IGGW4DXGI_FORMAT@@IIW4D3D12_TEXTURE_LAYOUT@@W4D3D12_RESOURCE_FLAGS@@@Z ENDP ; CD3DX12_RESOURCE_DESC::CD3DX12_RESOURCE_DESC
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z
_TEXT	SEGMENT
this$ = 80
o$ = 88
??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z PROC ; CD3DX12_CPU_DESCRIPTOR_HANDLE::CD3DX12_CPU_DESCRIPTOR_HANDLE, COMDAT

; 1565 :     {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1564 :         D3D12_CPU_DESCRIPTOR_HANDLE(o)

  00020	48 8b 45 58	 mov	 rax, QWORD PTR o$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1565 :     {}

  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0CD3DX12_CPU_DESCRIPTOR_HANDLE@@QEAA@AEBUD3D12_CPU_DESCRIPTOR_HANDLE@@@Z ENDP ; CD3DX12_CPU_DESCRIPTOR_HANDLE::CD3DX12_CPU_DESCRIPTOR_HANDLE
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z
_TEXT	SEGMENT
barrier$ = 32
__$ReturnUdt$ = 144
pResource$ = 152
stateBefore$ = 160
stateAfter$ = 168
subresource$ = 176
flags$ = 184
?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z PROC ; CD3DX12_RESOURCE_BARRIER::Transition, COMDAT

; 730  :     {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 98 00
	00 00		 sub	 rsp, 152		; 00000098H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  00029	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 731  :         CD3DX12_RESOURCE_BARRIER result = {};

  0002e	48 8b bd 90 00
	00 00		 mov	 rdi, QWORD PTR __$ReturnUdt$[rbp]
  00035	33 c0		 xor	 eax, eax
  00037	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0003c	f3 aa		 rep stosb

; 732  :         D3D12_RESOURCE_BARRIER &barrier = result;

  0003e	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00045	48 89 45 20	 mov	 QWORD PTR barrier$[rbp], rax

; 733  :         result.Type = D3D12_RESOURCE_BARRIER_TYPE_TRANSITION;

  00049	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00050	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 734  :         result.Flags = flags;

  00056	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0005d	8b 8d b8 00 00
	00		 mov	 ecx, DWORD PTR flags$[rbp]
  00063	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 735  :         barrier.Transition.pResource = pResource;

  00066	48 8b 45 20	 mov	 rax, QWORD PTR barrier$[rbp]
  0006a	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR pResource$[rbp]
  00071	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 736  :         barrier.Transition.StateBefore = stateBefore;

  00075	48 8b 45 20	 mov	 rax, QWORD PTR barrier$[rbp]
  00079	8b 8d a0 00 00
	00		 mov	 ecx, DWORD PTR stateBefore$[rbp]
  0007f	89 48 14	 mov	 DWORD PTR [rax+20], ecx

; 737  :         barrier.Transition.StateAfter = stateAfter;

  00082	48 8b 45 20	 mov	 rax, QWORD PTR barrier$[rbp]
  00086	8b 8d a8 00 00
	00		 mov	 ecx, DWORD PTR stateAfter$[rbp]
  0008c	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 738  :         barrier.Transition.Subresource = subresource;

  0008f	48 8b 45 20	 mov	 rax, QWORD PTR barrier$[rbp]
  00093	8b 8d b0 00 00
	00		 mov	 ecx, DWORD PTR subresource$[rbp]
  00099	89 48 10	 mov	 DWORD PTR [rax+16], ecx

; 739  :         return result;

  0009c	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 740  :     }

  000a3	48 8d 65 78	 lea	 rsp, QWORD PTR [rbp+120]
  000a7	5f		 pop	 rdi
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
?Transition@CD3DX12_RESOURCE_BARRIER@@SA?AU1@PEAUID3D12Resource@@W4D3D12_RESOURCE_STATES@@1IW4D3D12_RESOURCE_BARRIER_FLAGS@@@Z ENDP ; CD3DX12_RESOURCE_BARRIER::Transition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\d3dx12.h
;	COMDAT ??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z
_TEXT	SEGMENT
this$ = 80
type$ = 88
creationNodeMask$ = 96
nodeMask$ = 104
??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z PROC ; CD3DX12_HEAP_PROPERTIES::CD3DX12_HEAP_PROPERTIES, COMDAT

; 419  :     explicit CD3DX12_HEAP_PROPERTIES(

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B629FA8A_d3dx12@h
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 420  :         D3D12_HEAP_TYPE type,
; 421  :         UINT creationNodeMask = 1,
; 422  :         UINT nodeMask = 1 ) noexcept
; 423  :     {
; 424  :         Type = type;

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	8b 4d 58	 mov	 ecx, DWORD PTR type$[rbp]
  00030	89 08		 mov	 DWORD PTR [rax], ecx

; 425  :         CPUPageProperty = D3D12_CPU_PAGE_PROPERTY_UNKNOWN;

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [rax+4], 0

; 426  :         MemoryPoolPreference = D3D12_MEMORY_POOL_UNKNOWN;

  0003d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00041	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 427  :         CreationNodeMask = creationNodeMask;

  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	8b 4d 60	 mov	 ecx, DWORD PTR creationNodeMask$[rbp]
  0004f	89 48 0c	 mov	 DWORD PTR [rax+12], ecx

; 428  :         VisibleNodeMask = nodeMask;

  00052	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00056	8b 4d 68	 mov	 ecx, DWORD PTR nodeMask$[rbp]
  00059	89 48 10	 mov	 DWORD PTR [rax+16], ecx

; 429  :     }

  0005c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00060	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??0CD3DX12_HEAP_PROPERTIES@@QEAA@W4D3D12_HEAP_TYPE@@II@Z ENDP ; CD3DX12_HEAP_PROPERTIES::CD3DX12_HEAP_PROPERTIES
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z PROC ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  00016	83 e0 02	 and	 eax, 2
  00019	85 c0		 test	 eax, eax
  0001b	74 51		 je	 SHORT $LN2@vector
  0001d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0002c	ba 08 00 00 00	 mov	 edx, 8
  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0003a	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0003d	83 e0 01	 and	 eax, 1
  00040	85 c0		 test	 eax, eax
  00042	74 20		 je	 SHORT $LN3@vector
  00044	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 40 f8	 mov	 rax, QWORD PTR [rax-8]
  0004c	48 8d 04 c5 08
	00 00 00	 lea	 rax, QWORD PTR [rax*8+8]
  00054	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00058	48 83 e9 08	 sub	 rcx, 8
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00064	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00068	48 83 e8 08	 sub	 rax, 8
  0006c	eb 25		 jmp	 SHORT $LN1@vector
$LN2@vector:
  0006e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00072	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00077	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0007a	83 e0 01	 and	 eax, 1
  0007d	85 c0		 test	 eax, eax
  0007f	74 0e		 je	 SHORT $LN4@vector
  00081	ba 08 00 00 00	 mov	 edx, 8
  00086	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0008a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  0008f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
$LN1@vector:
  00093	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00097	5d		 pop	 rbp
  00098	c3		 ret	 0
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ENDP ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 80
_Where$ = 88
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__84C50014_vcruntime_new@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 169  :         (void)_Size;
; 170  :         return _Where;

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMisc.inl
;	COMDAT ?XMScalarSinCos@DirectX@@YAXPEAM0M@Z
_TEXT	SEGMENT
quotient$ = 0
y$ = 4
sign$ = 8
y2$ = 12
p$ = 16
pSin$ = 112
pCos$ = 120
Value$ = 128
?XMScalarSinCos@DirectX@@YAXPEAM0M@Z PROC		; DirectX::XMScalarSinCos, COMDAT

; 2311 : {

$LN11:
  00000	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  00006	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	55		 push	 rbp
  00011	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__98B66FFE_DirectXMathMisc@inl
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2312 :     assert(pSin);

  00029	48 83 7d 70 00	 cmp	 QWORD PTR pSin$[rbp], 0
  0002e	75 21		 jne	 SHORT $LN9@XMScalarSi
  00030	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPEAM0M@Z@4JA
  00036	ff c0		 inc	 eax
  00038	44 8b c0	 mov	 r8d, eax
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KG@LKCFMLEG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@
  00049	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0004f	33 c0		 xor	 eax, eax
$LN9@XMScalarSi:

; 2313 :     assert(pCos);

  00051	48 83 7d 78 00	 cmp	 QWORD PTR pCos$[rbp], 0
  00056	75 22		 jne	 SHORT $LN10@XMScalarSi
  00058	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPEAM0M@Z@4JA
  0005e	83 c0 02	 add	 eax, 2
  00061	44 8b c0	 mov	 r8d, eax
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KG@LKCFMLEG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@
  00072	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00078	33 c0		 xor	 eax, eax
$LN10@XMScalarSi:

; 2314 : 
; 2315 :     // Map Value to y in [-pi,pi], x = 2*pi*quotient + remainder.
; 2316 :     float quotient = XM_1DIV2PI * Value;

  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e22f983
  00082	f3 0f 59 85 80
	00 00 00	 mulss	 xmm0, DWORD PTR Value$[rbp]
  0008a	f3 0f 11 45 00	 movss	 DWORD PTR quotient$[rbp], xmm0

; 2317 :     if (Value >= 0.0f)

  0008f	f3 0f 10 85 80
	00 00 00	 movss	 xmm0, DWORD PTR Value$[rbp]
  00097	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0009e	72 1c		 jb	 SHORT $LN2@XMScalarSi

; 2318 :     {
; 2319 :         quotient = static_cast<float>(static_cast<int>(quotient + 0.5f));

  000a0	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR quotient$[rbp]
  000a5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  000ad	f3 0f 2c c0	 cvttss2si eax, xmm0
  000b1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b5	f3 0f 11 45 00	 movss	 DWORD PTR quotient$[rbp], xmm0

; 2320 :     }

  000ba	eb 1a		 jmp	 SHORT $LN3@XMScalarSi
$LN2@XMScalarSi:

; 2321 :     else
; 2322 :     {
; 2323 :         quotient = static_cast<float>(static_cast<int>(quotient - 0.5f));

  000bc	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR quotient$[rbp]
  000c1	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  000c9	f3 0f 2c c0	 cvttss2si eax, xmm0
  000cd	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000d1	f3 0f 11 45 00	 movss	 DWORD PTR quotient$[rbp], xmm0
$LN3@XMScalarSi:

; 2324 :     }
; 2325 :     float y = Value - XM_2PI * quotient;

  000d6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  000de	f3 0f 59 45 00	 mulss	 xmm0, DWORD PTR quotient$[rbp]
  000e3	f3 0f 10 8d 80
	00 00 00	 movss	 xmm1, DWORD PTR Value$[rbp]
  000eb	f3 0f 5c c8	 subss	 xmm1, xmm0
  000ef	0f 28 c1	 movaps	 xmm0, xmm1
  000f2	f3 0f 11 45 04	 movss	 DWORD PTR y$[rbp], xmm0

; 2326 : 
; 2327 :     // Map y to [-pi/2,pi/2] with sin(y) = sin(Value).
; 2328 :     float sign;
; 2329 :     if (y > XM_PIDIV2)

  000f7	f3 0f 10 45 04	 movss	 xmm0, DWORD PTR y$[rbp]
  000fc	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3fc90fdb
  00103	76 21		 jbe	 SHORT $LN4@XMScalarSi

; 2330 :     {
; 2331 :         y = XM_PI - y;

  00105	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40490fdb
  0010d	f3 0f 5c 45 04	 subss	 xmm0, DWORD PTR y$[rbp]
  00112	f3 0f 11 45 04	 movss	 DWORD PTR y$[rbp], xmm0

; 2332 :         sign = -1.0f;

  00117	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0011f	f3 0f 11 45 08	 movss	 DWORD PTR sign$[rbp], xmm0

; 2333 :     }

  00124	eb 3c		 jmp	 SHORT $LN5@XMScalarSi
$LN4@XMScalarSi:

; 2334 :     else if (y < -XM_PIDIV2)

  00126	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  0012e	0f 2f 45 04	 comiss	 xmm0, DWORD PTR y$[rbp]
  00132	76 21		 jbe	 SHORT $LN6@XMScalarSi

; 2335 :     {
; 2336 :         y = -XM_PI - y;

  00134	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0490fdb
  0013c	f3 0f 5c 45 04	 subss	 xmm0, DWORD PTR y$[rbp]
  00141	f3 0f 11 45 04	 movss	 DWORD PTR y$[rbp], xmm0

; 2337 :         sign = -1.0f;

  00146	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0014e	f3 0f 11 45 08	 movss	 DWORD PTR sign$[rbp], xmm0

; 2338 :     }

  00153	eb 0d		 jmp	 SHORT $LN5@XMScalarSi
$LN6@XMScalarSi:

; 2339 :     else
; 2340 :     {
; 2341 :         sign = +1.0f;

  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0015d	f3 0f 11 45 08	 movss	 DWORD PTR sign$[rbp], xmm0
$LN5@XMScalarSi:

; 2342 :     }
; 2343 : 
; 2344 :     float y2 = y * y;

  00162	f3 0f 10 45 04	 movss	 xmm0, DWORD PTR y$[rbp]
  00167	f3 0f 59 45 04	 mulss	 xmm0, DWORD PTR y$[rbp]
  0016c	f3 0f 11 45 0c	 movss	 DWORD PTR y2$[rbp], xmm0

; 2345 : 
; 2346 :     // 11-degree minimax approximation
; 2347 :     *pSin = (((((-2.3889859e-08f * y2 + 2.7525562e-06f) * y2 - 0.00019840874f) * y2 + 0.0083333310f) * y2 - 0.16666667f) * y2 + 1.0f) * y;

  00171	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@b2cd365b
  00179	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  0017e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3638b88e
  00186	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  0018b	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@39500bf1
  00193	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  00198	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3c088886
  001a0	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001a5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3e2aaaab
  001ad	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001b2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  001ba	f3 0f 59 45 04	 mulss	 xmm0, DWORD PTR y$[rbp]
  001bf	48 8b 45 70	 mov	 rax, QWORD PTR pSin$[rbp]
  001c3	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0

; 2348 : 
; 2349 :     // 10-degree minimax approximation
; 2350 :     float p = ((((-2.6051615e-07f * y2 + 2.4760495e-05f) * y2 - 0.0013888378f) * y2 + 0.041666638f) * y2 - 0.5f) * y2 + 1.0f;

  001c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@b48bdd11
  001cf	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001d4	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@37cfb4c2
  001dc	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001e1	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3ab609aa
  001e9	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001ee	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3d2aaaa3
  001f6	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  001fb	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00203	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR y2$[rbp]
  00208	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00210	f3 0f 11 45 10	 movss	 DWORD PTR p$[rbp], xmm0

; 2351 :     *pCos = sign * p;

  00215	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR sign$[rbp]
  0021a	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR p$[rbp]
  0021f	48 8b 45 78	 mov	 rax, QWORD PTR pCos$[rbp]
  00223	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0

; 2352 : }

  00227	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0022b	5d		 pop	 rbp
  0022c	c3		 ret	 0
?XMScalarSinCos@DirectX@@YAXPEAM0M@Z ENDP		; DirectX::XMScalarSinCos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMisc.inl
;	COMDAT ?XMScalarNearEqual@DirectX@@YA_NMMM@Z
_TEXT	SEGMENT
Delta$ = 0
tv68 = 68
S1$ = 96
S2$ = 104
Epsilon$ = 112
?XMScalarNearEqual@DirectX@@YA_NMMM@Z PROC		; DirectX::XMScalarNearEqual, COMDAT

; 2135 : {

$LN5:
  00000	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  00006	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  0000c	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00012	55		 push	 rbp
  00013	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__98B66FFE_DirectXMathMisc@inl
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2136 :     float Delta = S1 - S2;

  00028	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR S1$[rbp]
  0002d	f3 0f 5c 45 68	 subss	 xmm0, DWORD PTR S2$[rbp]
  00032	f3 0f 11 45 00	 movss	 DWORD PTR Delta$[rbp], xmm0

; 2137 :     return (fabsf(Delta) <= Epsilon);

  00037	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR Delta$[rbp]
  0003c	e8 00 00 00 00	 call	 fabsf
  00041	f3 0f 10 4d 70	 movss	 xmm1, DWORD PTR Epsilon$[rbp]
  00046	0f 2f c8	 comiss	 xmm1, xmm0
  00049	72 09		 jb	 SHORT $LN3@XMScalarNe
  0004b	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv68[rbp], 1
  00052	eb 07		 jmp	 SHORT $LN4@XMScalarNe
$LN3@XMScalarNe:
  00054	c7 45 44 00 00
	00 00		 mov	 DWORD PTR tv68[rbp], 0
$LN4@XMScalarNe:
  0005b	0f b6 45 44	 movzx	 eax, BYTE PTR tv68[rbp]

; 2138 : }

  0005f	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
?XMScalarNearEqual@DirectX@@YA_NMMM@Z ENDP		; DirectX::XMScalarNearEqual
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMatrix.inl
;	COMDAT ?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z
_TEXT	SEGMENT
SinFov$ = 0
CosFov$ = 4
fRange$ = 8
Height$ = 12
rMem$ = 16
vValues$ = 32
vTemp$ = 48
M$ = 64
$T1 = 192
$T2 = 208
$T3 = 224
$T4 = 240
$T5 = 256
$T6 = 272
$T7 = 288
$T8 = 304
$T9 = 320
FovAngleY$ = 352
AspectRatio$ = 360
NearZ$ = 368
FarZ$ = 376
?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z PROC ; DirectX::XMMatrixPerspectiveFovLH, COMDAT

; 2445 : {

$LN8:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00018	55		 push	 rbp
  00019	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  00020	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4AFE615D_DirectXMathMatrix@inl
  0002c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2446 :     assert(NearZ > 0.f && FarZ > 0.f);

  00031	f3 0f 10 85 70
	01 00 00	 movss	 xmm0, DWORD PTR NearZ$[rbp]
  00039	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00040	76 11		 jbe	 SHORT $LN3@XMMatrixPe
  00042	f3 0f 10 85 78
	01 00 00	 movss	 xmm0, DWORD PTR FarZ$[rbp]
  0004a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00051	77 21		 ja	 SHORT $LN4@XMMatrixPe
$LN3@XMMatrixPe:
  00053	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
  00059	ff c0		 inc	 eax
  0005b	44 8b c0	 mov	 r8d, eax
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00065	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00072	33 c0		 xor	 eax, eax
$LN4@XMMatrixPe:

; 2447 :     assert(!XMScalarNearEqual(FovAngleY, 0.0f, 0.00001f * 2.0f));

  00074	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@37a7c5ac
  0007c	0f 57 c9	 xorps	 xmm1, xmm1
  0007f	f3 0f 10 85 60
	01 00 00	 movss	 xmm0, DWORD PTR FovAngleY$[rbp]
  00087	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  0008c	0f b6 c0	 movzx	 eax, al
  0008f	85 c0		 test	 eax, eax
  00091	74 22		 je	 SHORT $LN5@XMMatrixPe
  00093	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
  00099	83 c0 02	 add	 eax, 2
  0009c	44 8b c0	 mov	 r8d, eax
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GK@EFPMNDEN@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b3	33 c0		 xor	 eax, eax
$LN5@XMMatrixPe:

; 2448 :     assert(!XMScalarNearEqual(AspectRatio, 0.0f, 0.00001f));

  000b5	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3727c5ac
  000bd	0f 57 c9	 xorps	 xmm1, xmm1
  000c0	f3 0f 10 85 68
	01 00 00	 movss	 xmm0, DWORD PTR AspectRatio$[rbp]
  000c8	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  000cd	0f b6 c0	 movzx	 eax, al
  000d0	85 c0		 test	 eax, eax
  000d2	74 22		 je	 SHORT $LN6@XMMatrixPe
  000d4	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
  000da	83 c0 03	 add	 eax, 3
  000dd	44 8b c0	 mov	 r8d, eax
  000e0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GA@CLJELBLH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
  000ee	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000f4	33 c0		 xor	 eax, eax
$LN6@XMMatrixPe:

; 2449 :     assert(!XMScalarNearEqual(FarZ, NearZ, 0.00001f));

  000f6	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3727c5ac
  000fe	f3 0f 10 8d 70
	01 00 00	 movss	 xmm1, DWORD PTR NearZ$[rbp]
  00106	f3 0f 10 85 78
	01 00 00	 movss	 xmm0, DWORD PTR FarZ$[rbp]
  0010e	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  00113	0f b6 c0	 movzx	 eax, al
  00116	85 c0		 test	 eax, eax
  00118	74 22		 je	 SHORT $LN7@XMMatrixPe
  0011a	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
  00120	83 c0 04	 add	 eax, 4
  00123	44 8b c0	 mov	 r8d, eax
  00126	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0012d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
  00134	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0013a	33 c0		 xor	 eax, eax
$LN7@XMMatrixPe:

; 2450 : 
; 2451 : #if defined(_XM_NO_INTRINSICS_)
; 2452 : 
; 2453 :     float    SinFov;
; 2454 :     float    CosFov;
; 2455 :     XMScalarSinCos(&SinFov, &CosFov, 0.5f * FovAngleY);
; 2456 : 
; 2457 :     float Height = CosFov / SinFov;
; 2458 :     float Width = Height / AspectRatio;
; 2459 :     float fRange = FarZ / (FarZ - NearZ);
; 2460 : 
; 2461 :     XMMATRIX M;
; 2462 :     M.m[0][0] = Width;
; 2463 :     M.m[0][1] = 0.0f;
; 2464 :     M.m[0][2] = 0.0f;
; 2465 :     M.m[0][3] = 0.0f;
; 2466 : 
; 2467 :     M.m[1][0] = 0.0f;
; 2468 :     M.m[1][1] = Height;
; 2469 :     M.m[1][2] = 0.0f;
; 2470 :     M.m[1][3] = 0.0f;
; 2471 : 
; 2472 :     M.m[2][0] = 0.0f;
; 2473 :     M.m[2][1] = 0.0f;
; 2474 :     M.m[2][2] = fRange;
; 2475 :     M.m[2][3] = 1.0f;
; 2476 : 
; 2477 :     M.m[3][0] = 0.0f;
; 2478 :     M.m[3][1] = 0.0f;
; 2479 :     M.m[3][2] = -fRange * NearZ;
; 2480 :     M.m[3][3] = 0.0f;
; 2481 :     return M;
; 2482 : 
; 2483 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2484 :     float    SinFov;
; 2485 :     float    CosFov;
; 2486 :     XMScalarSinCos(&SinFov, &CosFov, 0.5f * FovAngleY);
; 2487 : 
; 2488 :     float fRange = FarZ / (FarZ - NearZ);
; 2489 :     float Height = CosFov / SinFov;
; 2490 :     float Width = Height / AspectRatio;
; 2491 :     const float32x4_t Zero = vdupq_n_f32(0);
; 2492 : 
; 2493 :     XMMATRIX M;
; 2494 :     M.r[0] = vsetq_lane_f32(Width, Zero, 0);
; 2495 :     M.r[1] = vsetq_lane_f32(Height, Zero, 1);
; 2496 :     M.r[2] = vsetq_lane_f32(fRange, g_XMIdentityR3.v, 2);
; 2497 :     M.r[3] = vsetq_lane_f32(-fRange * NearZ, Zero, 2);
; 2498 :     return M;
; 2499 : #elif defined(_XM_SSE_INTRINSICS_)
; 2500 :     float    SinFov;
; 2501 :     float    CosFov;
; 2502 :     XMScalarSinCos(&SinFov, &CosFov, 0.5f * FovAngleY);

  0013c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00144	f3 0f 59 85 60
	01 00 00	 mulss	 xmm0, DWORD PTR FovAngleY$[rbp]
  0014c	0f 28 d0	 movaps	 xmm2, xmm0
  0014f	48 8d 55 04	 lea	 rdx, QWORD PTR CosFov$[rbp]
  00153	48 8d 4d 00	 lea	 rcx, QWORD PTR SinFov$[rbp]
  00157	e8 00 00 00 00	 call	 ?XMScalarSinCos@DirectX@@YAXPEAM0M@Z ; DirectX::XMScalarSinCos

; 2503 : 
; 2504 :     float fRange = FarZ / (FarZ - NearZ);

  0015c	f3 0f 10 85 78
	01 00 00	 movss	 xmm0, DWORD PTR FarZ$[rbp]
  00164	f3 0f 5c 85 70
	01 00 00	 subss	 xmm0, DWORD PTR NearZ$[rbp]
  0016c	f3 0f 10 8d 78
	01 00 00	 movss	 xmm1, DWORD PTR FarZ$[rbp]
  00174	f3 0f 5e c8	 divss	 xmm1, xmm0
  00178	0f 28 c1	 movaps	 xmm0, xmm1
  0017b	f3 0f 11 45 08	 movss	 DWORD PTR fRange$[rbp], xmm0

; 2505 :     // Note: This is recorded on the stack
; 2506 :     float Height = CosFov / SinFov;

  00180	f3 0f 10 45 04	 movss	 xmm0, DWORD PTR CosFov$[rbp]
  00185	f3 0f 5e 45 00	 divss	 xmm0, DWORD PTR SinFov$[rbp]
  0018a	f3 0f 11 45 0c	 movss	 DWORD PTR Height$[rbp], xmm0

; 2507 :     XMVECTOR rMem = {
; 2508 :         Height / AspectRatio,

  0018f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR Height$[rbp]
  00194	f3 0f 5e 85 68
	01 00 00	 divss	 xmm0, DWORD PTR AspectRatio$[rbp]
  0019c	f3 0f 11 45 10	 movss	 DWORD PTR rMem$[rbp], xmm0

; 2509 :         Height,

  001a1	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR Height$[rbp]
  001a6	f3 0f 11 45 14	 movss	 DWORD PTR rMem$[rbp+4], xmm0

; 2510 :         fRange,

  001ab	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR fRange$[rbp]
  001b0	f3 0f 11 45 18	 movss	 DWORD PTR rMem$[rbp+8], xmm0

; 2511 :         -fRange * NearZ

  001b5	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR fRange$[rbp]
  001ba	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001c1	f3 0f 59 85 70
	01 00 00	 mulss	 xmm0, DWORD PTR NearZ$[rbp]
  001c9	f3 0f 11 45 1c	 movss	 DWORD PTR rMem$[rbp+12], xmm0

; 2512 :     };
; 2513 :     // Copy from memory to SSE register
; 2514 :     XMVECTOR vValues = rMem;

  001ce	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR rMem$[rbp]
  001d2	0f 29 45 20	 movaps	 XMMWORD PTR vValues$[rbp], xmm0

; 2515 :     XMVECTOR vTemp = _mm_setzero_ps();

  001d6	0f 57 c0	 xorps	 xmm0, xmm0
  001d9	0f 29 85 c0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  001e0	0f 28 85 c0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  001e7	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2516 :     // Copy x only
; 2517 :     vTemp = _mm_move_ss(vTemp, vValues);

  001eb	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  001ef	0f 28 4d 20	 movaps	 xmm1, XMMWORD PTR vValues$[rbp]
  001f3	f3 0f 10 c1	 movss	 xmm0, xmm1
  001f7	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  001fe	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  00205	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2518 :     // CosFov / SinFov,0,0,0
; 2519 :     XMMATRIX M;
; 2520 :     M.r[0] = vTemp;

  00209	b8 10 00 00 00	 mov	 eax, 16
  0020e	48 6b c0 00	 imul	 rax, rax, 0
  00212	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  00216	0f 11 44 05 40	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2521 :     // 0,Height / AspectRatio,0,0
; 2522 :     vTemp = vValues;

  0021b	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vValues$[rbp]
  0021f	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2523 :     vTemp = _mm_and_ps(vTemp, g_XMMaskY);

  00223	48 8d 95 f0 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0022a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskY
  00231	e8 00 00 00 00	 call	 ??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORU32::operator __m128
  00236	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  0023a	0f 54 00	 andps	 xmm0, XMMWORD PTR [rax]
  0023d	0f 29 85 e0 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00244	0f 28 85 e0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0024b	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2524 :     M.r[1] = vTemp;

  0024f	b8 10 00 00 00	 mov	 eax, 16
  00254	48 6b c0 01	 imul	 rax, rax, 1
  00258	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  0025c	0f 11 44 05 40	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2525 :     // x=fRange,y=-fRange * NearZ,0,1.0f
; 2526 :     vTemp = _mm_setzero_ps();

  00261	0f 57 c0	 xorps	 xmm0, xmm0
  00264	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  0026b	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  00272	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2527 :     vValues = _mm_shuffle_ps(vValues, g_XMIdentityR3, _MM_SHUFFLE(3, 2, 3, 2));

  00276	48 8d 95 20 01
	00 00		 lea	 rdx, QWORD PTR $T7[rbp]
  0027d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
  00284	e8 00 00 00 00	 call	 ??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
  00289	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vValues$[rbp]
  0028d	0f c6 00 ee	 shufps	 xmm0, XMMWORD PTR [rax], 238 ; 000000eeH
  00291	0f 29 85 10 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  00298	0f 28 85 10 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  0029f	0f 29 45 20	 movaps	 XMMWORD PTR vValues$[rbp], xmm0

; 2528 :     // 0,0,fRange,1.0f
; 2529 :     vTemp = _mm_shuffle_ps(vTemp, vValues, _MM_SHUFFLE(3, 0, 0, 0));

  002a3	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  002a7	0f c6 45 20 c0	 shufps	 xmm0, XMMWORD PTR vValues$[rbp], 192 ; 000000c0H
  002ac	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  002b3	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  002ba	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2530 :     M.r[2] = vTemp;

  002be	b8 10 00 00 00	 mov	 eax, 16
  002c3	48 6b c0 02	 imul	 rax, rax, 2
  002c7	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  002cb	0f 11 44 05 40	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2531 :     // 0,0,-fRange * NearZ,0.0f
; 2532 :     vTemp = _mm_shuffle_ps(vTemp, vValues, _MM_SHUFFLE(2, 1, 0, 0));

  002d0	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  002d4	0f c6 45 20 90	 shufps	 xmm0, XMMWORD PTR vValues$[rbp], 144 ; 00000090H
  002d9	0f 29 85 40 01
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  002e0	0f 28 85 40 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  002e7	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 2533 :     M.r[3] = vTemp;

  002eb	b8 10 00 00 00	 mov	 eax, 16
  002f0	48 6b c0 03	 imul	 rax, rax, 3
  002f4	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  002f8	0f 11 44 05 40	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2534 :     return M;

  002fd	0f 28 5d 70	 movaps	 xmm3, XMMWORD PTR M$[rbp+48]
  00301	0f 28 55 60	 movaps	 xmm2, XMMWORD PTR M$[rbp+32]
  00305	0f 28 4d 50	 movaps	 xmm1, XMMWORD PTR M$[rbp+16]
  00309	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR M$[rbp]

; 2535 : #endif
; 2536 : }

  0030d	48 8d a5 50 01
	00 00		 lea	 rsp, QWORD PTR [rbp+336]
  00314	5d		 pop	 rbp
  00315	c3		 ret	 0
?XMMatrixPerspectiveFovLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ENDP ; DirectX::XMMatrixPerspectiveFovLH
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMatrix.inl
;	COMDAT ?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z
_TEXT	SEGMENT
EyePosition$ = 0
EyeDirection$ = 16
UpDirection$ = 32
R2$ = 48
R0$ = 64
R1$ = 80
NegEyePosition$ = 96
D0$ = 112
D1$ = 128
D2$ = 144
M$ = 160
$T1 = 288
$T2 = 304
$T3 = 320
$T4 = 336
$T5 = 352
$T6 = 368
$T7 = 384
$T8 = 448
?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z PROC ; DirectX::XMMatrixLookToLH, COMDAT

; 2213 : {

$LN7:
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 81 ec 20 02
	00 00		 sub	 rsp, 544		; 00000220H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 45 00	 lea	 rax, QWORD PTR EyePosition$[rbp]
  00014	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR [rsp+576], rax
  0001c	48 8d 45 10	 lea	 rax, QWORD PTR EyeDirection$[rbp]
  00020	48 89 84 24 48
	02 00 00	 mov	 QWORD PTR [rsp+584], rax
  00028	48 8d 45 20	 lea	 rax, QWORD PTR UpDirection$[rbp]
  0002c	48 89 84 24 50
	02 00 00	 mov	 QWORD PTR [rsp+592], rax
  00034	0f 29 55 20	 movaps	 XMMWORD PTR UpDirection$[rbp], xmm2
  00038	0f 29 4d 10	 movaps	 XMMWORD PTR EyeDirection$[rbp], xmm1
  0003c	0f 29 45 00	 movaps	 XMMWORD PTR EyePosition$[rbp], xmm0
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4AFE615D_DirectXMathMatrix@inl
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2214 :     assert(!XMVector3Equal(EyeDirection, XMVectorZero()));

  0004c	e8 00 00 00 00	 call	 ?XMVectorZero@DirectX@@YQ?AT__m128@@XZ ; DirectX::XMVectorZero
  00051	0f 29 85 20 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00058	0f 28 8d 20 01
	00 00		 movaps	 xmm1, XMMWORD PTR $T1[rbp]
  0005f	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR EyeDirection$[rbp]
  00063	e8 00 00 00 00	 call	 ?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z ; DirectX::XMVector3Equal
  00068	0f b6 c0	 movzx	 eax, al
  0006b	85 c0		 test	 eax, eax
  0006d	74 21		 je	 SHORT $LN3@XMMatrixLo
  0006f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA
  00075	ff c0		 inc	 eax
  00077	44 8b c0	 mov	 r8d, eax
  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FM@KOIPKFLA@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@
  00088	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0008e	33 c0		 xor	 eax, eax
$LN3@XMMatrixLo:

; 2215 :     assert(!XMVector3IsInfinite(EyeDirection));

  00090	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR EyeDirection$[rbp]
  00094	e8 00 00 00 00	 call	 ?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z ; DirectX::XMVector3IsInfinite
  00099	0f b6 c0	 movzx	 eax, al
  0009c	85 c0		 test	 eax, eax
  0009e	74 22		 je	 SHORT $LN4@XMMatrixLo
  000a0	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA
  000a6	83 c0 02	 add	 eax, 2
  000a9	44 8b c0	 mov	 r8d, eax
  000ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@DOFHPLOD@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@
  000ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000c0	33 c0		 xor	 eax, eax
$LN4@XMMatrixLo:

; 2216 :     assert(!XMVector3Equal(UpDirection, XMVectorZero()));

  000c2	e8 00 00 00 00	 call	 ?XMVectorZero@DirectX@@YQ?AT__m128@@XZ ; DirectX::XMVectorZero
  000c7	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  000ce	0f 28 8d 30 01
	00 00		 movaps	 xmm1, XMMWORD PTR $T2[rbp]
  000d5	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR UpDirection$[rbp]
  000d9	e8 00 00 00 00	 call	 ?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z ; DirectX::XMVector3Equal
  000de	0f b6 c0	 movzx	 eax, al
  000e1	85 c0		 test	 eax, eax
  000e3	74 22		 je	 SHORT $LN5@XMMatrixLo
  000e5	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA
  000eb	83 c0 03	 add	 eax, 3
  000ee	44 8b c0	 mov	 r8d, eax
  000f1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FK@IBPGMKAB@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAE?$AAq?$AAu?$AAa?$AAl@
  000ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00105	33 c0		 xor	 eax, eax
$LN5@XMMatrixLo:

; 2217 :     assert(!XMVector3IsInfinite(UpDirection));

  00107	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR UpDirection$[rbp]
  0010b	e8 00 00 00 00	 call	 ?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z ; DirectX::XMVector3IsInfinite
  00110	0f b6 c0	 movzx	 eax, al
  00113	85 c0		 test	 eax, eax
  00115	74 22		 je	 SHORT $LN6@XMMatrixLo
  00117	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@2@T__m128@@00@Z@4JA
  0011d	83 c0 04	 add	 eax, 4
  00120	44 8b c0	 mov	 r8d, eax
  00123	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@PCOFFEBL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0012a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@JAOFAOOK@?$AA?$CB?$AAX?$AAM?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAI?$AAs?$AAI?$AAn?$AAf@
  00131	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00137	33 c0		 xor	 eax, eax
$LN6@XMMatrixLo:

; 2218 : 
; 2219 :     XMVECTOR R2 = XMVector3Normalize(EyeDirection);

  00139	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR EyeDirection$[rbp]
  0013d	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  00142	0f 29 45 30	 movaps	 XMMWORD PTR R2$[rbp], xmm0

; 2220 : 
; 2221 :     XMVECTOR R0 = XMVector3Cross(UpDirection, R2);

  00146	0f 28 4d 30	 movaps	 xmm1, XMMWORD PTR R2$[rbp]
  0014a	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR UpDirection$[rbp]
  0014e	e8 00 00 00 00	 call	 ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Cross
  00153	0f 29 45 40	 movaps	 XMMWORD PTR R0$[rbp], xmm0

; 2222 :     R0 = XMVector3Normalize(R0);

  00157	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR R0$[rbp]
  0015b	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  00160	0f 29 85 40 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00167	0f 28 85 40 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0016e	0f 29 45 40	 movaps	 XMMWORD PTR R0$[rbp], xmm0

; 2223 : 
; 2224 :     XMVECTOR R1 = XMVector3Cross(R2, R0);

  00172	0f 28 4d 40	 movaps	 xmm1, XMMWORD PTR R0$[rbp]
  00176	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR R2$[rbp]
  0017a	e8 00 00 00 00	 call	 ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Cross
  0017f	0f 29 45 50	 movaps	 XMMWORD PTR R1$[rbp], xmm0

; 2225 : 
; 2226 :     XMVECTOR NegEyePosition = XMVectorNegate(EyePosition);

  00183	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR EyePosition$[rbp]
  00187	e8 00 00 00 00	 call	 ?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVectorNegate
  0018c	0f 29 45 60	 movaps	 XMMWORD PTR NegEyePosition$[rbp], xmm0

; 2227 : 
; 2228 :     XMVECTOR D0 = XMVector3Dot(R0, NegEyePosition);

  00190	0f 28 4d 60	 movaps	 xmm1, XMMWORD PTR NegEyePosition$[rbp]
  00194	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR R0$[rbp]
  00198	e8 00 00 00 00	 call	 ?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Dot
  0019d	0f 29 45 70	 movaps	 XMMWORD PTR D0$[rbp], xmm0

; 2229 :     XMVECTOR D1 = XMVector3Dot(R1, NegEyePosition);

  001a1	0f 28 4d 60	 movaps	 xmm1, XMMWORD PTR NegEyePosition$[rbp]
  001a5	0f 28 45 50	 movaps	 xmm0, XMMWORD PTR R1$[rbp]
  001a9	e8 00 00 00 00	 call	 ?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Dot
  001ae	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR D1$[rbp], xmm0

; 2230 :     XMVECTOR D2 = XMVector3Dot(R2, NegEyePosition);

  001b5	0f 28 4d 60	 movaps	 xmm1, XMMWORD PTR NegEyePosition$[rbp]
  001b9	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR R2$[rbp]
  001bd	e8 00 00 00 00	 call	 ?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Dot
  001c2	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR D2$[rbp], xmm0

; 2231 : 
; 2232 :     XMMATRIX M;
; 2233 :     M.r[0] = XMVectorSelect(D0, R0, g_XMSelect1110.v);

  001c9	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
  001d0	0f 28 4d 40	 movaps	 xmm1, XMMWORD PTR R0$[rbp]
  001d4	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR D0$[rbp]
  001d8	e8 00 00 00 00	 call	 ?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z ; DirectX::XMVectorSelect
  001dd	0f 29 85 50 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  001e4	b8 10 00 00 00	 mov	 eax, 16
  001e9	48 6b c0 00	 imul	 rax, rax, 0
  001ed	0f 28 85 50 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  001f4	0f 11 84 05 a0
	00 00 00	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2234 :     M.r[1] = XMVectorSelect(D1, R1, g_XMSelect1110.v);

  001fc	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
  00203	0f 28 4d 50	 movaps	 xmm1, XMMWORD PTR R1$[rbp]
  00207	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR D1$[rbp]
  0020e	e8 00 00 00 00	 call	 ?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z ; DirectX::XMVectorSelect
  00213	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  0021a	b8 10 00 00 00	 mov	 eax, 16
  0021f	48 6b c0 01	 imul	 rax, rax, 1
  00223	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  0022a	0f 11 84 05 a0
	00 00 00	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2235 :     M.r[2] = XMVectorSelect(D2, R2, g_XMSelect1110.v);

  00232	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
  00239	0f 28 4d 30	 movaps	 xmm1, XMMWORD PTR R2$[rbp]
  0023d	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR D2$[rbp]
  00244	e8 00 00 00 00	 call	 ?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z ; DirectX::XMVectorSelect
  00249	0f 29 85 70 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  00250	b8 10 00 00 00	 mov	 eax, 16
  00255	48 6b c0 02	 imul	 rax, rax, 2
  00259	0f 28 85 70 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  00260	0f 11 84 05 a0
	00 00 00	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2236 :     M.r[3] = g_XMIdentityR3.v;

  00268	b8 10 00 00 00	 mov	 eax, 16
  0026d	48 6b c0 03	 imul	 rax, rax, 3
  00271	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
  00278	0f 11 84 05 a0
	00 00 00	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 2237 : 
; 2238 :     M = XMMatrixTranspose(M);

  00280	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR M$[rbp]
  00287	0f 28 8d b0 00
	00 00		 movaps	 xmm1, XMMWORD PTR M$[rbp+16]
  0028e	0f 28 95 c0 00
	00 00		 movaps	 xmm2, XMMWORD PTR M$[rbp+32]
  00295	0f 28 9d d0 00
	00 00		 movaps	 xmm3, XMMWORD PTR M$[rbp+48]
  0029c	e8 00 00 00 00	 call	 ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
  002a1	0f 11 9d f0 01
	00 00		 movups	 XMMWORD PTR $T8[rbp+48], xmm3
  002a8	0f 11 95 e0 01
	00 00		 movups	 XMMWORD PTR $T8[rbp+32], xmm2
  002af	0f 11 8d d0 01
	00 00		 movups	 XMMWORD PTR $T8[rbp+16], xmm1
  002b6	0f 11 85 c0 01
	00 00		 movups	 XMMWORD PTR $T8[rbp], xmm0
  002bd	48 8d 85 80 01
	00 00		 lea	 rax, QWORD PTR $T7[rbp]
  002c4	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  002cb	48 8b f8	 mov	 rdi, rax
  002ce	48 8b f1	 mov	 rsi, rcx
  002d1	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  002d6	f3 a4		 rep movsb
  002d8	48 8d 85 a0 00
	00 00		 lea	 rax, QWORD PTR M$[rbp]
  002df	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  002e6	48 8b f8	 mov	 rdi, rax
  002e9	48 8b f1	 mov	 rsi, rcx
  002ec	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  002f1	f3 a4		 rep movsb

; 2239 : 
; 2240 :     return M;

  002f3	0f 28 9d d0 00
	00 00		 movaps	 xmm3, XMMWORD PTR M$[rbp+48]
  002fa	0f 28 95 c0 00
	00 00		 movaps	 xmm2, XMMWORD PTR M$[rbp+32]
  00301	0f 28 8d b0 00
	00 00		 movaps	 xmm1, XMMWORD PTR M$[rbp+16]
  00308	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR M$[rbp]

; 2241 : }

  0030f	48 8d a5 00 02
	00 00		 lea	 rsp, QWORD PTR [rbp+512]
  00316	5f		 pop	 rdi
  00317	5e		 pop	 rsi
  00318	5d		 pop	 rbp
  00319	c3		 ret	 0
?XMMatrixLookToLH@DirectX@@YQ?AUXMMATRIX@1@T__m128@@00@Z ENDP ; DirectX::XMMatrixLookToLH
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMatrix.inl
;	COMDAT ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z
_TEXT	SEGMENT
M$ = 0
vTemp1$ = 64
vTemp3$ = 80
vTemp2$ = 96
vTemp4$ = 112
mResult$ = 128
$T1 = 256
$T2 = 272
$T3 = 288
$T4 = 304
$T5 = 320
$T6 = 336
$T7 = 352
$T8 = 368
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z PROC	; DirectX::XMMatrixTranspose, COMDAT

; 698  : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec a0 01
	00 00		 sub	 rsp, 416		; 000001a0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR M$[rbp]
  00012	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR [rsp+432], rax
  0001a	0f 29 5d 30	 movaps	 XMMWORD PTR M$[rbp+48], xmm3
  0001e	0f 29 55 20	 movaps	 XMMWORD PTR M$[rbp+32], xmm2
  00022	0f 29 4d 10	 movaps	 XMMWORD PTR M$[rbp+16], xmm1
  00026	0f 29 45 00	 movaps	 XMMWORD PTR M$[rbp], xmm0
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4AFE615D_DirectXMathMatrix@inl
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 699  : #if defined(_XM_NO_INTRINSICS_)
; 700  : 
; 701  :     // Original matrix:
; 702  :     //
; 703  :     //     m00m01m02m03
; 704  :     //     m10m11m12m13
; 705  :     //     m20m21m22m23
; 706  :     //     m30m31m32m33
; 707  : 
; 708  :     XMMATRIX P;
; 709  :     P.r[0] = XMVectorMergeXY(M.r[0], M.r[2]); // m00m20m01m21
; 710  :     P.r[1] = XMVectorMergeXY(M.r[1], M.r[3]); // m10m30m11m31
; 711  :     P.r[2] = XMVectorMergeZW(M.r[0], M.r[2]); // m02m22m03m23
; 712  :     P.r[3] = XMVectorMergeZW(M.r[1], M.r[3]); // m12m32m13m33
; 713  : 
; 714  :     XMMATRIX MT;
; 715  :     MT.r[0] = XMVectorMergeXY(P.r[0], P.r[1]); // m00m10m20m30
; 716  :     MT.r[1] = XMVectorMergeZW(P.r[0], P.r[1]); // m01m11m21m31
; 717  :     MT.r[2] = XMVectorMergeXY(P.r[2], P.r[3]); // m02m12m22m32
; 718  :     MT.r[3] = XMVectorMergeZW(P.r[2], P.r[3]); // m03m13m23m33
; 719  :     return MT;
; 720  : 
; 721  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 722  :     float32x4x2_t P0 = vzipq_f32(M.r[0], M.r[2]);
; 723  :     float32x4x2_t P1 = vzipq_f32(M.r[1], M.r[3]);
; 724  : 
; 725  :     float32x4x2_t T0 = vzipq_f32(P0.val[0], P1.val[0]);
; 726  :     float32x4x2_t T1 = vzipq_f32(P0.val[1], P1.val[1]);
; 727  : 
; 728  :     XMMATRIX mResult;
; 729  :     mResult.r[0] = T0.val[0];
; 730  :     mResult.r[1] = T0.val[1];
; 731  :     mResult.r[2] = T1.val[0];
; 732  :     mResult.r[3] = T1.val[1];
; 733  :     return mResult;
; 734  : #elif defined(_XM_AVX2_INTRINSICS_)
; 735  :     __m256 t0 = _mm256_castps128_ps256(M.r[0]);
; 736  :     t0 = _mm256_insertf128_ps(t0, M.r[1], 1);
; 737  :     __m256 t1 = _mm256_castps128_ps256(M.r[2]);
; 738  :     t1 = _mm256_insertf128_ps(t1, M.r[3], 1);
; 739  : 
; 740  :     __m256 vTemp = _mm256_unpacklo_ps(t0, t1);
; 741  :     __m256 vTemp2 = _mm256_unpackhi_ps(t0, t1);
; 742  :     __m256 vTemp3 = _mm256_permute2f128_ps(vTemp, vTemp2, 0x20);
; 743  :     __m256 vTemp4 = _mm256_permute2f128_ps(vTemp, vTemp2, 0x31);
; 744  :     vTemp = _mm256_unpacklo_ps(vTemp3, vTemp4);
; 745  :     vTemp2 = _mm256_unpackhi_ps(vTemp3, vTemp4);
; 746  :     t0 = _mm256_permute2f128_ps(vTemp, vTemp2, 0x20);
; 747  :     t1 = _mm256_permute2f128_ps(vTemp, vTemp2, 0x31);
; 748  : 
; 749  :     XMMATRIX mResult;
; 750  :     mResult.r[0] = _mm256_castps256_ps128(t0);
; 751  :     mResult.r[1] = _mm256_extractf128_ps(t0, 1);
; 752  :     mResult.r[2] = _mm256_castps256_ps128(t1);
; 753  :     mResult.r[3] = _mm256_extractf128_ps(t1, 1);
; 754  :     return mResult;
; 755  : #elif defined(_XM_SSE_INTRINSICS_)
; 756  :     // x.x,x.y,y.x,y.y
; 757  :     XMVECTOR vTemp1 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(1, 0, 1, 0));

  00036	b8 10 00 00 00	 mov	 eax, 16
  0003b	48 6b c0 01	 imul	 rax, rax, 1
  0003f	b9 10 00 00 00	 mov	 ecx, 16
  00044	48 6b c9 00	 imul	 rcx, rcx, 0
  00048	0f 10 44 0d 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rcx]
  0004d	0f c6 44 05 00
	44		 shufps	 xmm0, XMMWORD PTR M$[rbp+rax], 68 ; 00000044H
  00053	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0005a	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00061	0f 29 45 40	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 758  :     // x.z,x.w,y.z,y.w
; 759  :     XMVECTOR vTemp3 = _mm_shuffle_ps(M.r[0], M.r[1], _MM_SHUFFLE(3, 2, 3, 2));

  00065	b8 10 00 00 00	 mov	 eax, 16
  0006a	48 6b c0 01	 imul	 rax, rax, 1
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	48 6b c9 00	 imul	 rcx, rcx, 0
  00077	0f 10 44 0d 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rcx]
  0007c	0f c6 44 05 00
	ee		 shufps	 xmm0, XMMWORD PTR M$[rbp+rax], 238 ; 000000eeH
  00082	0f 29 85 10 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00089	0f 28 85 10 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  00090	0f 29 45 50	 movaps	 XMMWORD PTR vTemp3$[rbp], xmm0

; 760  :     // z.x,z.y,w.x,w.y
; 761  :     XMVECTOR vTemp2 = _mm_shuffle_ps(M.r[2], M.r[3], _MM_SHUFFLE(1, 0, 1, 0));

  00094	b8 10 00 00 00	 mov	 eax, 16
  00099	48 6b c0 03	 imul	 rax, rax, 3
  0009d	b9 10 00 00 00	 mov	 ecx, 16
  000a2	48 6b c9 02	 imul	 rcx, rcx, 2
  000a6	0f 10 44 0d 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rcx]
  000ab	0f c6 44 05 00
	44		 shufps	 xmm0, XMMWORD PTR M$[rbp+rax], 68 ; 00000044H
  000b1	0f 29 85 20 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  000b8	0f 28 85 20 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  000bf	0f 29 45 60	 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 762  :     // z.z,z.w,w.z,w.w
; 763  :     XMVECTOR vTemp4 = _mm_shuffle_ps(M.r[2], M.r[3], _MM_SHUFFLE(3, 2, 3, 2));

  000c3	b8 10 00 00 00	 mov	 eax, 16
  000c8	48 6b c0 03	 imul	 rax, rax, 3
  000cc	b9 10 00 00 00	 mov	 ecx, 16
  000d1	48 6b c9 02	 imul	 rcx, rcx, 2
  000d5	0f 10 44 0d 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rcx]
  000da	0f c6 44 05 00
	ee		 shufps	 xmm0, XMMWORD PTR M$[rbp+rax], 238 ; 000000eeH
  000e0	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000e7	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000ee	0f 29 45 70	 movaps	 XMMWORD PTR vTemp4$[rbp], xmm0

; 764  : 
; 765  :     XMMATRIX mResult;
; 766  :     // x.x,y.x,z.x,w.x
; 767  :     mResult.r[0] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(2, 0, 2, 0));

  000f2	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  000f6	0f c6 45 60 88	 shufps	 xmm0, XMMWORD PTR vTemp2$[rbp], 136 ; 00000088H
  000fb	0f 29 85 40 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  00102	b8 10 00 00 00	 mov	 eax, 16
  00107	48 6b c0 00	 imul	 rax, rax, 0
  0010b	0f 28 85 40 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  00112	0f 11 84 05 80
	00 00 00	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 768  :     // x.y,y.y,z.y,w.y
; 769  :     mResult.r[1] = _mm_shuffle_ps(vTemp1, vTemp2, _MM_SHUFFLE(3, 1, 3, 1));

  0011a	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  0011e	0f c6 45 60 dd	 shufps	 xmm0, XMMWORD PTR vTemp2$[rbp], 221 ; 000000ddH
  00123	0f 29 85 50 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  0012a	b8 10 00 00 00	 mov	 eax, 16
  0012f	48 6b c0 01	 imul	 rax, rax, 1
  00133	0f 28 85 50 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  0013a	0f 11 84 05 80
	00 00 00	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 770  :     // x.z,y.z,z.z,w.z
; 771  :     mResult.r[2] = _mm_shuffle_ps(vTemp3, vTemp4, _MM_SHUFFLE(2, 0, 2, 0));

  00142	0f 28 45 50	 movaps	 xmm0, XMMWORD PTR vTemp3$[rbp]
  00146	0f c6 45 70 88	 shufps	 xmm0, XMMWORD PTR vTemp4$[rbp], 136 ; 00000088H
  0014b	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  00152	b8 10 00 00 00	 mov	 eax, 16
  00157	48 6b c0 02	 imul	 rax, rax, 2
  0015b	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  00162	0f 11 84 05 80
	00 00 00	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 772  :     // x.w,y.w,z.w,w.w
; 773  :     mResult.r[3] = _mm_shuffle_ps(vTemp3, vTemp4, _MM_SHUFFLE(3, 1, 3, 1));

  0016a	0f 28 45 50	 movaps	 xmm0, XMMWORD PTR vTemp3$[rbp]
  0016e	0f c6 45 70 dd	 shufps	 xmm0, XMMWORD PTR vTemp4$[rbp], 221 ; 000000ddH
  00173	0f 29 85 70 01
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  0017a	b8 10 00 00 00	 mov	 eax, 16
  0017f	48 6b c0 03	 imul	 rax, rax, 3
  00183	0f 28 85 70 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  0018a	0f 11 84 05 80
	00 00 00	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 774  :     return mResult;

  00192	0f 28 9d b0 00
	00 00		 movaps	 xmm3, XMMWORD PTR mResult$[rbp+48]
  00199	0f 28 95 a0 00
	00 00		 movaps	 xmm2, XMMWORD PTR mResult$[rbp+32]
  001a0	0f 28 8d 90 00
	00 00		 movaps	 xmm1, XMMWORD PTR mResult$[rbp+16]
  001a7	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR mResult$[rbp]

; 775  : #endif
; 776  : }

  001ae	48 8d a5 80 01
	00 00		 lea	 rsp, QWORD PTR [rbp+384]
  001b5	5d		 pop	 rbp
  001b6	c3		 ret	 0
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ENDP	; DirectX::XMMatrixTranspose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathMatrix.inl
;	COMDAT ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z
_TEXT	SEGMENT
M1$ = 0
mResult$ = 64
vW$ = 128
vX$ = 144
vY$ = 160
vZ$ = 176
$T1 = 320
$T2 = 336
$T3 = 352
$T4 = 368
$T5 = 384
$T6 = 400
$T7 = 416
$T8 = 432
$T9 = 448
$T10 = 464
$T11 = 480
$T12 = 496
$T13 = 512
$T14 = 528
$T15 = 544
$T16 = 560
$T17 = 576
$T18 = 592
$T19 = 608
$T20 = 624
$T21 = 640
$T22 = 656
$T23 = 672
$T24 = 688
$T25 = 704
$T26 = 720
$T27 = 736
$T28 = 752
$T29 = 768
$T30 = 784
$T31 = 800
$T32 = 816
$T33 = 832
$T34 = 848
$T35 = 864
$T36 = 880
$T37 = 896
$T38 = 912
$T39 = 928
$T40 = 944
$T41 = 960
$T42 = 976
$T43 = 992
$T44 = 1008
M2$ = 1048
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z PROC ; DirectX::XMMatrixMultiply, COMDAT

; 233  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 81 ec 20 04
	00 00		 sub	 rsp, 1056		; 00000420H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 45 00	 lea	 rax, QWORD PTR M1$[rbp]
  00016	48 89 84 24 30
	04 00 00	 mov	 QWORD PTR [rsp+1072], rax
  0001e	0f 29 5d 30	 movaps	 XMMWORD PTR M1$[rbp+48], xmm3
  00022	0f 29 55 20	 movaps	 XMMWORD PTR M1$[rbp+32], xmm2
  00026	0f 29 4d 10	 movaps	 XMMWORD PTR M1$[rbp+16], xmm1
  0002a	0f 29 45 00	 movaps	 XMMWORD PTR M1$[rbp], xmm0
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4AFE615D_DirectXMathMatrix@inl
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 234  : #if defined(_XM_NO_INTRINSICS_)
; 235  :     XMMATRIX mResult;
; 236  :     // Cache the invariants in registers
; 237  :     float x = M1.m[0][0];
; 238  :     float y = M1.m[0][1];
; 239  :     float z = M1.m[0][2];
; 240  :     float w = M1.m[0][3];
; 241  :     // Perform the operation on the first row
; 242  :     mResult.m[0][0] = (M2.m[0][0] * x) + (M2.m[1][0] * y) + (M2.m[2][0] * z) + (M2.m[3][0] * w);
; 243  :     mResult.m[0][1] = (M2.m[0][1] * x) + (M2.m[1][1] * y) + (M2.m[2][1] * z) + (M2.m[3][1] * w);
; 244  :     mResult.m[0][2] = (M2.m[0][2] * x) + (M2.m[1][2] * y) + (M2.m[2][2] * z) + (M2.m[3][2] * w);
; 245  :     mResult.m[0][3] = (M2.m[0][3] * x) + (M2.m[1][3] * y) + (M2.m[2][3] * z) + (M2.m[3][3] * w);
; 246  :     // Repeat for all the other rows
; 247  :     x = M1.m[1][0];
; 248  :     y = M1.m[1][1];
; 249  :     z = M1.m[1][2];
; 250  :     w = M1.m[1][3];
; 251  :     mResult.m[1][0] = (M2.m[0][0] * x) + (M2.m[1][0] * y) + (M2.m[2][0] * z) + (M2.m[3][0] * w);
; 252  :     mResult.m[1][1] = (M2.m[0][1] * x) + (M2.m[1][1] * y) + (M2.m[2][1] * z) + (M2.m[3][1] * w);
; 253  :     mResult.m[1][2] = (M2.m[0][2] * x) + (M2.m[1][2] * y) + (M2.m[2][2] * z) + (M2.m[3][2] * w);
; 254  :     mResult.m[1][3] = (M2.m[0][3] * x) + (M2.m[1][3] * y) + (M2.m[2][3] * z) + (M2.m[3][3] * w);
; 255  :     x = M1.m[2][0];
; 256  :     y = M1.m[2][1];
; 257  :     z = M1.m[2][2];
; 258  :     w = M1.m[2][3];
; 259  :     mResult.m[2][0] = (M2.m[0][0] * x) + (M2.m[1][0] * y) + (M2.m[2][0] * z) + (M2.m[3][0] * w);
; 260  :     mResult.m[2][1] = (M2.m[0][1] * x) + (M2.m[1][1] * y) + (M2.m[2][1] * z) + (M2.m[3][1] * w);
; 261  :     mResult.m[2][2] = (M2.m[0][2] * x) + (M2.m[1][2] * y) + (M2.m[2][2] * z) + (M2.m[3][2] * w);
; 262  :     mResult.m[2][3] = (M2.m[0][3] * x) + (M2.m[1][3] * y) + (M2.m[2][3] * z) + (M2.m[3][3] * w);
; 263  :     x = M1.m[3][0];
; 264  :     y = M1.m[3][1];
; 265  :     z = M1.m[3][2];
; 266  :     w = M1.m[3][3];
; 267  :     mResult.m[3][0] = (M2.m[0][0] * x) + (M2.m[1][0] * y) + (M2.m[2][0] * z) + (M2.m[3][0] * w);
; 268  :     mResult.m[3][1] = (M2.m[0][1] * x) + (M2.m[1][1] * y) + (M2.m[2][1] * z) + (M2.m[3][1] * w);
; 269  :     mResult.m[3][2] = (M2.m[0][2] * x) + (M2.m[1][2] * y) + (M2.m[2][2] * z) + (M2.m[3][2] * w);
; 270  :     mResult.m[3][3] = (M2.m[0][3] * x) + (M2.m[1][3] * y) + (M2.m[2][3] * z) + (M2.m[3][3] * w);
; 271  :     return mResult;
; 272  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 273  :     XMMATRIX mResult;
; 274  :     float32x2_t VL = vget_low_f32(M1.r[0]);
; 275  :     float32x2_t VH = vget_high_f32(M1.r[0]);
; 276  :     // Perform the operation on the first row
; 277  :     float32x4_t vX = vmulq_lane_f32(M2.r[0], VL, 0);
; 278  :     float32x4_t vY = vmulq_lane_f32(M2.r[1], VL, 1);
; 279  :     float32x4_t vZ = vmlaq_lane_f32(vX, M2.r[2], VH, 0);
; 280  :     float32x4_t vW = vmlaq_lane_f32(vY, M2.r[3], VH, 1);
; 281  :     mResult.r[0] = vaddq_f32(vZ, vW);
; 282  :     // Repeat for the other 3 rows
; 283  :     VL = vget_low_f32(M1.r[1]);
; 284  :     VH = vget_high_f32(M1.r[1]);
; 285  :     vX = vmulq_lane_f32(M2.r[0], VL, 0);
; 286  :     vY = vmulq_lane_f32(M2.r[1], VL, 1);
; 287  :     vZ = vmlaq_lane_f32(vX, M2.r[2], VH, 0);
; 288  :     vW = vmlaq_lane_f32(vY, M2.r[3], VH, 1);
; 289  :     mResult.r[1] = vaddq_f32(vZ, vW);
; 290  :     VL = vget_low_f32(M1.r[2]);
; 291  :     VH = vget_high_f32(M1.r[2]);
; 292  :     vX = vmulq_lane_f32(M2.r[0], VL, 0);
; 293  :     vY = vmulq_lane_f32(M2.r[1], VL, 1);
; 294  :     vZ = vmlaq_lane_f32(vX, M2.r[2], VH, 0);
; 295  :     vW = vmlaq_lane_f32(vY, M2.r[3], VH, 1);
; 296  :     mResult.r[2] = vaddq_f32(vZ, vW);
; 297  :     VL = vget_low_f32(M1.r[3]);
; 298  :     VH = vget_high_f32(M1.r[3]);
; 299  :     vX = vmulq_lane_f32(M2.r[0], VL, 0);
; 300  :     vY = vmulq_lane_f32(M2.r[1], VL, 1);
; 301  :     vZ = vmlaq_lane_f32(vX, M2.r[2], VH, 0);
; 302  :     vW = vmlaq_lane_f32(vY, M2.r[3], VH, 1);
; 303  :     mResult.r[3] = vaddq_f32(vZ, vW);
; 304  :     return mResult;
; 305  : #elif defined(_XM_AVX2_INTRINSICS_)
; 306  :     __m256 t0 = _mm256_castps128_ps256(M1.r[0]);
; 307  :     t0 = _mm256_insertf128_ps(t0, M1.r[1], 1);
; 308  :     __m256 t1 = _mm256_castps128_ps256(M1.r[2]);
; 309  :     t1 = _mm256_insertf128_ps(t1, M1.r[3], 1);
; 310  : 
; 311  :     __m256 u0 = _mm256_castps128_ps256(M2.r[0]);
; 312  :     u0 = _mm256_insertf128_ps(u0, M2.r[1], 1);
; 313  :     __m256 u1 = _mm256_castps128_ps256(M2.r[2]);
; 314  :     u1 = _mm256_insertf128_ps(u1, M2.r[3], 1);
; 315  : 
; 316  :     __m256 a0 = _mm256_shuffle_ps(t0, t0, _MM_SHUFFLE(0, 0, 0, 0));
; 317  :     __m256 a1 = _mm256_shuffle_ps(t1, t1, _MM_SHUFFLE(0, 0, 0, 0));
; 318  :     __m256 b0 = _mm256_permute2f128_ps(u0, u0, 0x00);
; 319  :     __m256 c0 = _mm256_mul_ps(a0, b0);
; 320  :     __m256 c1 = _mm256_mul_ps(a1, b0);
; 321  : 
; 322  :     a0 = _mm256_shuffle_ps(t0, t0, _MM_SHUFFLE(1, 1, 1, 1));
; 323  :     a1 = _mm256_shuffle_ps(t1, t1, _MM_SHUFFLE(1, 1, 1, 1));
; 324  :     b0 = _mm256_permute2f128_ps(u0, u0, 0x11);
; 325  :     __m256 c2 = _mm256_fmadd_ps(a0, b0, c0);
; 326  :     __m256 c3 = _mm256_fmadd_ps(a1, b0, c1);
; 327  : 
; 328  :     a0 = _mm256_shuffle_ps(t0, t0, _MM_SHUFFLE(2, 2, 2, 2));
; 329  :     a1 = _mm256_shuffle_ps(t1, t1, _MM_SHUFFLE(2, 2, 2, 2));
; 330  :     __m256 b1 = _mm256_permute2f128_ps(u1, u1, 0x00);
; 331  :     __m256 c4 = _mm256_mul_ps(a0, b1);
; 332  :     __m256 c5 = _mm256_mul_ps(a1, b1);
; 333  : 
; 334  :     a0 = _mm256_shuffle_ps(t0, t0, _MM_SHUFFLE(3, 3, 3, 3));
; 335  :     a1 = _mm256_shuffle_ps(t1, t1, _MM_SHUFFLE(3, 3, 3, 3));
; 336  :     b1 = _mm256_permute2f128_ps(u1, u1, 0x11);
; 337  :     __m256 c6 = _mm256_fmadd_ps(a0, b1, c4);
; 338  :     __m256 c7 = _mm256_fmadd_ps(a1, b1, c5);
; 339  : 
; 340  :     t0 = _mm256_add_ps(c2, c6);
; 341  :     t1 = _mm256_add_ps(c3, c7);
; 342  : 
; 343  :     XMMATRIX mResult;
; 344  :     mResult.r[0] = _mm256_castps256_ps128(t0);
; 345  :     mResult.r[1] = _mm256_extractf128_ps(t0, 1);
; 346  :     mResult.r[2] = _mm256_castps256_ps128(t1);
; 347  :     mResult.r[3] = _mm256_extractf128_ps(t1, 1);
; 348  :     return mResult;
; 349  : #elif defined(_XM_SSE_INTRINSICS_)
; 350  :     XMMATRIX mResult;
; 351  :     // Splat the component X,Y,Z then W
; 352  : #if defined(_XM_AVX_INTRINSICS_)
; 353  :     XMVECTOR vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[0]) + 0);
; 354  :     XMVECTOR vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[0]) + 1);
; 355  :     XMVECTOR vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[0]) + 2);
; 356  :     XMVECTOR vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[0]) + 3);
; 357  : #else
; 358  :     // Use vW to hold the original row
; 359  :     XMVECTOR vW = M1.r[0];

  0003a	b8 10 00 00 00	 mov	 eax, 16
  0003f	48 6b c0 00	 imul	 rax, rax, 0
  00043	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  00048	0f 11 85 80 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 360  :     XMVECTOR vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  0004f	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00056	0f c6 85 80 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  0005e	0f 29 85 40 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00065	0f 28 85 40 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0006c	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 361  :     XMVECTOR vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  00073	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0007a	0f c6 85 80 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00082	0f 29 85 50 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00089	0f 28 85 50 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  00090	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 362  :     XMVECTOR vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  00097	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0009e	0f c6 85 80 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  000a6	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  000ad	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  000b4	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 363  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  000bb	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  000c2	0f c6 85 80 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  000ca	0f 29 85 70 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000d1	0f 28 85 70 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000d8	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 364  : #endif
; 365  :     // Perform the operation on the first row
; 366  :     vX = _mm_mul_ps(vX, M2.r[0]);

  000df	b8 10 00 00 00	 mov	 eax, 16
  000e4	48 6b c0 00	 imul	 rax, rax, 0
  000e8	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  000ef	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  000f6	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  000fa	0f 29 85 80 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  00101	0f 28 85 80 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  00108	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 367  :     vY = _mm_mul_ps(vY, M2.r[1]);

  0010f	b8 10 00 00 00	 mov	 eax, 16
  00114	48 6b c0 01	 imul	 rax, rax, 1
  00118	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0011f	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00126	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0012a	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  00131	0f 28 85 90 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  00138	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 368  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  0013f	b8 10 00 00 00	 mov	 eax, 16
  00144	48 6b c0 02	 imul	 rax, rax, 2
  00148	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0014f	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  00156	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0015a	0f 29 85 a0 01
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  00161	0f 28 85 a0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  00168	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 369  :     vW = _mm_mul_ps(vW, M2.r[3]);

  0016f	b8 10 00 00 00	 mov	 eax, 16
  00174	48 6b c0 03	 imul	 rax, rax, 3
  00178	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0017f	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00186	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0018a	0f 29 85 b0 01
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  00191	0f 28 85 b0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  00198	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 370  :     // Perform a binary add to reduce cumulative errors
; 371  :     vX = _mm_add_ps(vX, vZ);

  0019f	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  001a6	0f 58 85 b0 00
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  001ad	0f 29 85 c0 01
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  001b4	0f 28 85 c0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  001bb	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 372  :     vY = _mm_add_ps(vY, vW);

  001c2	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  001c9	0f 58 85 80 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  001d0	0f 29 85 d0 01
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  001d7	0f 28 85 d0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  001de	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 373  :     vX = _mm_add_ps(vX, vY);

  001e5	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  001ec	0f 58 85 a0 00
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  001f3	0f 29 85 e0 01
	00 00		 movaps	 XMMWORD PTR $T11[rbp], xmm0
  001fa	0f 28 85 e0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T11[rbp]
  00201	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 374  :     mResult.r[0] = vX;

  00208	b8 10 00 00 00	 mov	 eax, 16
  0020d	48 6b c0 00	 imul	 rax, rax, 0
  00211	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00218	0f 11 44 05 40	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 375  :     // Repeat for the other 3 rows
; 376  : #if defined(_XM_AVX_INTRINSICS_)
; 377  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 0);
; 378  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 1);
; 379  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 2);
; 380  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[1]) + 3);
; 381  : #else
; 382  :     vW = M1.r[1];

  0021d	b8 10 00 00 00	 mov	 eax, 16
  00222	48 6b c0 01	 imul	 rax, rax, 1
  00226	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  0022b	0f 11 85 80 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 383  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  00232	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00239	0f c6 85 80 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  00241	0f 29 85 f0 01
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  00248	0f 28 85 f0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T12[rbp]
  0024f	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 384  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  00256	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0025d	0f c6 85 80 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00265	0f 29 85 00 02
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  0026c	0f 28 85 00 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  00273	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 385  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  0027a	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00281	0f c6 85 80 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  00289	0f 29 85 10 02
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  00290	0f 28 85 10 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  00297	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 386  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  0029e	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  002a5	0f c6 85 80 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  002ad	0f 29 85 20 02
	00 00		 movaps	 XMMWORD PTR $T15[rbp], xmm0
  002b4	0f 28 85 20 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T15[rbp]
  002bb	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 387  : #endif
; 388  :     vX = _mm_mul_ps(vX, M2.r[0]);

  002c2	b8 10 00 00 00	 mov	 eax, 16
  002c7	48 6b c0 00	 imul	 rax, rax, 0
  002cb	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  002d2	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  002d9	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  002dd	0f 29 85 30 02
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  002e4	0f 28 85 30 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  002eb	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 389  :     vY = _mm_mul_ps(vY, M2.r[1]);

  002f2	b8 10 00 00 00	 mov	 eax, 16
  002f7	48 6b c0 01	 imul	 rax, rax, 1
  002fb	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00302	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00309	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0030d	0f 29 85 40 02
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  00314	0f 28 85 40 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  0031b	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 390  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  00322	b8 10 00 00 00	 mov	 eax, 16
  00327	48 6b c0 02	 imul	 rax, rax, 2
  0032b	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00332	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  00339	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0033d	0f 29 85 50 02
	00 00		 movaps	 XMMWORD PTR $T18[rbp], xmm0
  00344	0f 28 85 50 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T18[rbp]
  0034b	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 391  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00352	b8 10 00 00 00	 mov	 eax, 16
  00357	48 6b c0 03	 imul	 rax, rax, 3
  0035b	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00362	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00369	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0036d	0f 29 85 60 02
	00 00		 movaps	 XMMWORD PTR $T19[rbp], xmm0
  00374	0f 28 85 60 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T19[rbp]
  0037b	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 392  :     vX = _mm_add_ps(vX, vZ);

  00382	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00389	0f 58 85 b0 00
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  00390	0f 29 85 70 02
	00 00		 movaps	 XMMWORD PTR $T20[rbp], xmm0
  00397	0f 28 85 70 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T20[rbp]
  0039e	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 393  :     vY = _mm_add_ps(vY, vW);

  003a5	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  003ac	0f 58 85 80 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  003b3	0f 29 85 80 02
	00 00		 movaps	 XMMWORD PTR $T21[rbp], xmm0
  003ba	0f 28 85 80 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T21[rbp]
  003c1	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 394  :     vX = _mm_add_ps(vX, vY);

  003c8	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  003cf	0f 58 85 a0 00
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  003d6	0f 29 85 90 02
	00 00		 movaps	 XMMWORD PTR $T22[rbp], xmm0
  003dd	0f 28 85 90 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T22[rbp]
  003e4	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 395  :     mResult.r[1] = vX;

  003eb	b8 10 00 00 00	 mov	 eax, 16
  003f0	48 6b c0 01	 imul	 rax, rax, 1
  003f4	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  003fb	0f 11 44 05 40	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 396  : #if defined(_XM_AVX_INTRINSICS_)
; 397  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 0);
; 398  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 1);
; 399  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 2);
; 400  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[2]) + 3);
; 401  : #else
; 402  :     vW = M1.r[2];

  00400	b8 10 00 00 00	 mov	 eax, 16
  00405	48 6b c0 02	 imul	 rax, rax, 2
  00409	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  0040e	0f 11 85 80 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 403  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  00415	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0041c	0f c6 85 80 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  00424	0f 29 85 a0 02
	00 00		 movaps	 XMMWORD PTR $T23[rbp], xmm0
  0042b	0f 28 85 a0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T23[rbp]
  00432	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 404  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  00439	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00440	0f c6 85 80 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00448	0f 29 85 b0 02
	00 00		 movaps	 XMMWORD PTR $T24[rbp], xmm0
  0044f	0f 28 85 b0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T24[rbp]
  00456	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 405  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  0045d	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00464	0f c6 85 80 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  0046c	0f 29 85 c0 02
	00 00		 movaps	 XMMWORD PTR $T25[rbp], xmm0
  00473	0f 28 85 c0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T25[rbp]
  0047a	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 406  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00481	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00488	0f c6 85 80 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  00490	0f 29 85 d0 02
	00 00		 movaps	 XMMWORD PTR $T26[rbp], xmm0
  00497	0f 28 85 d0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T26[rbp]
  0049e	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 407  : #endif
; 408  :     vX = _mm_mul_ps(vX, M2.r[0]);

  004a5	b8 10 00 00 00	 mov	 eax, 16
  004aa	48 6b c0 00	 imul	 rax, rax, 0
  004ae	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  004b5	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  004bc	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  004c0	0f 29 85 e0 02
	00 00		 movaps	 XMMWORD PTR $T27[rbp], xmm0
  004c7	0f 28 85 e0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T27[rbp]
  004ce	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 409  :     vY = _mm_mul_ps(vY, M2.r[1]);

  004d5	b8 10 00 00 00	 mov	 eax, 16
  004da	48 6b c0 01	 imul	 rax, rax, 1
  004de	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  004e5	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  004ec	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  004f0	0f 29 85 f0 02
	00 00		 movaps	 XMMWORD PTR $T28[rbp], xmm0
  004f7	0f 28 85 f0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T28[rbp]
  004fe	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 410  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  00505	b8 10 00 00 00	 mov	 eax, 16
  0050a	48 6b c0 02	 imul	 rax, rax, 2
  0050e	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00515	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  0051c	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00520	0f 29 85 00 03
	00 00		 movaps	 XMMWORD PTR $T29[rbp], xmm0
  00527	0f 28 85 00 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T29[rbp]
  0052e	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 411  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00535	b8 10 00 00 00	 mov	 eax, 16
  0053a	48 6b c0 03	 imul	 rax, rax, 3
  0053e	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00545	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0054c	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00550	0f 29 85 10 03
	00 00		 movaps	 XMMWORD PTR $T30[rbp], xmm0
  00557	0f 28 85 10 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T30[rbp]
  0055e	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 412  :     vX = _mm_add_ps(vX, vZ);

  00565	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0056c	0f 58 85 b0 00
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  00573	0f 29 85 20 03
	00 00		 movaps	 XMMWORD PTR $T31[rbp], xmm0
  0057a	0f 28 85 20 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T31[rbp]
  00581	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 413  :     vY = _mm_add_ps(vY, vW);

  00588	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  0058f	0f 58 85 80 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  00596	0f 29 85 30 03
	00 00		 movaps	 XMMWORD PTR $T32[rbp], xmm0
  0059d	0f 28 85 30 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T32[rbp]
  005a4	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 414  :     vX = _mm_add_ps(vX, vY);

  005ab	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  005b2	0f 58 85 a0 00
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  005b9	0f 29 85 40 03
	00 00		 movaps	 XMMWORD PTR $T33[rbp], xmm0
  005c0	0f 28 85 40 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T33[rbp]
  005c7	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 415  :     mResult.r[2] = vX;

  005ce	b8 10 00 00 00	 mov	 eax, 16
  005d3	48 6b c0 02	 imul	 rax, rax, 2
  005d7	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  005de	0f 11 44 05 40	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 416  : #if defined(_XM_AVX_INTRINSICS_)
; 417  :     vX = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[3]) + 0);
; 418  :     vY = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[3]) + 1);
; 419  :     vZ = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[3]) + 2);
; 420  :     vW = _mm_broadcast_ss(reinterpret_cast<const float*>(&M1.r[3]) + 3);
; 421  : #else
; 422  :     vW = M1.r[3];

  005e3	b8 10 00 00 00	 mov	 eax, 16
  005e8	48 6b c0 03	 imul	 rax, rax, 3
  005ec	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  005f1	0f 11 85 80 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 423  :     vX = XM_PERMUTE_PS(vW, _MM_SHUFFLE(0, 0, 0, 0));

  005f8	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  005ff	0f c6 85 80 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  00607	0f 29 85 50 03
	00 00		 movaps	 XMMWORD PTR $T34[rbp], xmm0
  0060e	0f 28 85 50 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T34[rbp]
  00615	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 424  :     vY = XM_PERMUTE_PS(vW, _MM_SHUFFLE(1, 1, 1, 1));

  0061c	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00623	0f c6 85 80 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  0062b	0f 29 85 60 03
	00 00		 movaps	 XMMWORD PTR $T35[rbp], xmm0
  00632	0f 28 85 60 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T35[rbp]
  00639	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 425  :     vZ = XM_PERMUTE_PS(vW, _MM_SHUFFLE(2, 2, 2, 2));

  00640	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00647	0f c6 85 80 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  0064f	0f 29 85 70 03
	00 00		 movaps	 XMMWORD PTR $T36[rbp], xmm0
  00656	0f 28 85 70 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T36[rbp]
  0065d	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 426  :     vW = XM_PERMUTE_PS(vW, _MM_SHUFFLE(3, 3, 3, 3));

  00664	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0066b	0f c6 85 80 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  00673	0f 29 85 80 03
	00 00		 movaps	 XMMWORD PTR $T37[rbp], xmm0
  0067a	0f 28 85 80 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T37[rbp]
  00681	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 427  : #endif
; 428  :     vX = _mm_mul_ps(vX, M2.r[0]);

  00688	b8 10 00 00 00	 mov	 eax, 16
  0068d	48 6b c0 00	 imul	 rax, rax, 0
  00691	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00698	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0069f	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  006a3	0f 29 85 90 03
	00 00		 movaps	 XMMWORD PTR $T38[rbp], xmm0
  006aa	0f 28 85 90 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T38[rbp]
  006b1	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 429  :     vY = _mm_mul_ps(vY, M2.r[1]);

  006b8	b8 10 00 00 00	 mov	 eax, 16
  006bd	48 6b c0 01	 imul	 rax, rax, 1
  006c1	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  006c8	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  006cf	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  006d3	0f 29 85 a0 03
	00 00		 movaps	 XMMWORD PTR $T39[rbp], xmm0
  006da	0f 28 85 a0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T39[rbp]
  006e1	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 430  :     vZ = _mm_mul_ps(vZ, M2.r[2]);

  006e8	b8 10 00 00 00	 mov	 eax, 16
  006ed	48 6b c0 02	 imul	 rax, rax, 2
  006f1	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  006f8	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  006ff	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00703	0f 29 85 b0 03
	00 00		 movaps	 XMMWORD PTR $T40[rbp], xmm0
  0070a	0f 28 85 b0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T40[rbp]
  00711	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 431  :     vW = _mm_mul_ps(vW, M2.r[3]);

  00718	b8 10 00 00 00	 mov	 eax, 16
  0071d	48 6b c0 03	 imul	 rax, rax, 3
  00721	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00728	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0072f	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00733	0f 29 85 c0 03
	00 00		 movaps	 XMMWORD PTR $T41[rbp], xmm0
  0073a	0f 28 85 c0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T41[rbp]
  00741	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 432  :     vX = _mm_add_ps(vX, vZ);

  00748	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0074f	0f 58 85 b0 00
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  00756	0f 29 85 d0 03
	00 00		 movaps	 XMMWORD PTR $T42[rbp], xmm0
  0075d	0f 28 85 d0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T42[rbp]
  00764	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 433  :     vY = _mm_add_ps(vY, vW);

  0076b	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00772	0f 58 85 80 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  00779	0f 29 85 e0 03
	00 00		 movaps	 XMMWORD PTR $T43[rbp], xmm0
  00780	0f 28 85 e0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T43[rbp]
  00787	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 434  :     vX = _mm_add_ps(vX, vY);

  0078e	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00795	0f 58 85 a0 00
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  0079c	0f 29 85 f0 03
	00 00		 movaps	 XMMWORD PTR $T44[rbp], xmm0
  007a3	0f 28 85 f0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T44[rbp]
  007aa	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 435  :     mResult.r[3] = vX;

  007b1	b8 10 00 00 00	 mov	 eax, 16
  007b6	48 6b c0 03	 imul	 rax, rax, 3
  007ba	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  007c1	0f 11 44 05 40	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 436  :     return mResult;

  007c6	0f 28 5d 70	 movaps	 xmm3, XMMWORD PTR mResult$[rbp+48]
  007ca	0f 28 55 60	 movaps	 xmm2, XMMWORD PTR mResult$[rbp+32]
  007ce	0f 28 4d 50	 movaps	 xmm1, XMMWORD PTR mResult$[rbp+16]
  007d2	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR mResult$[rbp]

; 437  : #endif
; 438  : }

  007d6	48 8d a5 00 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1024]
  007dd	5d		 pop	 rbp
  007de	c3		 ret	 0
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ENDP ; DirectX::XMMatrixMultiply
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
_TEXT	SEGMENT
V$ = 0
vLengthSq$ = 16
vTemp$ = 32
vResult$ = 48
vZeroMask$ = 64
vTemp1$ = 80
vTemp2$ = 96
$T1 = 176
$T2 = 192
$T3 = 208
$T4 = 224
$T5 = 240
$T6 = 256
$T7 = 272
$T8 = 288
$T9 = 304
$T10 = 320
$T11 = 336
$T12 = 352
$T13 = 368
$T14 = 384
$T15 = 400
$T16 = 416
$T17 = 432
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z PROC	; DirectX::XMVector3Normalize, COMDAT

; 9829 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec e0 01
	00 00		 sub	 rsp, 480		; 000001e0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V$[rbp]
  00012	48 89 84 24 f0
	01 00 00	 mov	 QWORD PTR [rsp+496], rax
  0001a	0f 29 45 00	 movaps	 XMMWORD PTR V$[rbp], xmm0
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 9830 : #if defined(_XM_NO_INTRINSICS_)
; 9831 :     float fLength;
; 9832 :     XMVECTOR vResult;
; 9833 : 
; 9834 :     vResult = XMVector3Length(V);
; 9835 :     fLength = vResult.vector4_f32[0];
; 9836 : 
; 9837 :     // Prevent divide by zero
; 9838 :     if (fLength > 0)
; 9839 :     {
; 9840 :         fLength = 1.0f / fLength;
; 9841 :     }
; 9842 : 
; 9843 :     vResult.vector4_f32[0] = V.vector4_f32[0] * fLength;
; 9844 :     vResult.vector4_f32[1] = V.vector4_f32[1] * fLength;
; 9845 :     vResult.vector4_f32[2] = V.vector4_f32[2] * fLength;
; 9846 :     vResult.vector4_f32[3] = V.vector4_f32[3] * fLength;
; 9847 :     return vResult;
; 9848 : 
; 9849 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9850 :     // Dot3
; 9851 :     float32x4_t vTemp = vmulq_f32(V, V);
; 9852 :     float32x2_t v1 = vget_low_f32(vTemp);
; 9853 :     float32x2_t v2 = vget_high_f32(vTemp);
; 9854 :     v1 = vpadd_f32(v1, v1);
; 9855 :     v2 = vdup_lane_f32(v2, 0);
; 9856 :     v1 = vadd_f32(v1, v2);
; 9857 :     uint32x2_t VEqualsZero = vceq_f32(v1, vdup_n_f32(0));
; 9858 :     uint32x2_t VEqualsInf = vceq_f32(v1, vget_low_f32(g_XMInfinity));
; 9859 :     // Reciprocal sqrt (2 iterations of Newton-Raphson)
; 9860 :     float32x2_t S0 = vrsqrte_f32(v1);
; 9861 :     float32x2_t P0 = vmul_f32(v1, S0);
; 9862 :     float32x2_t R0 = vrsqrts_f32(P0, S0);
; 9863 :     float32x2_t S1 = vmul_f32(S0, R0);
; 9864 :     float32x2_t P1 = vmul_f32(v1, S1);
; 9865 :     float32x2_t R1 = vrsqrts_f32(P1, S1);
; 9866 :     v2 = vmul_f32(S1, R1);
; 9867 :     // Normalize
; 9868 :     XMVECTOR vResult = vmulq_f32(V, vcombine_f32(v2, v2));
; 9869 :     vResult = vbslq_f32(vcombine_u32(VEqualsZero, VEqualsZero), vdupq_n_f32(0), vResult);
; 9870 :     return vbslq_f32(vcombine_u32(VEqualsInf, VEqualsInf), g_XMQNaN, vResult);
; 9871 : #elif defined(_XM_SSE4_INTRINSICS_)
; 9872 :     XMVECTOR vLengthSq = _mm_dp_ps(V, V, 0x7f);
; 9873 :     // Prepare for the division
; 9874 :     XMVECTOR vResult = _mm_sqrt_ps(vLengthSq);
; 9875 :     // Create zero with a single instruction
; 9876 :     XMVECTOR vZeroMask = _mm_setzero_ps();
; 9877 :     // Test for a divide by zero (Must be FP to detect -0.0)
; 9878 :     vZeroMask = _mm_cmpneq_ps(vZeroMask, vResult);
; 9879 :     // Failsafe on zero (Or epsilon) length planes
; 9880 :     // If the length is infinity, set the elements to zero
; 9881 :     vLengthSq = _mm_cmpneq_ps(vLengthSq, g_XMInfinity);
; 9882 :     // Divide to perform the normalization
; 9883 :     vResult = _mm_div_ps(V, vResult);
; 9884 :     // Any that are infinity, set to zero
; 9885 :     vResult = _mm_and_ps(vResult, vZeroMask);
; 9886 :     // Select qnan or result based on infinite length
; 9887 :     XMVECTOR vTemp1 = _mm_andnot_ps(vLengthSq, g_XMQNaN);
; 9888 :     XMVECTOR vTemp2 = _mm_and_ps(vResult, vLengthSq);
; 9889 :     vResult = _mm_or_ps(vTemp1, vTemp2);
; 9890 :     return vResult;
; 9891 : #elif defined(_XM_SSE3_INTRINSICS_)
; 9892 :     // Perform the dot product on x,y and z only
; 9893 :     XMVECTOR vLengthSq = _mm_mul_ps(V, V);
; 9894 :     vLengthSq = _mm_and_ps(vLengthSq, g_XMMask3);
; 9895 :     vLengthSq = _mm_hadd_ps(vLengthSq, vLengthSq);
; 9896 :     vLengthSq = _mm_hadd_ps(vLengthSq, vLengthSq);
; 9897 :     // Prepare for the division
; 9898 :     XMVECTOR vResult = _mm_sqrt_ps(vLengthSq);
; 9899 :     // Create zero with a single instruction
; 9900 :     XMVECTOR vZeroMask = _mm_setzero_ps();
; 9901 :     // Test for a divide by zero (Must be FP to detect -0.0)
; 9902 :     vZeroMask = _mm_cmpneq_ps(vZeroMask, vResult);
; 9903 :     // Failsafe on zero (Or epsilon) length planes
; 9904 :     // If the length is infinity, set the elements to zero
; 9905 :     vLengthSq = _mm_cmpneq_ps(vLengthSq, g_XMInfinity);
; 9906 :     // Divide to perform the normalization
; 9907 :     vResult = _mm_div_ps(V, vResult);
; 9908 :     // Any that are infinity, set to zero
; 9909 :     vResult = _mm_and_ps(vResult, vZeroMask);
; 9910 :     // Select qnan or result based on infinite length
; 9911 :     XMVECTOR vTemp1 = _mm_andnot_ps(vLengthSq, g_XMQNaN);
; 9912 :     XMVECTOR vTemp2 = _mm_and_ps(vResult, vLengthSq);
; 9913 :     vResult = _mm_or_ps(vTemp1, vTemp2);
; 9914 :     return vResult;
; 9915 : #elif defined(_XM_SSE_INTRINSICS_)
; 9916 :     // Perform the dot product on x,y and z only
; 9917 :     XMVECTOR vLengthSq = _mm_mul_ps(V, V);

  0002a	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  0002e	0f 59 45 00	 mulps	 xmm0, XMMWORD PTR V$[rbp]
  00032	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00039	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00040	0f 29 45 10	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9918 :     XMVECTOR vTemp = XM_PERMUTE_PS(vLengthSq, _MM_SHUFFLE(2, 1, 2, 1));

  00044	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00048	0f c6 45 10 99	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 153 ; 00000099H
  0004d	0f 29 85 c0 00
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00054	0f 28 85 c0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0005b	0f 29 45 20	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9919 :     vLengthSq = _mm_add_ss(vLengthSq, vTemp);

  0005f	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00063	f3 0f 58 45 20	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  00068	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  0006f	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00076	0f 29 45 10	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9920 :     vTemp = XM_PERMUTE_PS(vTemp, _MM_SHUFFLE(1, 1, 1, 1));

  0007a	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  0007e	0f c6 45 20 55	 shufps	 xmm0, XMMWORD PTR vTemp$[rbp], 85 ; 00000055H
  00083	0f 29 85 e0 00
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  0008a	0f 28 85 e0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  00091	0f 29 45 20	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9921 :     vLengthSq = _mm_add_ss(vLengthSq, vTemp);

  00095	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00099	f3 0f 58 45 20	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  0009e	0f 29 85 f0 00
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000a5	0f 28 85 f0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000ac	0f 29 45 10	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9922 :     vLengthSq = XM_PERMUTE_PS(vLengthSq, _MM_SHUFFLE(0, 0, 0, 0));

  000b0	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000b4	0f c6 45 10 00	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 0
  000b9	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000c0	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000c7	0f 29 45 10	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9923 :     // Prepare for the division
; 9924 :     XMVECTOR vResult = _mm_sqrt_ps(vLengthSq);

  000cb	0f 51 45 10	 sqrtps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000cf	0f 29 85 10 01
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000d6	0f 28 85 10 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  000dd	0f 29 45 30	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9925 :     // Create zero with a single instruction
; 9926 :     XMVECTOR vZeroMask = _mm_setzero_ps();

  000e1	0f 57 c0	 xorps	 xmm0, xmm0
  000e4	0f 29 85 20 01
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  000eb	0f 28 85 20 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  000f2	0f 29 45 40	 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9927 :     // Test for a divide by zero (Must be FP to detect -0.0)
; 9928 :     vZeroMask = _mm_cmpneq_ps(vZeroMask, vResult);

  000f6	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  000fa	0f c2 45 30 04	 cmpneqps xmm0, XMMWORD PTR vResult$[rbp]
  000ff	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  00106	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  0010d	0f 29 45 40	 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9929 :     // Failsafe on zero (Or epsilon) length planes
; 9930 :     // If the length is infinity, set the elements to zero
; 9931 :     vLengthSq = _mm_cmpneq_ps(vLengthSq, g_XMInfinity);

  00111	48 8d 95 50 01
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  00118	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMInfinity
  0011f	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00124	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00128	0f c2 00 04	 cmpneqps xmm0, XMMWORD PTR [rax]
  0012c	0f 29 85 40 01
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  00133	0f 28 85 40 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  0013a	0f 29 45 10	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9932 :     // Divide to perform the normalization
; 9933 :     vResult = _mm_div_ps(V, vResult);

  0013e	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00142	0f 5e 45 30	 divps	 xmm0, XMMWORD PTR vResult$[rbp]
  00146	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  0014d	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T12[rbp]
  00154	0f 29 45 30	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9934 :     // Any that are infinity, set to zero
; 9935 :     vResult = _mm_and_ps(vResult, vZeroMask);

  00158	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  0015c	0f 54 45 40	 andps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  00160	0f 29 85 70 01
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  00167	0f 28 85 70 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  0016e	0f 29 45 30	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9936 :     // Select qnan or result based on infinite length
; 9937 :     XMVECTOR vTemp1 = _mm_andnot_ps(vLengthSq, g_XMQNaN);

  00172	48 8d 95 90 01
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  00179	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMQNaN
  00180	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00185	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00189	0f 55 00	 andnps	 xmm0, XMMWORD PTR [rax]
  0018c	0f 29 85 80 01
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  00193	0f 28 85 80 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  0019a	0f 29 45 50	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 9938 :     XMVECTOR vTemp2 = _mm_and_ps(vResult, vLengthSq);

  0019e	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  001a2	0f 54 45 10	 andps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  001a6	0f 29 85 a0 01
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  001ad	0f 28 85 a0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  001b4	0f 29 45 60	 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 9939 :     vResult = _mm_or_ps(vTemp1, vTemp2);

  001b8	0f 28 45 50	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  001bc	0f 56 45 60	 orps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  001c0	0f 29 85 b0 01
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  001c7	0f 28 85 b0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  001ce	0f 29 45 30	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9940 :     return vResult;

  001d2	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]

; 9941 : #endif
; 9942 : }

  001d6	48 8d a5 c0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+448]
  001dd	5d		 pop	 rbp
  001de	c3		 ret	 0
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ENDP	; DirectX::XMVector3Normalize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 0
V2$ = 16
vTemp1$ = 32
vTemp2$ = 48
vResult$ = 64
$T1 = 144
$T2 = 160
$T3 = 176
$T4 = 192
$T5 = 208
$T6 = 224
$T7 = 240
$T8 = 256
$T9 = 272
?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z PROC	; DirectX::XMVector3Cross, COMDAT

; 9482 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V1$[rbp]
  00012	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR [rsp+336], rax
  0001a	48 8d 45 10	 lea	 rax, QWORD PTR V2$[rbp]
  0001e	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR [rsp+344], rax
  00026	0f 29 4d 10	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0002a	0f 29 45 00	 movaps	 XMMWORD PTR V1$[rbp], xmm0
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 9483 :     // [ V1.y*V2.z - V1.z*V2.y, V1.z*V2.x - V1.x*V2.z, V1.x*V2.y - V1.y*V2.x ]
; 9484 : 
; 9485 : #if defined(_XM_NO_INTRINSICS_)
; 9486 :     XMVECTORF32 vResult = { { {
; 9487 :             (V1.vector4_f32[1] * V2.vector4_f32[2]) - (V1.vector4_f32[2] * V2.vector4_f32[1]),
; 9488 :             (V1.vector4_f32[2] * V2.vector4_f32[0]) - (V1.vector4_f32[0] * V2.vector4_f32[2]),
; 9489 :             (V1.vector4_f32[0] * V2.vector4_f32[1]) - (V1.vector4_f32[1] * V2.vector4_f32[0]),
; 9490 :             0.0f
; 9491 :         } } };
; 9492 :     return vResult.v;
; 9493 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9494 :     float32x2_t v1xy = vget_low_f32(V1);
; 9495 :     float32x2_t v2xy = vget_low_f32(V2);
; 9496 : 
; 9497 :     float32x2_t v1yx = vrev64_f32(v1xy);
; 9498 :     float32x2_t v2yx = vrev64_f32(v2xy);
; 9499 : 
; 9500 :     float32x2_t v1zz = vdup_lane_f32(vget_high_f32(V1), 0);
; 9501 :     float32x2_t v2zz = vdup_lane_f32(vget_high_f32(V2), 0);
; 9502 : 
; 9503 :     XMVECTOR vResult = vmulq_f32(vcombine_f32(v1yx, v1xy), vcombine_f32(v2zz, v2yx));
; 9504 :     vResult = vmlsq_f32(vResult, vcombine_f32(v1zz, v1yx), vcombine_f32(v2yx, v2xy));
; 9505 :     vResult = vreinterpretq_f32_u32(veorq_u32(vreinterpretq_u32_f32(vResult), g_XMFlipY));
; 9506 :     return vreinterpretq_f32_u32(vandq_u32(vreinterpretq_u32_f32(vResult), g_XMMask3));
; 9507 : #elif defined(_XM_SSE_INTRINSICS_)
; 9508 :     // y1,z1,x1,w1
; 9509 :     XMVECTOR vTemp1 = XM_PERMUTE_PS(V1, _MM_SHUFFLE(3, 0, 2, 1));

  0003a	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  0003e	0f c6 45 00 c9	 shufps	 xmm0, XMMWORD PTR V1$[rbp], 201 ; 000000c9H
  00043	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004a	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00051	0f 29 45 20	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 9510 :     // z2,x2,y2,w2
; 9511 :     XMVECTOR vTemp2 = XM_PERMUTE_PS(V2, _MM_SHUFFLE(3, 1, 0, 2));

  00055	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V2$[rbp]
  00059	0f c6 45 10 d2	 shufps	 xmm0, XMMWORD PTR V2$[rbp], 210 ; 000000d2H
  0005e	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00065	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0006c	0f 29 45 30	 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 9512 :     // Perform the left operation
; 9513 :     XMVECTOR vResult = _mm_mul_ps(vTemp1, vTemp2);

  00070	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  00074	0f 59 45 30	 mulps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  00078	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  0007f	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00086	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9514 :     // z1,x1,y1,w1
; 9515 :     vTemp1 = XM_PERMUTE_PS(vTemp1, _MM_SHUFFLE(3, 0, 2, 1));

  0008a	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  0008e	0f c6 45 20 c9	 shufps	 xmm0, XMMWORD PTR vTemp1$[rbp], 201 ; 000000c9H
  00093	0f 29 85 c0 00
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  0009a	0f 28 85 c0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000a1	0f 29 45 20	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 9516 :     // y2,z2,x2,w2
; 9517 :     vTemp2 = XM_PERMUTE_PS(vTemp2, _MM_SHUFFLE(3, 1, 0, 2));

  000a5	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  000a9	0f c6 45 30 d2	 shufps	 xmm0, XMMWORD PTR vTemp2$[rbp], 210 ; 000000d2H
  000ae	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000b5	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000bc	0f 29 45 30	 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 9518 :     // Perform the right operation
; 9519 :     vResult = XM_FNMADD_PS(vTemp1, vTemp2, vResult);

  000c0	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  000c4	0f 59 45 30	 mulps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  000c8	0f 29 85 f0 00
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000cf	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  000d3	0f 5c 85 f0 00
	00 00		 subps	 xmm0, XMMWORD PTR $T7[rbp]
  000da	0f 29 85 e0 00
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000e1	0f 28 85 e0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000e8	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9520 :     // Set w to zero
; 9521 :     return _mm_and_ps(vResult, g_XMMask3);

  000ec	48 8d 95 10 01
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  000f3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMMask3@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMask3
  000fa	e8 00 00 00 00	 call	 ??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORU32::operator __m128
  000ff	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00103	0f 54 00	 andps	 xmm0, XMMWORD PTR [rax]
  00106	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  0010d	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]

; 9522 : #endif
; 9523 : }

  00114	48 8d a5 20 01
	00 00		 lea	 rsp, QWORD PTR [rbp+288]
  0011b	5d		 pop	 rbp
  0011c	c3		 ret	 0
?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ENDP	; DirectX::XMVector3Cross
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 0
V2$ = 16
vDot$ = 32
vTemp$ = 48
$T1 = 128
$T2 = 144
$T3 = 160
$T4 = 176
$T5 = 192
$T6 = 208
?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z PROC		; DirectX::XMVector3Dot, COMDAT

; 9435 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V1$[rbp]
  00012	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR [rsp+272], rax
  0001a	48 8d 45 10	 lea	 rax, QWORD PTR V2$[rbp]
  0001e	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR [rsp+280], rax
  00026	0f 29 4d 10	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0002a	0f 29 45 00	 movaps	 XMMWORD PTR V1$[rbp], xmm0
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 9436 : #if defined(_XM_NO_INTRINSICS_)
; 9437 :     float fValue = V1.vector4_f32[0] * V2.vector4_f32[0] + V1.vector4_f32[1] * V2.vector4_f32[1] + V1.vector4_f32[2] * V2.vector4_f32[2];
; 9438 :     XMVECTORF32 vResult;
; 9439 :     vResult.f[0] =
; 9440 :         vResult.f[1] =
; 9441 :         vResult.f[2] =
; 9442 :         vResult.f[3] = fValue;
; 9443 :     return vResult.v;
; 9444 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9445 :     float32x4_t vTemp = vmulq_f32(V1, V2);
; 9446 :     float32x2_t v1 = vget_low_f32(vTemp);
; 9447 :     float32x2_t v2 = vget_high_f32(vTemp);
; 9448 :     v1 = vpadd_f32(v1, v1);
; 9449 :     v2 = vdup_lane_f32(v2, 0);
; 9450 :     v1 = vadd_f32(v1, v2);
; 9451 :     return vcombine_f32(v1, v1);
; 9452 : #elif defined(_XM_SSE4_INTRINSICS_)
; 9453 :     return _mm_dp_ps(V1, V2, 0x7f);
; 9454 : #elif defined(_XM_SSE3_INTRINSICS_)
; 9455 :     XMVECTOR vTemp = _mm_mul_ps(V1, V2);
; 9456 :     vTemp = _mm_and_ps(vTemp, g_XMMask3);
; 9457 :     vTemp = _mm_hadd_ps(vTemp, vTemp);
; 9458 :     return _mm_hadd_ps(vTemp, vTemp);
; 9459 : #elif defined(_XM_SSE_INTRINSICS_)
; 9460 :     // Perform the dot product
; 9461 :     XMVECTOR vDot = _mm_mul_ps(V1, V2);

  0003a	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  0003e	0f 59 45 10	 mulps	 xmm0, XMMWORD PTR V2$[rbp]
  00042	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00049	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00050	0f 29 45 20	 movaps	 XMMWORD PTR vDot$[rbp], xmm0

; 9462 :     // x=Dot.vector4_f32[1], y=Dot.vector4_f32[2]
; 9463 :     XMVECTOR vTemp = XM_PERMUTE_PS(vDot, _MM_SHUFFLE(2, 1, 2, 1));

  00054	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vDot$[rbp]
  00058	0f c6 45 20 99	 shufps	 xmm0, XMMWORD PTR vDot$[rbp], 153 ; 00000099H
  0005d	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00064	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0006b	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9464 :     // Result.vector4_f32[0] = x+y
; 9465 :     vDot = _mm_add_ss(vDot, vTemp);

  0006f	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vDot$[rbp]
  00073	f3 0f 58 45 30	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  00078	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  0007f	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00086	0f 29 45 20	 movaps	 XMMWORD PTR vDot$[rbp], xmm0

; 9466 :     // x=Dot.vector4_f32[2]
; 9467 :     vTemp = XM_PERMUTE_PS(vTemp, _MM_SHUFFLE(1, 1, 1, 1));

  0008a	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  0008e	0f c6 45 30 55	 shufps	 xmm0, XMMWORD PTR vTemp$[rbp], 85 ; 00000055H
  00093	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  0009a	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000a1	0f 29 45 30	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9468 :     // Result.vector4_f32[0] = (x+y)+z
; 9469 :     vDot = _mm_add_ss(vDot, vTemp);

  000a5	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vDot$[rbp]
  000a9	f3 0f 58 45 30	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  000ae	0f 29 85 c0 00
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000b5	0f 28 85 c0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000bc	0f 29 45 20	 movaps	 XMMWORD PTR vDot$[rbp], xmm0

; 9470 :     // Splat x
; 9471 :     return XM_PERMUTE_PS(vDot, _MM_SHUFFLE(0, 0, 0, 0));

  000c0	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vDot$[rbp]
  000c4	0f c6 45 20 00	 shufps	 xmm0, XMMWORD PTR vDot$[rbp], 0
  000c9	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000d0	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]

; 9472 : #endif
; 9473 : }

  000d7	48 8d a5 e0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+224]
  000de	5d		 pop	 rbp
  000df	c3		 ret	 0
?XMVector3Dot@DirectX@@YQ?AT__m128@@T2@0@Z ENDP		; DirectX::XMVector3Dot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z
_TEXT	SEGMENT
V$ = 0
vTemp$ = 16
$T1 = 96
$T2 = 112
$T3 = 128
$T4 = 144
tv80 = 160
?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z PROC	; DirectX::XMVector3IsInfinite, COMDAT

; 9400 : {

$LN5:
  00000	40 55		 push	 rbp
  00002	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V$[rbp]
  00012	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR [rsp+224], rax
  0001a	0f 29 45 00	 movaps	 XMMWORD PTR V$[rbp], xmm0
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 9401 : #if defined(_XM_NO_INTRINSICS_)
; 9402 :     return (XMISINF(V.vector4_f32[0]) ||
; 9403 :         XMISINF(V.vector4_f32[1]) ||
; 9404 :         XMISINF(V.vector4_f32[2]));
; 9405 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9406 :     // Mask off the sign bit
; 9407 :     uint32x4_t vTempInf = vandq_u32(vreinterpretq_u32_f32(V), g_XMAbsMask);
; 9408 :     // Compare to infinity
; 9409 :     vTempInf = vceqq_f32(vreinterpretq_f32_u32(vTempInf), g_XMInfinity);
; 9410 :     // If any are infinity, the signs are true.
; 9411 :     uint8x8x2_t vTemp = vzip_u8(vget_low_u8(vreinterpretq_u8_u32(vTempInf)), vget_high_u8(vreinterpretq_u8_u32(vTempInf)));
; 9412 :     uint16x4x2_t vTemp2 = vzip_u16(vreinterpret_u16_u8(vTemp.val[0]), vreinterpret_u16_u8(vTemp.val[1]));
; 9413 :     return ((vget_lane_u32(vreinterpret_u32_u16(vTemp2.val[1]), 1) & 0xFFFFFFU) != 0);
; 9414 : #elif defined(_XM_SSE_INTRINSICS_)
; 9415 :     // Mask off the sign bit
; 9416 :     __m128 vTemp = _mm_and_ps(V, g_XMAbsMask);

  0002a	48 8d 55 70	 lea	 rdx, QWORD PTR $T2[rbp]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMAbsMask
  00035	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  0003a	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  0003e	0f 54 00	 andps	 xmm0, XMMWORD PTR [rax]
  00041	0f 29 45 60	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00045	0f 28 45 60	 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00049	0f 29 45 10	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9417 :     // Compare to infinity
; 9418 :     vTemp = _mm_cmpeq_ps(vTemp, g_XMInfinity);

  0004d	48 8d 95 90 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMInfinity
  0005b	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00060	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  00064	0f c2 00 00	 cmpeqps xmm0, XMMWORD PTR [rax]
  00068	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  0006f	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00076	0f 29 45 10	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9419 :     // If x,y or z are infinity, the signs are true.
; 9420 :     return ((_mm_movemask_ps(vTemp) & 7) != 0);

  0007a	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  0007e	0f 50 c0	 movmskps eax, xmm0
  00081	83 e0 07	 and	 eax, 7
  00084	85 c0		 test	 eax, eax
  00086	74 0c		 je	 SHORT $LN3@XMVector3I
  00088	c7 85 a0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv80[rbp], 1
  00092	eb 0a		 jmp	 SHORT $LN4@XMVector3I
$LN3@XMVector3I:
  00094	c7 85 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv80[rbp], 0
$LN4@XMVector3I:
  0009e	0f b6 85 a0 00
	00 00		 movzx	 eax, BYTE PTR tv80[rbp]

; 9421 : #endif
; 9422 : }

  000a5	48 8d a5 b0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+176]
  000ac	5d		 pop	 rbp
  000ad	c3		 ret	 0
?XMVector3IsInfinite@DirectX@@YQ_NT__m128@@@Z ENDP	; DirectX::XMVector3IsInfinite
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z
_TEXT	SEGMENT
V1$ = 0
V2$ = 16
vTemp$ = 32
$T1 = 112
tv71 = 128
tv73 = 132
?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z PROC		; DirectX::XMVector3Equal, COMDAT

; 8897 : {

$LN7:
  00000	40 55		 push	 rbp
  00002	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V1$[rbp]
  00012	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR [rsp+192], rax
  0001a	48 8d 45 10	 lea	 rax, QWORD PTR V2$[rbp]
  0001e	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR [rsp+200], rax
  00026	0f 29 4d 10	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0002a	0f 29 45 00	 movaps	 XMMWORD PTR V1$[rbp], xmm0
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 8898 : #if defined(_XM_NO_INTRINSICS_)
; 8899 :     return (((V1.vector4_f32[0] == V2.vector4_f32[0]) && (V1.vector4_f32[1] == V2.vector4_f32[1]) && (V1.vector4_f32[2] == V2.vector4_f32[2])) != 0);
; 8900 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 8901 :     uint32x4_t vResult = vceqq_f32(V1, V2);
; 8902 :     uint8x8x2_t vTemp = vzip_u8(vget_low_u8(vreinterpretq_u8_u32(vResult)), vget_high_u8(vreinterpretq_u8_u32(vResult)));
; 8903 :     uint16x4x2_t vTemp2 = vzip_u16(vreinterpret_u16_u8(vTemp.val[0]), vreinterpret_u16_u8(vTemp.val[1]));
; 8904 :     return ((vget_lane_u32(vreinterpret_u32_u16(vTemp2.val[1]), 1) & 0xFFFFFFU) == 0xFFFFFFU);
; 8905 : #elif defined(_XM_SSE_INTRINSICS_)
; 8906 :     XMVECTOR vTemp = _mm_cmpeq_ps(V1, V2);

  0003a	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  0003e	0f c2 45 10 00	 cmpeqps xmm0, XMMWORD PTR V2$[rbp]
  00043	0f 29 45 70	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00047	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0004b	0f 29 45 20	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 8907 :     return (((_mm_movemask_ps(vTemp) & 7) == 7) != 0);

  0004f	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  00053	0f 50 c0	 movmskps eax, xmm0
  00056	83 e0 07	 and	 eax, 7
  00059	83 f8 07	 cmp	 eax, 7
  0005c	75 0c		 jne	 SHORT $LN3@XMVector3E
  0005e	c7 85 80 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv71[rbp], 1
  00068	eb 0a		 jmp	 SHORT $LN4@XMVector3E
$LN3@XMVector3E:
  0006a	c7 85 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv71[rbp], 0
$LN4@XMVector3E:
  00074	83 bd 80 00 00
	00 00		 cmp	 DWORD PTR tv71[rbp], 0
  0007b	74 0c		 je	 SHORT $LN5@XMVector3E
  0007d	c7 85 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv73[rbp], 1
  00087	eb 0a		 jmp	 SHORT $LN6@XMVector3E
$LN5@XMVector3E:
  00089	c7 85 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv73[rbp], 0
$LN6@XMVector3E:
  00093	0f b6 85 84 00
	00 00		 movzx	 eax, BYTE PTR tv73[rbp]

; 8908 : #endif
; 8909 : }

  0009a	48 8d a5 90 00
	00 00		 lea	 rsp, QWORD PTR [rbp+144]
  000a1	5d		 pop	 rbp
  000a2	c3		 ret	 0
?XMVector3Equal@DirectX@@YQ_NT__m128@@0@Z ENDP		; DirectX::XMVector3Equal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z
_TEXT	SEGMENT
V$ = 0
Z$ = 16
$T1 = 96
$T2 = 112
?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z PROC	; DirectX::XMVectorNegate, COMDAT

; 2707 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V$[rbp]
  00012	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR [rsp+176], rax
  0001a	0f 29 45 00	 movaps	 XMMWORD PTR V$[rbp], xmm0
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2708 : #if defined(_XM_NO_INTRINSICS_)
; 2709 : 
; 2710 :     XMVECTORF32 Result = { { {
; 2711 :             -V.vector4_f32[0],
; 2712 :             -V.vector4_f32[1],
; 2713 :             -V.vector4_f32[2],
; 2714 :             -V.vector4_f32[3]
; 2715 :         } } };
; 2716 :     return Result.v;
; 2717 : 
; 2718 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2719 :     return vnegq_f32(V);
; 2720 : #elif defined(_XM_SSE_INTRINSICS_)
; 2721 :     XMVECTOR Z;
; 2722 : 
; 2723 :     Z = _mm_setzero_ps();

  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	0f 29 45 60	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00031	0f 28 45 60	 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00035	0f 29 45 10	 movaps	 XMMWORD PTR Z$[rbp], xmm0

; 2724 : 
; 2725 :     return _mm_sub_ps(Z, V);

  00039	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR Z$[rbp]
  0003d	0f 5c 45 00	 subps	 xmm0, XMMWORD PTR V$[rbp]
  00041	0f 29 45 70	 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00045	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR $T2[rbp]

; 2726 : #endif
; 2727 : }

  00049	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?XMVectorNegate@DirectX@@YQ?AT__m128@@T2@@Z ENDP	; DirectX::XMVectorNegate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z
_TEXT	SEGMENT
V1$ = 0
V2$ = 16
Control$ = 32
vTemp1$ = 48
vTemp2$ = 64
$T1 = 144
$T2 = 160
$T3 = 176
?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z PROC	; DirectX::XMVectorSelect, COMDAT

; 1408 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 45 00	 lea	 rax, QWORD PTR V1$[rbp]
  00012	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR [rsp+240], rax
  0001a	48 8d 45 10	 lea	 rax, QWORD PTR V2$[rbp]
  0001e	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR [rsp+248], rax
  00026	48 8d 45 20	 lea	 rax, QWORD PTR Control$[rbp]
  0002a	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR [rsp+256], rax
  00032	0f 29 55 20	 movaps	 XMMWORD PTR Control$[rbp], xmm2
  00036	0f 29 4d 10	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 00	 movaps	 XMMWORD PTR V1$[rbp], xmm0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1409 : #if defined(_XM_NO_INTRINSICS_)
; 1410 : 
; 1411 :     XMVECTORU32 Result = { { {
; 1412 :             (V1.vector4_u32[0] & ~Control.vector4_u32[0]) | (V2.vector4_u32[0] & Control.vector4_u32[0]),
; 1413 :             (V1.vector4_u32[1] & ~Control.vector4_u32[1]) | (V2.vector4_u32[1] & Control.vector4_u32[1]),
; 1414 :             (V1.vector4_u32[2] & ~Control.vector4_u32[2]) | (V2.vector4_u32[2] & Control.vector4_u32[2]),
; 1415 :             (V1.vector4_u32[3] & ~Control.vector4_u32[3]) | (V2.vector4_u32[3] & Control.vector4_u32[3]),
; 1416 :         } } };
; 1417 :     return Result.v;
; 1418 : 
; 1419 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 1420 :     return vbslq_f32(vreinterpretq_u32_f32(Control), V2, V1);
; 1421 : #elif defined(_XM_SSE_INTRINSICS_)
; 1422 :     XMVECTOR vTemp1 = _mm_andnot_ps(Control, V1);

  0004a	0f 28 45 20	 movaps	 xmm0, XMMWORD PTR Control$[rbp]
  0004e	0f 55 45 00	 andnps	 xmm0, XMMWORD PTR V1$[rbp]
  00052	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00059	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00060	0f 29 45 30	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 1423 :     XMVECTOR vTemp2 = _mm_and_ps(V2, Control);

  00064	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V2$[rbp]
  00068	0f 54 45 20	 andps	 xmm0, XMMWORD PTR Control$[rbp]
  0006c	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00073	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0007a	0f 29 45 40	 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 1424 :     return _mm_or_ps(vTemp1, vTemp2);

  0007e	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  00082	0f 56 45 40	 orps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  00086	0f 29 85 b0 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  0008d	0f 28 85 b0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]

; 1425 : #endif
; 1426 : }

  00094	48 8d a5 c0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+192]
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
?XMVectorSelect@DirectX@@YQ?AT__m128@@T2@00@Z ENDP	; DirectX::XMVectorSelect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = 64
x$ = 96
y$ = 104
z$ = 112
w$ = 120
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT

; 67   : {

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00018	55		 push	 rbp
  00019	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00029	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 68   : #if defined(_XM_NO_INTRINSICS_)
; 69   :     XMVECTORF32 vResult = { { { x, y, z, w } } };
; 70   :     return vResult.v;
; 71   : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 72   :     float32x2_t V0 = vcreate_f32(
; 73   :         static_cast<uint64_t>(*reinterpret_cast<const uint32_t*>(&x))
; 74   :         | (static_cast<uint64_t>(*reinterpret_cast<const uint32_t*>(&y)) << 32));
; 75   :     float32x2_t V1 = vcreate_f32(
; 76   :         static_cast<uint64_t>(*reinterpret_cast<const uint32_t*>(&z))
; 77   :         | (static_cast<uint64_t>(*reinterpret_cast<const uint32_t*>(&w)) << 32));
; 78   :     return vcombine_f32(V0, V1);
; 79   : #elif defined(_XM_SSE_INTRINSICS_)
; 80   :     return _mm_set_ps(w, z, y, x);

  0002e	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR w$[rbp]
  00033	f3 0f 10 4d 70	 movss	 xmm1, DWORD PTR z$[rbp]
  00038	f3 0f 10 55 68	 movss	 xmm2, DWORD PTR y$[rbp]
  0003d	f3 0f 10 5d 60	 movss	 xmm3, DWORD PTR x$[rbp]
  00042	0f 14 c8	 unpcklps xmm1, xmm0
  00045	0f 14 da	 unpcklps xmm3, xmm2
  00048	0f 28 c3	 movaps	 xmm0, xmm3
  0004b	0f 16 c1	 movlhps xmm0, xmm1
  0004e	0f 29 45 40	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00052	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 81   : #endif
; 82   : }

  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathVector.inl
;	COMDAT ?XMVectorZero@DirectX@@YQ?AT__m128@@XZ
_TEXT	SEGMENT
$T1 = 64
?XMVectorZero@DirectX@@YQ?AT__m128@@XZ PROC		; DirectX::XMVectorZero, COMDAT

; 47   : {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__411BBCFA_DirectXMathVector@inl
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 48   : #if defined(_XM_NO_INTRINSICS_)
; 49   :     XMVECTORF32 vResult = { { { 0.0f, 0.0f, 0.0f, 0.0f } } };
; 50   :     return vResult.v;
; 51   : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 52   :     return vdupq_n_f32(0);
; 53   : #elif defined(_XM_SSE_INTRINSICS_)
; 54   :     return _mm_setzero_ps();

  00017	0f 57 c0	 xorps	 xmm0, xmm0
  0001a	0f 29 45 40	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0001e	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 55   : #endif
; 56   : }

  00022	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?XMVectorZero@DirectX@@YQ?AT__m128@@XZ ENDP		; DirectX::XMVectorZero
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathConvert.inl
;	COMDAT ?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z
_TEXT	SEGMENT
M$ = 0
pDestination$ = 144
?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z PROC ; DirectX::XMStoreFloat4x4, COMDAT

; 2103 : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 45 00	 lea	 rax, QWORD PTR M$[rbp]
  00016	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR [rsp+184], rax
  0001e	0f 29 5d 30	 movaps	 XMMWORD PTR M$[rbp+48], xmm3
  00022	0f 29 55 20	 movaps	 XMMWORD PTR M$[rbp+32], xmm2
  00026	0f 29 4d 10	 movaps	 XMMWORD PTR M$[rbp+16], xmm1
  0002a	0f 29 45 00	 movaps	 XMMWORD PTR M$[rbp], xmm0
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__85ADA900_DirectXMathConvert@inl
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2104 :     assert(pDestination);

  0003a	48 83 bd 90 00
	00 00 00	 cmp	 QWORD PTR pDestination$[rbp], 0
  00042	75 21		 jne	 SHORT $LN3@XMStoreFlo
  00044	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@2@UXMMATRIX@2@@Z@4JA
  0004a	ff c0		 inc	 eax
  0004c	44 8b c0	 mov	 r8d, eax
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KM@DJALCFKP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn@
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00063	33 c0		 xor	 eax, eax
$LN3@XMStoreFlo:

; 2105 : #if defined(_XM_NO_INTRINSICS_)
; 2106 : 
; 2107 :     pDestination->m[0][0] = M.r[0].vector4_f32[0];
; 2108 :     pDestination->m[0][1] = M.r[0].vector4_f32[1];
; 2109 :     pDestination->m[0][2] = M.r[0].vector4_f32[2];
; 2110 :     pDestination->m[0][3] = M.r[0].vector4_f32[3];
; 2111 : 
; 2112 :     pDestination->m[1][0] = M.r[1].vector4_f32[0];
; 2113 :     pDestination->m[1][1] = M.r[1].vector4_f32[1];
; 2114 :     pDestination->m[1][2] = M.r[1].vector4_f32[2];
; 2115 :     pDestination->m[1][3] = M.r[1].vector4_f32[3];
; 2116 : 
; 2117 :     pDestination->m[2][0] = M.r[2].vector4_f32[0];
; 2118 :     pDestination->m[2][1] = M.r[2].vector4_f32[1];
; 2119 :     pDestination->m[2][2] = M.r[2].vector4_f32[2];
; 2120 :     pDestination->m[2][3] = M.r[2].vector4_f32[3];
; 2121 : 
; 2122 :     pDestination->m[3][0] = M.r[3].vector4_f32[0];
; 2123 :     pDestination->m[3][1] = M.r[3].vector4_f32[1];
; 2124 :     pDestination->m[3][2] = M.r[3].vector4_f32[2];
; 2125 :     pDestination->m[3][3] = M.r[3].vector4_f32[3];
; 2126 : 
; 2127 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2128 :     vst1q_f32(reinterpret_cast<float*>(&pDestination->_11), M.r[0]);
; 2129 :     vst1q_f32(reinterpret_cast<float*>(&pDestination->_21), M.r[1]);
; 2130 :     vst1q_f32(reinterpret_cast<float*>(&pDestination->_31), M.r[2]);
; 2131 :     vst1q_f32(reinterpret_cast<float*>(&pDestination->_41), M.r[3]);
; 2132 : #elif defined(_XM_SSE_INTRINSICS_)
; 2133 :     _mm_storeu_ps(&pDestination->_11, M.r[0]);

  00065	b8 10 00 00 00	 mov	 eax, 16
  0006a	48 6b c0 00	 imul	 rax, rax, 0
  0006e	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR pDestination$[rbp]
  00075	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rax]
  0007a	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2134 :     _mm_storeu_ps(&pDestination->_21, M.r[1]);

  0007d	b8 10 00 00 00	 mov	 eax, 16
  00082	48 6b c0 01	 imul	 rax, rax, 1
  00086	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR pDestination$[rbp]
  0008d	48 83 c1 10	 add	 rcx, 16
  00091	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rax]
  00096	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2135 :     _mm_storeu_ps(&pDestination->_31, M.r[2]);

  00099	b8 10 00 00 00	 mov	 eax, 16
  0009e	48 6b c0 02	 imul	 rax, rax, 2
  000a2	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR pDestination$[rbp]
  000a9	48 83 c1 20	 add	 rcx, 32			; 00000020H
  000ad	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rax]
  000b2	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2136 :     _mm_storeu_ps(&pDestination->_41, M.r[3]);

  000b5	b8 10 00 00 00	 mov	 eax, 16
  000ba	48 6b c0 03	 imul	 rax, rax, 3
  000be	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR pDestination$[rbp]
  000c5	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c9	0f 10 44 05 00	 movups	 xmm0, XMMWORD PTR M$[rbp+rax]
  000ce	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0

; 2137 : #endif
; 2138 : }

  000d1	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000d8	5d		 pop	 rbp
  000d9	c3		 ret	 0
?XMStoreFloat4x4@DirectX@@YQXPEAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ENDP ; DirectX::XMStoreFloat4x4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMathConvert.inl
;	COMDAT ?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z
_TEXT	SEGMENT
xy$ = 0
z$ = 16
$T1 = 96
$T2 = 112
$T3 = 128
$T4 = 144
pSource$ = 176
?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z PROC ; DirectX::XMLoadFloat3, COMDAT

; 488  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__85ADA900_DirectXMathConvert@inl
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 489  :     assert(pSource);

  0001e	48 83 bd b0 00
	00 00 00	 cmp	 QWORD PTR pSource$[rbp], 0
  00026	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00028	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA
  0002e	ff c0		 inc	 eax
  00030	44 8b c0	 mov	 r8d, eax
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KM@DJALCFKP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe@
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00047	33 c0		 xor	 eax, eax
$LN3@XMLoadFloa:

; 490  : #if defined(_XM_NO_INTRINSICS_)
; 491  :     XMVECTOR V;
; 492  :     V.vector4_f32[0] = pSource->x;
; 493  :     V.vector4_f32[1] = pSource->y;
; 494  :     V.vector4_f32[2] = pSource->z;
; 495  :     V.vector4_f32[3] = 0.f;
; 496  :     return V;
; 497  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 498  :     float32x2_t x = vld1_f32(reinterpret_cast<const float*>(pSource));
; 499  :     float32x2_t zero = vdup_n_f32(0);
; 500  :     float32x2_t y = vld1_lane_f32(reinterpret_cast<const float*>(pSource) + 2, zero, 0);
; 501  :     return vcombine_f32(x, y);
; 502  : #elif defined(_XM_SSE4_INTRINSICS_)
; 503  :     __m128 xy = _mm_castpd_ps(_mm_load_sd(reinterpret_cast<const double*>(pSource)));
; 504  :     __m128 z = _mm_load_ss(&pSource->z);
; 505  :     return _mm_insert_ps(xy, z, 0x20);
; 506  : #elif defined(_XM_SSE_INTRINSICS_)
; 507  :     __m128 xy = _mm_castpd_ps(_mm_load_sd(reinterpret_cast<const double*>(pSource)));

  00049	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  00050	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00054	0f 57 c9	 xorps	 xmm1, xmm1
  00057	f2 0f 10 c8	 movsd	 xmm1, xmm0
  0005b	0f 28 c1	 movaps	 xmm0, xmm1
  0005e	0f 29 45 70	 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00062	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  00066	0f 29 45 60	 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0006a	0f 28 45 60	 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0006e	0f 29 45 00	 movaps	 XMMWORD PTR xy$[rbp], xmm0

; 508  :     __m128 z = _mm_load_ss(&pSource->z);

  00072	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  00079	48 83 c0 08	 add	 rax, 8
  0007d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [rax]
  00081	0f 57 c9	 xorps	 xmm1, xmm1
  00084	f3 0f 10 c8	 movss	 xmm1, xmm0
  00088	0f 28 c1	 movaps	 xmm0, xmm1
  0008b	0f 29 85 80 00
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00092	0f 28 85 80 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00099	0f 29 45 10	 movaps	 XMMWORD PTR z$[rbp], xmm0

; 509  :     return _mm_movelh_ps(xy, z);

  0009d	0f 28 45 00	 movaps	 xmm0, XMMWORD PTR xy$[rbp]
  000a1	0f 28 4d 10	 movaps	 xmm1, XMMWORD PTR z$[rbp]
  000a5	0f 16 c1	 movlhps xmm0, xmm1
  000a8	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000af	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]

; 510  : #endif
; 511  : }

  000b6	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ENDP ; DirectX::XMLoadFloat3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??0XMFLOAT4@DirectX@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
_z$ = 104
_w$ = 112
??0XMFLOAT4@DirectX@@QEAA@MMMM@Z PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT

; 716  :         constexpr XMFLOAT4(float _x, float _y, float _z, float _w) noexcept : x(_x), y(_y), z(_z), w(_w) {}

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00017	55		 push	 rbp
  00018	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00031	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _x$[rbp]
  00036	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  0003a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003e	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _y$[rbp]
  00043	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _z$[rbp]
  00051	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00056	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005a	f3 0f 10 45 70	 movss	 xmm0, DWORD PTR _w$[rbp]
  0005f	f3 0f 11 40 0c	 movss	 DWORD PTR [rax+12], xmm0
  00064	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00068	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??0XMFLOAT4@DirectX@@QEAA@MMMM@Z ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??0XMFLOAT3@DirectX@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
_z$ = 104
??0XMFLOAT3@DirectX@@QEAA@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT

; 650  :         constexpr XMFLOAT3(float _x, float _y, float _z) noexcept : x(_x), y(_y), z(_z) {}

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00017	55		 push	 rbp
  00018	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00031	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _x$[rbp]
  00036	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  0003a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003e	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _y$[rbp]
  00043	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _z$[rbp]
  00051	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00056	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??0XMFLOAT3@DirectX@@QEAA@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??0XMFLOAT2@DirectX@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 80
_x$ = 88
_y$ = 96
??0XMFLOAT2@DirectX@@QEAA@MM@Z PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT

; 587  :         constexpr XMFLOAT2(float _x, float _y) noexcept : x(_x), y(_y) {}

$LN3:
  00000	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  00006	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  0000c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00011	55		 push	 rbp
  00012	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00016	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00027	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002b	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _x$[rbp]
  00030	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _y$[rbp]
  0003d	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00042	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00046	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??0XMFLOAT2@DirectX@@QEAA@MM@Z ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORU32::operator __m128, COMDAT

; 455  :         inline operator XMVECTOR() const noexcept { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0002b	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  0002e	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORU32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORI32::operator __m128, COMDAT

; 417  :         inline operator XMVECTOR() const noexcept { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0002b	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  0002e	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORI32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORF32::operator __m128, COMDAT

; 397  :         inline operator XMVECTOR() const noexcept { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0002b	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  0002e	48 8b 45 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??BXMVECTORF32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORF32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\DirectXMath.h
;	COMDAT ?XMConvertToRadians@DirectX@@YAMM@Z
_TEXT	SEGMENT
fDegrees$ = 80
?XMConvertToRadians@DirectX@@YAMM@Z PROC		; DirectX::XMConvertToRadians, COMDAT

; 306  :     constexpr float XMConvertToRadians(float fDegrees) noexcept { return fDegrees * (XM_PI / 180.0f); }

$LN3:
  00000	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00006	55		 push	 rbp
  00007	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E6E853B5_DirectXMath@h
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR fDegrees$[rbp]
  00021	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00029	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?XMConvertToRadians@DirectX@@YAMM@Z ENDP		; DirectX::XMConvertToRadians
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
;	COMDAT fabsf
_TEXT	SEGMENT
_X$ = 80
fabsf	PROC						; COMDAT

; 679  :         {

$LN3:
  00000	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00006	55		 push	 rbp
  00007	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BB16330F_corecrt_math@h
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 680  :             return (float)fabs(_X);

  0001c	f3 0f 5a 45 50	 cvtss2sd xmm0, DWORD PTR _X$[rbp]
  00021	e8 00 00 00 00	 call	 fabs
  00026	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0

; 681  :         }

  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\d3d12.h
;	COMDAT ??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z
_TEXT	SEGMENT
a$ = 80
b$ = 88
??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z PROC	; operator&, COMDAT

; 3545 : DEFINE_ENUM_FLAG_OPERATORS( D3D12_DESCRIPTOR_HEAP_FLAGS );

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__AD50D478_d3d12@h
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001e	8b 45 58	 mov	 eax, DWORD PTR b$[rbp]
  00021	8b 4d 50	 mov	 ecx, DWORD PTR a$[rbp]
  00024	23 c8		 and	 ecx, eax
  00026	8b c1		 mov	 eax, ecx
  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
??I@YA?AW4D3D12_DESCRIPTOR_HEAP_FLAGS@@W40@0@Z ENDP	; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
__formal$ = 96
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Render\D3D12\D3D12Render.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 80
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F9EF3DD8_D3D12Render@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
