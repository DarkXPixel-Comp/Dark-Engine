; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33030.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskXY
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?g_XMLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLg10
PUBLIC	?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLg10
PUBLIC	?g_UByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UByteMax
PUBLIC	?g_ByteMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMin
PUBLIC	?g_ByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMax
PUBLIC	?g_ShortMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMin
PUBLIC	?g_ShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMax
PUBLIC	?g_UShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UShortMax
PUBLIC	__pobjectentryfirst
PUBLIC	__pobjectentrymid
PUBLIC	__pobjectentrylast
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	IID_IXAudio2Extension
PUBLIC	IID_IXAudio2
msvcjmc	SEGMENT
__B51A3A23_Core@h DB 01H
__4A250794_concurrencysal@h DB 01H
__64794009_sal@h DB 01H
__A3E7195B_vadefs@h DB 01H
__978626E5_vcruntime@h DB 01H
__735B63F8_xkeycheck@h DB 01H
__142C9C9C_yvals_core@h DB 01H
__659C5902_limits@h DB 01H
__BE829F50_climits DB 01H
__9A2CA802_xtr1common DB 01H
__51ADDFC3_intrin0@inl@h DB 01H
__FC9FC984_intrin0@h DB 01H
__F3EA4CCC___msvc_bit_utils@hpp DB 01H
__DBEA773D_stdint@h DB 01H
__87335CDF_cstdint DB 01H
__1B0272D9_corecrt@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__3A6DBDA2_cstdlib DB 01H
__B9985323_float@h DB 01H
__3FBCF6F4_cfloat DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4CF83D73_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__4CB5F942_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D673EB20_cwchar DB 01H
__595ABB90_limits DB 01H
__84C50014_vcruntime_new@h DB 01H
__7A6EC116_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__E5B2708F_crtdefs@h DB 01H
__61229A4B_use_ansi@h DB 01H
__8C2D0B1D_yvals@h DB 01H
__9FA6670F_cstddef DB 01H
__3DF2A533_type_traits DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__35BB339F_eh@h DB 01H
__7280C444_vcruntime_exception@h DB 01H
__2DED1E19_exception DB 01H
__A5D71DBC_new DB 01H
__27E192CF_xatomic@h DB 01H
__50E371A7_initializer_list DB 01H
__339AE60A_concepts DB 01H
__C3788713_compare DB 01H
__0D603829_utility DB 01H
__874288EA___msvc_iter_core@hpp DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__E8295E1E_string@h DB 01H
__76FF1542_cstring DB 01H
__B7320FC0_xutility DB 01H
__A0E057FF_tuple DB 01H
__67F55BEA_xmemory DB 01H
__A0A2F5C0_xpolymorphic_allocator@h DB 01H
__C671E263___msvc_sanitizer_annotate_container@hpp DB 01H
__14F7CB70_vector DB 01H
__FBEF5BAE_Array@h DB 01H
__FCC6D126_Delegate@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__73193115_excpt@h DB 01H
__EF35C9F2_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__95B36E16_iosfwd DB 01H
__1326DD76_xstring DB 01H
__4333DAD4_cctype DB 01H
__91273182_string DB 01H
__9024636E_DarkString@h DB 01H
__7671EFE0_WindowsWindow@h DB 01H
__C7215CCD_algorithm DB 01H
__103905FF_Application@h DB 01H
__0A9237D2_time@h DB 01H
__C070D2B6_ctime DB 01H
__52656974_list DB 01H
__F7972D0B_share@h DB 01H
__E9739B8C___msvc_system_error_abi@hpp DB 01H
__D1D94988_cerrno DB 01H
__A4A32444_stdexcept DB 01H
__57B442CC_xcall_once@h DB 01H
__24B81E12_xerrc@h DB 01H
__4F9CF3B8_xatomic_wait@h DB 01H
__01F6EC81_xtimec@h DB 01H
__006CADF8_xthreads@h DB 01H
__326FE752_atomic DB 01H
__E8E950EC_system_error DB 01H
__93AC6E75_vcruntime_typeinfo@h DB 01H
__C7EDFCD9_typeinfo DB 01H
__E5F4B71E_memory DB 01H
__C9B1E011_xfacet DB 01H
__24FAA3FC___msvc_xlocinfo_types@hpp DB 01H
__791C33B7_locale@h DB 01H
__A9C16173_clocale DB 01H
__D8641F11_xlocinfo DB 01H
__CC18A947_xlocale DB 01H
__E1816802_xiosbase DB 01H
__A6039CF8_streambuf DB 01H
__C0945C43___msvc_filebuf@hpp DB 01H
__06C34EBE_cmath DB 01H
__A69EB880_iterator DB 01H
__529FCF50_xlocnum DB 01H
__5D1A27AA_ios DB 01H
__DF087383_ostream DB 01H
__BCD846B9_istream DB 01H
__4A903650_fstream DB 01H
__6A70D710_ratio DB 01H
__E71D1BFE___msvc_chrono@hpp DB 01H
__F491F32A_vcruntime_startup@h DB 01H
__005E73E1_corecrt_startup@h DB 01H
__8B12B2C4_process@h DB 01H
__57ED3434_stop_token DB 01H
__3EB9CFA8_thread DB 01H
__78DDDD40_mutex DB 01H
__92B9F28F_CommandLine@h DB 01H
__CE362511_Logger@hpp DB 01H
__FABEF7B5_CoreDefines@h DB 01H
__C868A340_OCIdl@h DB 01H
__90AD1CBB_dxgicommon@h DB 01H
__DBA3F304_dxgiformat@h DB 01H
__4B98FDD9_d3dcommon@h DB 01H
__30CE95B1_d3d12sdklayers@h DB 01H
__AD50D478_d3d12@h DB 01H
__EBD162FD_dxgitype@h DB 01H
__F473F334_dxgi@h DB 01H
__3532CEB3_dxgi1_2@h DB 01H
__34F0A484_dxgi1_3@h DB 01H
__31BFB201_dxgi1_4@h DB 01H
__307DD836_dxgi1_5@h DB 01H
__323B666F_dxgi1_6@h DB 01H
__4B899F3E_setjmp@h DB 01H
__A40231C8_mmintrin@h DB 01H
__17534AB1_xmmintrin@h DB 01H
__7231C37D_emmintrin@h DB 01H
__AD90ABF4_pmmintrin@h DB 01H
__1D49D876_tmmintrin@h DB 01H
__3472CDF5_smmintrin@h DB 01H
__51104439_nmmintrin@h DB 01H
__84ABBE77_wmmintrin@h DB 01H
__4F3FF370_zmmintrin@h DB 01H
__782B51BA_immintrin@h DB 01H
__C2E8B0FF_ammintrin@h DB 01H
__6DBF2349_intrin@h DB 01H
__19139D6C_assert@h DB 01H
__85ADA900_DirectXMathConvert@inl DB 01H
__411BBCFA_DirectXMathVector@inl DB 01H
__4AFE615D_DirectXMathMatrix@inl DB 01H
__98B66FFE_DirectXMathMisc@inl DB 01H
__E6E853B5_DirectXMath@h DB 01H
__CAFE1B4D_d3d11shader@h DB 01H
__F3732788_d3d12shader@h DB 01H
__2CACEFC0_d3dcompiler@h DB 01H
__F2FF8333_hstring@h DB 01H
__4BAE0D45_inspectable@h DB 01H
__2E21A007_weakreference@h DB 01H
__ADF9C41F_activation@h DB 01H
__847F1726_roapi@h DB 01H
__0AE89165_def@h DB 01H
__087FBF63_internal@h DB 01H
__F7423081_client@h DB 01H
__12FD3F40_WinString@h DB 01H
__6F9C91B0_new@h DB 01H
__247BB969_restrictedErrorInfo@h DB 01H
__05F5D399_roerrorapi@h DB 01H
__73CE9EEE_implements@h DB 01H
__94D81D1E_ftm@h DB 01H
__5611F633_intsafe@h DB 01H
__5DD10A16_corewrappers@h DB 01H
__B8B3BDBE_module@h DB 01H
__D6FCE5BE_eventtoken@h DB 01H
__3D51D5E6_event@h DB 01H
__0691033D_wrl@h DB 01H
__B629FA8A_d3dx12@h DB 01H
__DC39B1D9_D3D12@h DB 01H
__ED560F7A_VertexTypes@h DB 01H
__59AEE840_cassert DB 01H
__EEE0DC84_DescriptorHeap@h DB 01H
__4C7DEF31_D3D12Types@h DB 01H
__B566F9C5_xbit_ops@h DB 01H
__1B8E3698_xnode_handle@h DB 01H
__696C8ED8_xhash DB 01H
__3DA11C4D_unordered_map DB 01H
__98E9BF8D_TUniquePtr@h DB 01H
__EAA52A7A_D3D12Camera@h DB 01H
__68B439B4_D3D12Texture@h DB 01H
__466C4D22_D3D12Utils@h DB 01H
__45275B9D_D3D12Resource@h DB 01H
__C6A116CD_D3D12Render@h DB 01H
__B9040E87_Renderer@h DB 01H
__B9FFAD7A_UObject@h DB 01H
__349F89FE_ActorComponent@h DB 01H
__C0395B86_TList@h DB 01H
__1FF1BD98_D3D12Mesh@h DB 01H
__CF36E38C_D3D12Material@h DB 01H
__E9AE02A5_D3D12Model@h DB 01H
__6AE9EDAC_DarkMathUtility@h DB 01H
__7E164BFB_USceneComponent@h DB 01H
__4CA7DCC5_Mouse@h DB 01H
__BF4148EC_Keyboard@h DB 01H
__1B2D56BD_InputCore@h DB 01H
__1A51089F_Actor@h DB 01H
__C9CFF5D2_RotateComponent@h DB 01H
__59F10418_CameraActor@h DB 01H
__4C3DB073_D3D12Scene@h DB 01H
__46118574_World@h DB 01H
__4818932A_unordered_set DB 01H
__014E33A8_TMemory@h DB 01H
__C1566CF7_basetyps@h DB 01H
__9F144151_mmreg@h DB 01H
__25E01902_audiosessiontypes@h DB 01H
__E36B8921_xaudio2@h DB 01H
__E48B5707_Audio@h DB 01H
__7FDD34FA_DEditor@h DB 01H
__0F108736_xfilesystem_abi@h DB 01H
__3E632381___msvc_tzdb@hpp DB 01H
__D30FB2B2_forward_list DB 01H
__4722581B_xsmf_control@h DB 01H
__DEE6A3C1_optional DB 01H
__7F768539_sstream DB 01H
__7C79B603_xloctime DB 01H
__B5ECD415___msvc_format_ucd_tables@hpp DB 01H
__8C7168E8___msvc_print@hpp DB 01H
__9971FA6E_bit DB 01H
__39D77923_xcharconv@h DB 01H
__486BF2EB_xcharconv_ryu_tables@h DB 01H
__9E967C73_xcharconv_ryu@h DB 01H
__8E5CDAAA_xcharconv_tables@h DB 01H
__A8BD61A6_charconv DB 01H
__CC57EFBC_xlocbuf DB 01H
__E0145E3B_xlocmes DB 01H
__79FDDA68_xlocmon DB 01H
__4E1945B3_locale DB 01H
__D123F1F4_format DB 01H
__401A80EB_iomanip DB 01H
__3DB7BD1A_chrono DB 01H
__D22613FB_DEngine@h DB 01H
__0EFBA633_WindowsWindow@cpp DB 01H
__7BF4187B_predefined C++ types (compiler internal) DB 01H
msvcjmc	ENDS
;	COMDAT IID_IXAudio2
CONST	SEGMENT
IID_IXAudio2 DD	02b02e3cfH
	DW	02e0bH
	DW	04ec3H
	DB	0beH
	DB	045H
	DB	01bH
	DB	02aH
	DB	03fH
	DB	0e7H
	DB	021H
	DB	0dH
CONST	ENDS
;	COMDAT IID_IXAudio2Extension
CONST	SEGMENT
IID_IXAudio2Extension DD 084ac29bbH
	DW	0d619H
	DW	044d2H
	DB	0b1H
	DB	097H
	DB	0e4H
	DB	0acH
	DB	0f7H
	DB	0dfH
	DB	03eH
	DB	0d6H
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT __pobjectentrylast
minATL$__z	SEGMENT
__pobjectentrylast DQ 0000000000000000H
minATL$__z	ENDS
;	COMDAT __pobjectentrymid
minATL$__m	SEGMENT
__pobjectentrymid DQ 0000000000000000H
minATL$__m	ENDS
;	COMDAT __pobjectentryfirst
minATL$__a	SEGMENT
__pobjectentryfirst DQ 0000000000000000H
minATL$__a	ENDS
;	COMDAT ?g_UShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UShortMax@DirectX@@3UXMVECTORF32@1@B DD 0477fff00r ; 65535 ; DirectX::g_UShortMax
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
CONST	ENDS
;	COMDAT ?g_ShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMax@DirectX@@3UXMVECTORF32@1@B DD 046fffe00r ; 32767 ; DirectX::g_ShortMax
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
CONST	ENDS
;	COMDAT ?g_ShortMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMin@DirectX@@3UXMVECTORF32@1@B DD 0c6fffe00r ; -32767 ; DirectX::g_ShortMin
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
CONST	ENDS
;	COMDAT ?g_ByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMax@DirectX@@3UXMVECTORF32@1@B DD 042fe0000r ; 127 ; DirectX::g_ByteMax
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
CONST	ENDS
;	COMDAT ?g_ByteMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMin@DirectX@@3UXMVECTORF32@1@B DD 0c2fe0000r ; -127 ; DirectX::g_ByteMin
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
CONST	ENDS
;	COMDAT ?g_UByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UByteMax@DirectX@@3UXMVECTORF32@1@B DD 0437f0000r ; 255 ; DirectX::g_UByteMax
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
CONST	ENDS
;	COMDAT ?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLg10@DirectX@@3UXMVECTORF32@1@B DD 03e9a209br ; 0.30103 ; DirectX::g_XMInvLg10
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
	DD	03e9a209br			; 0.30103
CONST	ENDS
;	COMDAT ?g_XMLg10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLg10@DirectX@@3UXMVECTORF32@1@B DD 040549a78r ; 3.32193 ; DirectX::g_XMLg10
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
	DD	040549a78r			; 3.32193
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976562
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskXY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	wmemcpy
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_unlocked
PUBLIC	?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_locked
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy
PUBLIC	?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z	; std::_Char_traits<wchar_t,unsigned short>::assign
PUBLIC	?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z	; std::_WChar_traits<wchar_t>::length
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::copy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z	; std::_Char_traits<char,int>::assign
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
PUBLIC	??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z ; std::_UIntegral_to_string<char,unsigned int>
PUBLIC	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::to_string
PUBLIC	??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z ; std::_UIntegral_to_string<char,unsigned __int64>
PUBLIC	??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z ; FWindowsWindow::FWindowsWindow
PUBLIC	??1FWindowsWindow@@QEAA@XZ			; FWindowsWindow::~FWindowsWindow
PUBLIC	?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z ; FWindowsWindow::Create
PUBLIC	?Destroy@FWindowsWindow@@QEAAXXZ		; FWindowsWindow::Destroy
PUBLIC	?Update@FWindowsWindow@@QEAAXXZ			; FWindowsWindow::Update
PUBLIC	?SetResolution@FWindowsWindow@@QEAAXII@Z	; FWindowsWindow::SetResolution
PUBLIC	?SetPos@FWindowsWindow@@QEAAXII@Z		; FWindowsWindow::SetPos
PUBLIC	?SetResPos@FWindowsWindow@@QEAAXIIII@Z		; FWindowsWindow::SetResPos
PUBLIC	?isClose@FWindowsWindow@@QEAA_NXZ		; FWindowsWindow::isClose
PUBLIC	?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FWindowsWindow::SetWindowTitle
PUBLIC	??0?$TMultiCastDelegate@XJJ@@QEAA@XZ		; TMultiCastDelegate<void,long,long>::TMultiCastDelegate<void,long,long>
PUBLIC	??1?$TMultiCastDelegate@XJJ@@QEAA@XZ		; TMultiCastDelegate<void,long,long>::~TMultiCastDelegate<void,long,long>
PUBLIC	?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z	; TMultiCastDelegate<void,long,long>::BroadCast
PUBLIC	??0?$TMultiCastDelegate@X$$V@@QEAA@XZ		; TMultiCastDelegate<void>::TMultiCastDelegate<void>
PUBLIC	??1?$TMultiCastDelegate@X$$V@@QEAA@XZ		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
PUBLIC	?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ	; TMultiCastDelegate<void>::BroadCast
PUBLIC	?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z ; FWindowsWindow::WndProc
PUBLIC	??_GFWindowsWindow@@QEAAPEAXI@Z			; FWindowsWindow::`scalar deleting destructor'
PUBLIC	??0FWindowsWindowManager@@QEAA@XZ		; FWindowsWindowManager::FWindowsWindowManager
PUBLIC	??1FWindowsWindowManager@@QEAA@XZ		; FWindowsWindowManager::~FWindowsWindowManager
PUBLIC	?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FWindowsWindowManager::CreateWindow
PUBLIC	?Update@FWindowsWindowManager@@QEAAXXZ		; FWindowsWindowManager::Update
PUBLIC	?Destroy@FWindowsWindowManager@@QEAAXI@Z	; FWindowsWindowManager::Destroy
PUBLIC	?Quit@FWindowsWindowManager@@QEAAXXZ		; FWindowsWindowManager::Quit
PUBLIC	?SetDelay@FWindowsWindowManager@@QEAAXH@Z	; FWindowsWindowManager::SetDelay
PUBLIC	??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ ; std::allocator<FWindowsWindow *>::allocator<FWindowsWindow *>
PUBLIC	?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::max_size
PUBLIC	??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >
PUBLIC	??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::~vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >
PUBLIC	?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::push_back
PUBLIC	?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::erase
PUBLIC	?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::clear
PUBLIC	?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::begin
PUBLIC	?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_end
PUBLIC	?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
PUBLIC	?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::max_size
PUBLIC	?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::capacity
PUBLIC	??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
PUBLIC	?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<FWindowsWindow *> >::_Vector_val<std::_Simple_types<FWindowsWindow *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first
PUBLIC	?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ	; Application::GetInstance
PUBLIC	?CmdShow@Application@@SAHXZ			; Application::CmdShow
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z ; std::_Adl_verify_range<char *,char *>
PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped
PUBLIC	??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
PUBLIC	??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >
PUBLIC	??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ; std::_Move_unchecked<FWindowsWindow * *,FWindowsWindow * *>
PUBLIC	??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ; std::_Unfancy<FWindowsWindow *>
PUBLIC	??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::destroy<FWindowsWindow *>
PUBLIC	??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_one_at_back<FWindowsWindow * const &>
PUBLIC	??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><FWindowsWindow *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1><>
PUBLIC	??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ; std::allocator<IIContainer<void> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,long,long> *>::allocator<IIContainer<void,long,long> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::~vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_end
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::`scalar deleting destructor'
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$_Convert_size@_K_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64,unsigned __int64>
PUBLIC	??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>
PUBLIC	??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z		; std::_Refancy<char *,0>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,long,long> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1><>
PUBLIC	??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z	; std::_Destroy_in_place<wchar_t *>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void> *> >
PUBLIC	??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z		; std::_Unfancy<char const >
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z	; std::construct_at<char,char const &,0>
PUBLIC	??$addressof@_W@std@@YAPEA_WAEA_W@Z		; std::addressof<wchar_t>
PUBLIC	??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ; std::construct_at<wchar_t,wchar_t const &,0>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
PUBLIC	??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z		; std::end<char,21>
PUBLIC	??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z	; std::_UIntegral_to_buff<char,unsigned int>
PUBLIC	??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
PUBLIC	??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z	; std::_UIntegral_to_buff<char,unsigned __int64>
PUBLIC	??$_Verify_range@D@std@@YAXQEBD0@Z		; std::_Verify_range<char>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
PUBLIC	??$distance@PEAD@std@@YA_JPEAD0@Z		; std::distance<char *>
PUBLIC	??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z	; std::_Get_unwrapped<char * &>
PUBLIC	??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ; std::_Copy_memmove<FWindowsWindow * *,FWindowsWindow * *>
PUBLIC	??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z ; std::destroy_at<FWindowsWindow *>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_back_with_unused_capacity<FWindowsWindow * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
PUBLIC	??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z ; std::construct_at<char *,char * &,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z	; std::construct_at<wchar_t,0>
PUBLIC	??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z	; std::construct_at<char,0>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>,unsigned __int64,char const *,unsigned __int64>
PUBLIC	??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>
PUBLIC	??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z ; std::_To_address<FWindowsWindow * *>
PUBLIC	??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z ; std::to_address<FWindowsWindow *>
PUBLIC	??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z ; std::_Construct_in_place<FWindowsWindow *,FWindowsWindow * const &>
PUBLIC	??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<FWindowsWindow *> >
PUBLIC	??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow * const &>
PUBLIC	??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >
PUBLIC	??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ; std::construct_at<wchar_t *,wchar_t * const &,0>
PUBLIC	??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Get_size_of_n@$01@std@@YA_K_K@Z		; std::_Get_size_of_n<2>
PUBLIC	??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z ; std::addressof<FWindowsWindow *>
PUBLIC	??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<FWindowsWindow *,FWindowsWindow * const &,0>
PUBLIC	??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z ; std::_Get_unwrapped<FWindowsWindow * * const &>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::~_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Release
PUBLIC	??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Emplace_back<FWindowsWindow *>
PUBLIC	??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow *>
PUBLIC	??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<FWindowsWindow *,FWindowsWindow *,0>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1CK@NODEJLMD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5@ ; `string'
PUBLIC	??_C@_0BF@MDBPLPPA@Error?5create?5Window?5@	; `string'
PUBLIC	??_C@_01FJMABOPO@x@				; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0BH@NDOLHIMA@Success?5create?5window?5@	; `string'
PUBLIC	??_C@_0BO@HCHDIKNO@Window?5has?5been?5Destroyed?4?5?9?5@ ; `string'
PUBLIC	??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ ; `string'
PUBLIC	??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ ; `string'
PUBLIC	??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ ; `string'
PUBLIC	??_C@_0CI@OOHCOPKB@cannot?5seek?5invalidated?5vector?5@ ; `string'
PUBLIC	??_C@_1FE@NGOHPDCL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ ; `string'
PUBLIC	??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ ; `string'
PUBLIC	??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_0GB@IHPKJKEH@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@NIKDFAJH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp_abort:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__imp__calloc_dbg:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	strlen:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetWaitableTimer:PROC
EXTRN	__imp_CreateWaitableTimerW:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageW:PROC
EXTRN	__imp_PeekMessageW:PROC
EXTRN	__imp_DefWindowProcW:PROC
EXTRN	__imp_PostQuitMessage:PROC
EXTRN	__imp_RegisterClassExW:PROC
EXTRN	__imp_CreateWindowExW:PROC
EXTRN	__imp_IsWindow:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_SetWindowPos:PROC
EXTRN	__imp_KillTimer:PROC
EXTRN	__imp_UpdateWindow:PROC
EXTRN	__imp_SetWindowTextW:PROC
EXTRN	__imp_GetWindowRect:PROC
EXTRN	__imp_SetCursor:PROC
EXTRN	__imp_GetWindowLongPtrW:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_LoadCursorW:PROC
EXTRN	__imp_LoadIconW:PROC
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	?log@Logger@@SAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4LOGGER_ENUM@@@Z:PROC ; Logger::log
EXTRN	?logF@Logger@@SAXPEBDZZ:PROC			; Logger::logF
EXTRN	?log@Logger@@SAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4LOGGER_ENUM@@@Z:PROC ; Logger::log
EXTRN	?wait@Logger@@SAXXZ:PROC			; Logger::wait
EXTRN	?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z:PROC ; FInputCore::InputProc
EXTRN	?Quit@DEngine@@QEAAXXZ:PROC			; DEngine::Quit
EXTRN	_CxxThrowException:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	?_inst@Application@@0PEAV1@EA:QWORD		; Application::_inst
EXTRN	?GEngine@@3VDEngine@@A:BYTE			; GEngine
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_constant_evaluated@std@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?is_constant_evaluated@std@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+433
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+96
	DD	imagerel $unwind$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+138
	DD	imagerel $unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+257
	DD	imagerel $unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+146
	DD	imagerel $unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+87
	DD	imagerel $unwind$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+148
	DD	imagerel $unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN16
	DD	imagerel $LN16+305
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen_string@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlen_string@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN13
	DD	imagerel $LN13+189
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+93
	DD	imagerel $unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+57
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DD imagerel $LN6
	DD	imagerel $LN6+544
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN8
	DD	imagerel $LN8+311
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z DD imagerel $LN11
	DD	imagerel $LN11+548
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+205
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@_W@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD imagerel $LN13
	DD	imagerel $LN13+195
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+90
	DD	imagerel $unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+103
	DD	imagerel $unwind$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+207
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z DD imagerel $LN5
	DD	imagerel $LN5+127
	DD	imagerel $unwind$??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+129
	DD	imagerel $unwind$??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z DD imagerel $LN6
	DD	imagerel $LN6+200
	DD	imagerel $unwind$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA DD imagerel ?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA
	DD	imagerel ?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA+29
	DD	imagerel $unwind$?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1FWindowsWindow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??1FWindowsWindow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z DD imagerel $LN14
	DD	imagerel $LN14+1162
	DD	imagerel $unwind$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD imagerel ?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD imagerel ?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DD	imagerel ?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA+25
	DD	imagerel $unwind$?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD imagerel ?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DD	imagerel ?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD imagerel ?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DD	imagerel ?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Destroy@FWindowsWindow@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$?Destroy@FWindowsWindow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@FWindowsWindow@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+174
	DD	imagerel $unwind$?Update@FWindowsWindow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetResolution@FWindowsWindow@@QEAAXII@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?SetResolution@FWindowsWindow@@QEAAXII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetPos@FWindowsWindow@@QEAAXII@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?SetPos@FWindowsWindow@@QEAAXII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetResPos@FWindowsWindow@@QEAAXIIII@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$?SetResPos@FWindowsWindow@@QEAAXIIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isClose@FWindowsWindow@@QEAA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?isClose@FWindowsWindow@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+281
	DD	imagerel $unwind$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@XJJ@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@XJJ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@XJJ@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@XJJ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z DD imagerel $LN6
	DD	imagerel $LN6+167
	DD	imagerel $unwind$?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+126
	DD	imagerel $unwind$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN10
	DD	imagerel $LN10+342
	DD	imagerel $unwind$?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFWindowsWindow@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_GFWindowsWindow@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FWindowsWindowManager@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??0FWindowsWindowManager@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1FWindowsWindowManager@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??1FWindowsWindowManager@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN9
	DD	imagerel $LN9+433
	DD	imagerel $unwind$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+30
	DD	imagerel $unwind$?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@FWindowsWindowManager@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+217
	DD	imagerel $unwind$?Update@FWindowsWindowManager@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Destroy@FWindowsWindowManager@@QEAAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+381
	DD	imagerel $unwind$?Destroy@FWindowsWindowManager@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Quit@FWindowsWindowManager@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+187
	DD	imagerel $unwind$?Quit@FWindowsWindowManager@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDelay@FWindowsWindowManager@@QEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?SetDelay@FWindowsWindowManager@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z DD imagerel $LN12
	DD	imagerel $LN12+431
	DD	imagerel $unwind$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+167
	DD	imagerel $unwind$?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+213
	DD	imagerel $unwind$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+151
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+260
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+162
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA+26
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CmdShow@Application@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?CmdShow@Application@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN12
	DD	imagerel $LN12+438
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+131
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+183
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+153
	DD	imagerel $unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+341
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+341
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+328
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DD imagerel $LN8
	DD	imagerel $LN8+292
	DD	imagerel $unwind$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD imagerel $LN6
	DD	imagerel $LN6+204
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN43
	DD	imagerel $LN43+642
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+193
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z DD imagerel $LN7
	DD	imagerel $LN7+130
	DD	imagerel $unwind$??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+536
	DD	imagerel $unwind$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+98
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+86
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z DD imagerel $LN6
	DD	imagerel $LN6+102
	DD	imagerel $unwind$??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+230
	DD	imagerel $unwind$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@D@std@@YAXQEBD0@Z DD imagerel $LN12
	DD	imagerel $LN12+163
	DD	imagerel $unwind$??$_Verify_range@D@std@@YAXQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEAD@std@@YA_JPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$distance@PEAD@std@@YA_JPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DD imagerel $LN11
	DD	imagerel $LN11+545
	DD	imagerel $unwind$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DD imagerel $LN13
	DD	imagerel $LN13+462
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA+72
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+266
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z DD imagerel $LN6
	DD	imagerel $LN6+528
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z DD imagerel $LN7
	DD	imagerel $LN7+528
	DD	imagerel $unwind$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z DD imagerel $LN5
	DD	imagerel $LN5+113
	DD	imagerel $unwind$??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+243
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@ DB 'string iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@ DB 'string itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@NIKDFAJH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@NIKDFAJH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'i'
	DB	00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@IHPKJKEH@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@IHPKJKEH@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xutility', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, 'f', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
CONST	SEGMENT
??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ DB 'cannot seek v'
	DB	'ector iterator after end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 'n', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
CONST	SEGMENT
??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ DB 'cannot seek v'
	DB	'ector iterator before begin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@NGOHPDCL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAi?$AAn@
CONST	SEGMENT
??_C@_1FE@NGOHPDCL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAi?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OOHCOPKB@cannot?5seek?5invalidated?5vector?5@
CONST	SEGMENT
??_C@_0CI@OOHCOPKB@cannot?5seek?5invalidated?5vector?5@ DB 'cannot seek i'
	DB	'nvalidated vector iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
CONST	SEGMENT
??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
CONST	SEGMENT
??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ DB 'cannot seek v'
	DB	'alue-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
CONST	SEGMENT
??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ DB 'vector erase '
	DB	'iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xstring', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\vector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HCHDIKNO@Window?5has?5been?5Destroyed?4?5?9?5@
CONST	SEGMENT
??_C@_0BO@HCHDIKNO@Window?5has?5been?5Destroyed?4?5?9?5@ DB 'Window has b'
	DB	'een Destroyed. - ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDOLHIMA@Success?5create?5window?5@
CONST	SEGMENT
??_C@_0BH@NDOLHIMA@Success?5create?5window?5@ DB 'Success create window ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x@
CONST	SEGMENT
??_C@_01FJMABOPO@x@ DB 'x', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MDBPLPPA@Error?5create?5Window?5@
CONST	SEGMENT
??_C@_0BF@MDBPLPPA@Error?5create?5Window?5@ DB 'Error create Window ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NODEJLMD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5@
CONST	SEGMENT
??_C@_1CK@NODEJLMD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xlocnum', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA DD 047H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38'
	DB	'.33030\include\xlocale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fi'
	DB	'les\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.'
	DB	'33030\include\xmemory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 09aH ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b1H, 02H
	DB	02H
	DB	'h'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DD 025042111H
	DD	011c2321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0e6H
	DB	00H
	DB	01cH
	DB	02H
	DB	0e5H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z
	DD	imagerel $ip2state$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z DD 025041c11H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z DD 045042101H
	DD	011c4321H
	DD	05015001cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z DD 025041001H
	DD	0e20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035041201H
	DD	010d3312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0c1H, 03H
	DB	02H
	DB	0bdH, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z DD 025041c19H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z DD 025041c01H
	DD	0117231cH
	DD	050100014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 06H
	DB	00H
	DB	00H
	DB	0deH
	DB	02H
	DB	081H, 06H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
	DD	imagerel $ip2state$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z DD 025042111H
	DD	011c2321H
	DD	05015001aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEAD@std@@YA_JPEAD0@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@D@std@@YAXQEBD0@Z DD 035031401H
	DD	0d20f3314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	'I', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z DD 025032111H
	DD	0f21c2321H
	DD	05015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z DD 025031301H
	DD	0d20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@_W@std@@YAPEA_WAEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0eaH
	DB	00H
	DB	01cH
	DB	02H
	DB	0fdH, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z
	DD	imagerel $ip2state$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z DD 025041c11H
	DD	0117231cH
	DD	050100018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD 045041c01H
	DD	0117431cH
	DD	050100014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'B'
	DB	04H
	DB	'X'
	DB	06H
	DB	0c5H, 02H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
	DD	imagerel $ip2state$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z DD 025042111H
	DD	011c2321H
	DD	050150012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120014H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120014H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DB 060H
	DD	imagerel $ip2state$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD 025031319H
	DD	0b20e2313H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DB 060H
	DD	imagerel $ip2state$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 035041c01H
	DD	0117331cH
	DD	050100012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 035051d01H
	DD	0118331dH
	DD	070110019H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CmdShow@Application@@SAHXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD 025031911H
	DD	0d2142319H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z DD 025042101H
	DD	011c2321H
	DD	050150012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z DD 035031701H
	DD	0f2123317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z DB 060H
	DD	imagerel $ip2state$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z DD 035041c19H
	DD	0117331cH
	DD	050100014H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDelay@FWindowsWindowManager@@QEAAXH@Z DD 035031301H
	DD	0d20e3313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Quit@FWindowsWindowManager@@QEAAXXZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Destroy@FWindowsWindowManager@@QEAAXI@Z DD 025041601H
	DD	01112316H
	DD	0500a0022H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@FWindowsWindowManager@@QEAAXXZ DD 035041201H
	DD	010d3312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0eH
	DB	00H
	DB	00H
	DB	'@'
	DB	02H
	DB	'4'
	DB	04H
	DB	0acH
	DB	02H
	DB	094H
	DB	06H
	DB	09H, 02H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 045042011H
	DD	011b4320H
	DD	050140026H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1FWindowsWindowManager@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1FWindowsWindowManager@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1FWindowsWindowManager@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FWindowsWindowManager@@QEAA@XZ DD 025030f19H
	DD	0b20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1FWindowsWindowManager@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FWindowsWindowManager@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFWindowsWindow@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z DD 025032001H
	DD	0f21b2320H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z DD 025041b01H
	DD	0116231bH
	DD	0500f0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@XJJ@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@XJJ@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'.'
	DB	02H
	DB	0b5H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 025041711H
	DD	01122317H
	DD	0500b0022H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isClose@FWindowsWindow@@QEAA_NXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetResPos@FWindowsWindow@@QEAAXIIII@Z DD 045032001H
	DD	0f21b4320H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetPos@FWindowsWindow@@QEAAXII@Z DD 045031b01H
	DD	0f216431bH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetResolution@FWindowsWindow@@QEAAXII@Z DD 045031b01H
	DD	0f216431bH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@FWindowsWindow@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Destroy@FWindowsWindow@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z DB 012H
	DB	00H
	DB	00H
	DB	'@'
	DB	02H
	DB	0a9H, 02H
	DB	04H
	DB	081H, 0bH
	DB	06H
	DB	'|'
	DB	08H
	DB	0d2H
	DB	06H
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z DB 028H
	DD	imagerel $stateUnwindMap$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z
	DD	imagerel $ip2state$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z DD 065042011H
	DD	011b6320H
	DD	05014004eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1FWindowsWindow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1FWindowsWindow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1FWindowsWindow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FWindowsWindow@@QEAA@XZ DD 025030f19H
	DD	0b20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1FWindowsWindow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	0e6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z DB 028H
	DD	imagerel $stateUnwindMap$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z
	DD	imagerel $ip2state$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z DD 025031911H
	DD	0b2142319H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z DD 025041701H
	DD	01122317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z DD 025041601H
	DD	01112316H
	DD	0500a0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z DD 025031301H
	DD	0d20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 025031219H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD 025031411H
	DD	0d20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025041001H
	DD	0c20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@_W@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025031219H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025041201H
	DD	010d2312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z DD 035042101H
	DD	011c3321H
	DD	050150016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 0aH
	DB	00H
	DB	00H
	DB	011H, 02H
	DB	02H
	DB	0d2H
	DB	04H
	DB	'e', 04H
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z DD 025042011H
	DD	011b2320H
	DD	050140018H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 025031719H
	DD	0f2122317H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025041001H
	DD	0c20b2310H
	DD	050067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen_string@std@@YAXXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025031c01H
	DD	0f217231cH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z DD 025031901H
	DD	0d2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ DD 035031201H
	DD	0f20d3312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035041701H
	DD	01123317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025030e01H
	DD	0f209230eH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025041501H
	DD	0c2102315H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025041a01H
	DD	0c215231aH
	DD	050107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_constant_evaluated@std@@YA_NXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z PROC ; std::construct_at<FWindowsWindow *,FWindowsWindow *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::construct_at<FWindowsWindow *,FWindowsWindow *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow *>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@PEAVFWindowsWindow@@PEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<FWindowsWindow *,FWindowsWindow *,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
tv74 = 64
tv72 = 72
this$ = 96
<_Vals_0>$ = 104
??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Emplace_back<FWindowsWindow *>, COMDAT

; 1800 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1801 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ; std::_Unfancy<FWindowsWindow *>
  0002d	48 89 45 40	 mov	 QWORD PTR tv74[rbp], rax
  00031	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00039	48 89 45 48	 mov	 QWORD PTR tv72[rbp], rax
  0003d	4c 8b 45 68	 mov	 r8, QWORD PTR <_Vals_0>$[rbp]
  00041	48 8b 55 40	 mov	 rdx, QWORD PTR tv74[rbp]
  00045	48 8b 4d 48	 mov	 rcx, QWORD PTR tv72[rbp]
  00049	e8 00 00 00 00	 call	 ??$construct@PEAVFWindowsWindow@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow *>

; 1802 :         ++_Last;

  0004e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 83 c0 08	 add	 rax, 8
  0005a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0005e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1803 :     }

  00062	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00066	5d		 pop	 rbp
  00067	c3		 ret	 0
??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Emplace_back<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
_TEXT	SEGMENT
this$ = 80
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Release, COMDAT

; 1805 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1806 :         _First = _Last;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00027	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1807 :         return _Last;

  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1808 :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::~_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >, COMDAT

; 1795 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1796 :         _Destroy_range(_First, _Last, _Al);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >

; 1797 :     }

  00037	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::~_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z
_TEXT	SEGMENT
this$ = 80
_Dest$ = 88
_Al_$ = 96
??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >, COMDAT

; 1790 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 4d 58	 mov	 rcx, QWORD PTR _Dest$[rbp]
  00038	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 8b 4d 60	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00044	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z PROC ; std::_Get_unwrapped<FWindowsWindow * * const &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _It$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z ENDP ; std::_Get_unwrapped<FWindowsWindow * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z PROC ; std::construct_at<FWindowsWindow *,FWindowsWindow * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z ENDP ; std::construct_at<FWindowsWindow *,FWindowsWindow * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z PROC ; std::addressof<FWindowsWindow *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z ENDP ; std::addressof<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$01@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$01@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<2>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  00046	48 d1 e0	 shl	 rax, 1
$LN3@Get_size_o:

; 75   : }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??$_Get_size_of_n@$01@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  00046	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 75   : }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z PROC ; std::construct_at<char *,char * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ENDP ; std::construct_at<char *,char * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z PROC ; std::construct_at<wchar_t *,wchar_t * const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ENDP ; std::construct_at<wchar_t *,wchar_t * const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z PROC ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >, COMDAT

; 1926 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1927 :     // move [_First, _Last) to raw _Dest, using _Al
; 1928 :     // note: only called internally from elsewhere in the STL
; 1929 :     using _Ptrval     = typename _Alloc::value_type*;
; 1930 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  00034	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z ; std::_Get_unwrapped<FWindowsWindow * * const &>
  00039	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 1931 :     const auto _ULast = _Get_unwrapped(_Last);

  0003d	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  00044	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEBQEAPEAVFWindowsWindow@@@std@@YA?A_TAEBQEAPEAVFWindowsWindow@@@Z ; std::_Get_unwrapped<FWindowsWindow * * const &>
  00049	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 1932 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1933 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1934 : #if _HAS_CXX20
; 1935 :         if (!_STD is_constant_evaluated())

  0004d	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00052	0f b6 c0	 movzx	 eax, al
  00055	85 c0		 test	 eax, eax
  00057	75 3b		 jne	 SHORT $LN5@Uninitiali

; 1936 : #endif // _HAS_CXX20
; 1937 :         {
; 1938 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00059	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00060	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ; std::_Unfancy<FWindowsWindow *>
  00065	4c 8b c0	 mov	 r8, rax
  00068	48 8b 55 08	 mov	 rdx, QWORD PTR _ULast$[rbp]
  0006c	48 8b 4d 00	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  00070	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ; std::_Copy_memmove<FWindowsWindow * *,FWindowsWindow * *>

; 1939 :             return _Dest + (_ULast - _UFirst);

  00075	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00079	48 8b 4d 08	 mov	 rcx, QWORD PTR _ULast$[rbp]
  0007d	48 2b c8	 sub	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 c1 f8 03	 sar	 rax, 3
  00087	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0008e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]
  00092	eb 59		 jmp	 SHORT $LN1@Uninitiali
$LN5@Uninitiali:

; 1940 :         }
; 1941 :     }
; 1942 : 
; 1943 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  00094	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0009b	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Dest$[rbp]
  000a2	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
  000ab	90		 npad	 1

; 1944 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ac	eb 0c		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  000ae	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000b2	48 83 c0 08	 add	 rax, 8
  000b6	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
  000ba	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  000be	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  000c2	74 0f		 je	 SHORT $LN3@Uninitiali

; 1945 :         _Backout._Emplace_back(_STD move(*_UFirst));

  000c4	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000c8	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000cc	e8 00 00 00 00	 call	 ??$_Emplace_back@PEAVFWindowsWindow@@@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAX$$QEAPEAVFWindowsWindow@@@Z ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Emplace_back<FWindowsWindow *>

; 1946 :     }

  000d1	eb db		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1947 : 
; 1948 :     return _Backout._Release();

  000d3	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000d7	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::_Release
  000dc	48 89 45 68	 mov	 QWORD PTR $T1[rbp], rax
  000e0	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  000e4	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::~_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
  000e9	48 8b 45 68	 mov	 rax, QWORD PTR $T1[rbp]
$LN1@Uninitiali:

; 1949 : }

  000ed	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000f1	5d		 pop	 rbp
  000f2	c3		 ret	 0
??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ENDP ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Backout$ = 16
$T1 = 104
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 10	 lea	 rcx, QWORD PTR _Backout$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >::~_Uninitialized_backout_al<std::allocator<FWindowsWindow *> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow * const &>, COMDAT

; 719  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 720  : #if _HAS_CXX20
; 721  :         _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);

  00025	48 8b 55 60	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00029	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<FWindowsWindow *,FWindowsWindow * const &,0>

; 722  : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 723  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 724  : #endif // ^^^ !_HAS_CXX20 ^^^
; 725  :     }

  00032	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<FWindowsWindow *> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z PROC ; std::_Construct_in_place<FWindowsWindow *,FWindowsWindow * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z ; std::addressof<FWindowsWindow *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEAVFWindowsWindow@@AEBQEAV1@$0A@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@AEBQEAV1@@Z ; std::construct_at<FWindowsWindow *,FWindowsWindow * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@AEAPEAV1@@Z ; std::addressof<FWindowsWindow *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z ENDP ; std::_Construct_in_place<FWindowsWindow *,FWindowsWindow * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 80
??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z PROC ; std::to_address<FWindowsWindow *>, COMDAT

; 328  : _NODISCARD constexpr _Ty* to_address(_Ty* const _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 329  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 330  :     return _Val;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 331  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z ENDP ; std::to_address<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
_Val$ = 80
??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z PROC ; std::_To_address<FWindowsWindow * *>, COMDAT

; 4377 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4378 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4379 :     return _STD to_address(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]
  0001f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00022	e8 00 00 00 00	 call	 ??$to_address@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@@Z ; std::to_address<FWindowsWindow *>

; 4380 : }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z ENDP ; std::_To_address<FWindowsWindow * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 705  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 706  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 707  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 708  :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@deallocate

; 709  :             _Al.deallocate(_Ptr, _Count);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Count$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0003d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 710  :         } else

  00042	eb 11		 jmp	 SHORT $LN3@deallocate
$LN2@deallocate:

; 711  : #endif // _HAS_CXX20
; 712  :         {
; 713  :             (void) _Al;
; 714  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00044	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00050	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN3@deallocate:

; 715  :         }
; 716  :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 52   :     _CONSTEXPR20 ~_Tidy_deallocate_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 53   :         if (_Target) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 0c		 je	 SHORT $LN2@Tidy_deall

; 54   :             _Target->_Tidy_deallocate();

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002c	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
$LN2@Tidy_deall:

; 55   :         }
; 56   :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S40$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>, COMDAT

; 2609 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2610 :         auto& _My_data = _Mypair._Myval2;

  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2611 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2612 : 
; 2613 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2614 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2615 :         } else {
; 2616 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2617 :         }
; 2618 : 
; 2619 :         if (_Count > max_size()) {

  00033	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0003f	48 39 85 c0 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00046	76 05		 jbe	 SHORT $LN2@Construct

; 2620 :             _Xlen_string(); // result too long

  00048	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Construct:

; 2621 :         }
; 2622 : 
; 2623 :         auto& _Al       = _Getal();

  0004d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2624 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0005d	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  00061	48 8d 4d 18	 lea	 rcx, QWORD PTR $S40$[rbp]
  00065	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006a	48 8d 45 18	 lea	 rax, QWORD PTR $S40$[rbp]
  0006e	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2625 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  00072	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00076	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0007a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00083	90		 npad	 1

; 2626 : 
; 2627 :         if (_Count < _BUF_SIZE) {

  00084	48 83 bd c0 00
	00 00 10	 cmp	 QWORD PTR _Count$[rbp], 16
  0008c	73 77		 jae	 SHORT $LN3@Construct

; 2628 :             _My_data._Mysize = _Count;

  0008e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00099	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2629 :             _My_data._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a1	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2630 : 
; 2631 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2632 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2633 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2634 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2635 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);

  000a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000b8	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2636 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  000c7	c6 85 80 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  000ce	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000d2	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  000d9	48 8d 44 08 08	 lea	 rax, QWORD PTR [rax+rcx+8]
  000de	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000e5	48 8b c8	 mov	 rcx, rax
  000e8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2637 :             } else { // _Strat == _Construct_strategy::_From_string
; 2638 : #ifdef _INSERT_STRING_ANNOTATION
; 2639 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2640 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2641 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2642 : #endif // !_INSERT_STRING_ANNOTATION
; 2643 :             }
; 2644 : 
; 2645 :             _Proxy._Release();

  000ed	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f1	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f6	90		 npad	 1

; 2646 :             return;

  000f7	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00100	e9 02 01 00 00	 jmp	 $LN4@Construct
$LN3@Construct:

; 2647 :         }
; 2648 : 
; 2649 :         _My_data._Myres         = _BUF_SIZE - 1;

  00105	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00109	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2650 :         size_type _New_capacity = _Calculate_growth(_Count);

  00111	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00118	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00124	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2651 :         ++_New_capacity;

  00128	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0012c	48 ff c0	 inc	 rax
  0012f	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2652 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  00133	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00137	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013b	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  00140	48 89 45 38	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 2653 :         --_New_capacity;

  00144	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00148	48 ff c8	 dec	 rax
  0014b	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2654 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0014f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00153	48 83 c0 08	 add	 rax, 8
  00157	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  0015b	48 8b c8	 mov	 rcx, rax
  0015e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2655 : 
; 2656 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  00163	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00167	48 ff c0	 inc	 rax
  0016a	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  00171	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00175	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0017a	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00181	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR tv154[rbp]
  00188	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  0018f	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 2657 : 
; 2658 :         _My_data._Mysize = _Count;

  00194	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00198	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  0019f	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2659 :         _My_data._Myres  = _New_capacity;

  001a3	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001a7	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  001ab	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2660 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2661 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2662 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2663 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2664 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);

  001af	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001b3	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001b8	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  001bf	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  001c6	48 8b c8	 mov	 rcx, rax
  001c9	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2665 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  001ce	c6 85 81 00 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  001d5	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001d9	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  001de	48 03 85 c0 00
	00 00		 add	 rax, QWORD PTR _Count$[rbp]
  001e5	48 8d 95 81 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2666 :         } else { // _Strat == _Construct_strategy::_From_string
; 2667 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2668 :         }
; 2669 : 
; 2670 :         _ASAN_STRING_CREATE(*this);
; 2671 :         _Proxy._Release();

  001f4	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  001f8	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  001fd	90		 npad	 1

; 2672 :     }

  001fe	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00202	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN4@Construct:
  00207	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  0020e	5d		 pop	 rbp
  0020f	c3		 ret	 0
$LN6@Construct:
??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S40$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 129
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z
_TEXT	SEGMENT
_My_data$ = 0
_Old_size$ = 8
_New_size$ = 16
_Old_capacity$ = 24
_New_capacity$ = 32
_Al$ = 40
_New_ptr$ = 48
_Raw_new$ = 56
_Old_ptr$1 = 64
tv91 = 136
tv89 = 144
this$ = 176
_Size_increase$ = 184
_Fn$ = 192
<_Args_0>$ = 200
<_Args_1>$ = 208
<_Args_2>$ = 216
??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>,unsigned __int64,char const *,unsigned __int64>, COMDAT

; 4776 :     _CONSTEXPR20 basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  0001c	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4777 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4778 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4779 :         auto& _My_data            = _Mypair._Myval2;

  0002d	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4780 :         const size_type _Old_size = _My_data._Mysize;

  00038	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00040	48 89 45 08	 mov	 QWORD PTR _Old_size$[rbp], rax

; 4781 :         if (max_size() - _Old_size < _Size_increase) {

  00044	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004b	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00050	48 2b 45 08	 sub	 rax, QWORD PTR _Old_size$[rbp]
  00054	48 3b 85 b8 00
	00 00		 cmp	 rax, QWORD PTR _Size_increase$[rbp]
  0005b	73 05		 jae	 SHORT $LN2@Reallocate

; 4782 :             _Xlen_string(); // result too long

  0005d	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Reallocate:

; 4783 :         }
; 4784 : 
; 4785 :         const size_type _New_size     = _Old_size + _Size_increase;

  00062	48 8b 85 b8 00
	00 00		 mov	 rax, QWORD PTR _Size_increase$[rbp]
  00069	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  0006d	48 03 c8	 add	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	48 89 45 10	 mov	 QWORD PTR _New_size$[rbp], rax

; 4786 :         const size_type _Old_capacity = _My_data._Myres;

  00077	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0007b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007f	48 89 45 18	 mov	 QWORD PTR _Old_capacity$[rbp], rax

; 4787 :         size_type _New_capacity       = _Calculate_growth(_New_size);

  00083	48 8b 55 10	 mov	 rdx, QWORD PTR _New_size$[rbp]
  00087	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00093	48 89 45 20	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4788 :         auto& _Al                     = _Getal();

  00097	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000a3	48 89 45 28	 mov	 QWORD PTR _Al$[rbp], rax

; 4789 :         ++_New_capacity;

  000a7	48 8b 45 20	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000ab	48 ff c0	 inc	 rax
  000ae	48 89 45 20	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4790 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  000b2	48 8d 55 20	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  000b6	48 8b 4d 28	 mov	 rcx, QWORD PTR _Al$[rbp]
  000ba	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  000bf	48 89 45 30	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 4791 :         --_New_capacity;

  000c3	48 8b 45 20	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000c7	48 ff c8	 dec	 rax
  000ca	48 89 45 20	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4792 : 
; 4793 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  000ce	48 8b 45 20	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000d2	48 ff c0	 inc	 rax
  000d5	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000dc	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000e0	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000e5	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000ec	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR tv91[rbp]
  000f3	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv89[rbp]
  000fa	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes

; 4794 :         _My_data._Orphan_all();

  000ff	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00103	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4795 :         _ASAN_STRING_REMOVE(*this);
; 4796 :         _My_data._Mysize      = _New_size;

  00108	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0010c	48 8b 4d 10	 mov	 rcx, QWORD PTR _New_size$[rbp]
  00110	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4797 :         _My_data._Myres       = _New_capacity;

  00114	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00118	48 8b 4d 20	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  0011c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4798 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  00120	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00124	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00129	48 89 45 38	 mov	 QWORD PTR _Raw_new$[rbp], rax

; 4799 :         if (_BUF_SIZE <= _Old_capacity) {

  0012d	48 83 7d 18 10	 cmp	 QWORD PTR _Old_capacity$[rbp], 16
  00132	72 75		 jb	 SHORT $LN3@Reallocate

; 4800 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00134	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00138	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0013c	48 89 45 40	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 4801 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00140	48 8b 4d 40	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  00144	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00149	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_2>$[rbp]
  00150	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00155	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0015c	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00161	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00168	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0016d	4c 8b 4d 08	 mov	 r9, QWORD PTR _Old_size$[rbp]
  00171	4c 8b c0	 mov	 r8, rax
  00174	48 8b 55 38	 mov	 rdx, QWORD PTR _Raw_new$[rbp]
  00178	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  0017f	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>::operator()

; 4802 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00184	48 8b 45 18	 mov	 rax, QWORD PTR _Old_capacity$[rbp]
  00188	48 ff c0	 inc	 rax
  0018b	4c 8b c0	 mov	 r8, rax
  0018e	48 8b 55 40	 mov	 rdx, QWORD PTR _Old_ptr$1[rbp]
  00192	48 8b 4d 28	 mov	 rcx, QWORD PTR _Al$[rbp]
  00196	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4803 :             _My_data._Bx._Ptr = _New_ptr;

  0019b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0019f	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001a3	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4804 :         } else {

  001a7	eb 57		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4805 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  001a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001ad	48 83 c0 08	 add	 rax, 8
  001b1	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_2>$[rbp]
  001b8	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001bd	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  001c4	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001c9	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  001d0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001d5	4c 8b 4d 08	 mov	 r9, QWORD PTR _Old_size$[rbp]
  001d9	4c 8b c0	 mov	 r8, rax
  001dc	48 8b 55 38	 mov	 rdx, QWORD PTR _Raw_new$[rbp]
  001e0	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  001e7	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>::operator()

; 4806 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001ec	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001f0	48 83 c0 08	 add	 rax, 8
  001f4	48 8d 55 30	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  001f8	48 8b c8	 mov	 rcx, rax
  001fb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4807 :         }
; 4808 : 
; 4809 :         _ASAN_STRING_CREATE(*this);
; 4810 :         return *this;

  00200	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4811 :     }

  00207	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  0020e	5d		 pop	 rbp
  0020f	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>,unsigned __int64,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z
_TEXT	SEGMENT
tv78 = 64
this$ = 96
_New_ptr$ = 104
_Old_ptr$ = 112
_Old_size$ = 120
_Off$ = 128
_Ptr$ = 136
_Count$ = 144
??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>::operator(), COMDAT

; 3539 :                 const _Elem* const _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3540 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);

  0002a	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Off$[rbp]
  00031	48 8b 55 70	 mov	 rdx, QWORD PTR _Old_ptr$[rbp]
  00035	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00039	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3541 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);

  0003e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Off$[rbp]
  00045	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00049	48 03 c8	 add	 rcx, rax
  0004c	48 8b c1	 mov	 rax, rcx
  0004f	4c 8b 85 90 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00056	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3542 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);

  00065	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Off$[rbp]
  0006c	48 8b 4d 78	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  00070	48 2b c8	 sub	 rcx, rax
  00073	48 8b c1	 mov	 rax, rcx
  00076	48 ff c0	 inc	 rax
  00079	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Off$[rbp]
  00080	48 8b 55 70	 mov	 rdx, QWORD PTR _Old_ptr$[rbp]
  00084	48 03 d1	 add	 rdx, rcx
  00087	48 8b ca	 mov	 rcx, rdx
  0008a	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR _Off$[rbp]
  00091	4c 8b 45 68	 mov	 r8, QWORD PTR _New_ptr$[rbp]
  00095	4c 03 c2	 add	 r8, rdx
  00098	49 8b d0	 mov	 rdx, r8
  0009b	48 03 95 90 00
	00 00		 add	 rdx, QWORD PTR _Count$[rbp]
  000a2	48 89 55 40	 mov	 QWORD PTR tv78[rbp], rdx
  000a6	4c 8b c0	 mov	 r8, rax
  000a9	48 8b d1	 mov	 rdx, rcx
  000ac	48 8b 45 40	 mov	 rax, QWORD PTR tv78[rbp]
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3543 :             },

  000b8	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
??R<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_KQEBD0@Z@QEBA@QEAD10010@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 96
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 00	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 0

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 69   :         if (_Count > _Max_possible) {
; 70   :             _Throw_bad_array_new_length(); // multiply overflow
; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  0001f	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]

; 75   : }

  00023	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
_Location$ = 112
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z PROC		; std::construct_at<char,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 c7 45 40 01
	00 00 00	 mov	 QWORD PTR $T1[rbp], 1
  00024	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00028	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00031	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00035	48 8b 7d 48	 mov	 rdi, QWORD PTR $T2[rbp]
  00039	33 c0		 xor	 eax, eax
  0003b	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003f	f3 aa		 rep stosb
  00041	48 8b 45 48	 mov	 rax, QWORD PTR $T2[rbp]

; 243  : }

  00045	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ENDP		; std::construct_at<char,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
_Location$ = 112
??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z PROC	; std::construct_at<wchar_t,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0001c	48 c7 45 40 02
	00 00 00	 mov	 QWORD PTR $T1[rbp], 2
  00024	48 8b 55 70	 mov	 rdx, QWORD PTR _Location$[rbp]
  00028	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0002c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00031	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00035	48 8b 7d 48	 mov	 rdi, QWORD PTR $T2[rbp]
  00039	33 c0		 xor	 eax, eax
  0003b	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003f	f3 aa		 rep stosb
  00041	48 8b 45 48	 mov	 rax, QWORD PTR $T2[rbp]

; 243  : }

  00045	48 8d 65 58	 lea	 rsp, QWORD PTR [rbp+88]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z ENDP	; std::construct_at<wchar_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 0
_Ptr_container$ = 8
_Ptr$ = 16
_Bytes$ = 112
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 136  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 137  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 138  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00022	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00026	48 89 45 00	 mov	 QWORD PTR _Block_size$[rbp], rax

; 139  :     if (_Block_size <= _Bytes) {

  0002a	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  0002e	48 39 45 00	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00032	77 05		 ja	 SHORT $LN8@Allocate_m

; 140  :         _Throw_bad_array_new_length(); // add overflow

  00034	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 141  :     }
; 142  : 
; 143  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00039	48 8b 4d 00	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00042	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 144  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00046	48 83 7d 08 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  0004b	74 02		 je	 SHORT $LN9@Allocate_m
  0004d	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN12@Allocate_m
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 90 00 00
	00		 mov	 r9d, 144		; 00000090H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 86		 jne	 SHORT $LN4@Allocate_m

; 145  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000c4	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000c8	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000cc	48 89 45 10	 mov	 QWORD PTR _Ptr$[rbp], rax

; 146  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d0	b8 08 00 00 00	 mov	 eax, 8
  000d5	48 6b c0 ff	 imul	 rax, rax, -1
  000d9	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000dd	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000e1	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 147  : 
; 148  : #ifdef _DEBUG
; 149  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000e5	b8 08 00 00 00	 mov	 eax, 8
  000ea	48 6b c0 fe	 imul	 rax, rax, -2
  000ee	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000f2	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  000fc	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 150  : #endif // _DEBUG
; 151  :     return _Ptr;

  00100	48 8b 45 10	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 152  : }

  00104	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z PROC ; std::construct_at<char *,char * &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 08 00 00 00	 mov	 ecx, 8
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z ENDP ; std::construct_at<char *,char * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t *>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEADAEBQEAD$0A@@std@@YAPEAPEADQEAPEADAEBQEAD@Z ; std::construct_at<char *,char * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * const &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEA_WAEBQEA_W$0A@@std@@YAPEAPEA_WQEAPEA_WAEBQEA_W@Z ; std::construct_at<wchar_t *,wchar_t * const &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Whereoff$ = 32
_Oldsize$ = 40
_Newsize$ = 48
_Newcapacity$ = 56
_Newvec$ = 64
_Constructed_last$ = 72
_Constructed_first$ = 80
this$ = 176
_Whereptr$ = 184
<_Val_0>$ = 192
??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>, COMDAT

; 811  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 812  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 813  :         _Alty& _Al        = _Getal();

  00028	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00034	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 814  :         auto& _My_data    = _Mypair._Myval2;

  00038	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 815  :         pointer& _Myfirst = _My_data._Myfirst;

  00043	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 816  :         pointer& _Mylast  = _My_data._Mylast;

  0004f	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00053	48 83 c0 10	 add	 rax, 16
  00057	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 817  : 
; 818  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 819  : 
; 820  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0005b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00069	48 2b c8	 sub	 rcx, rax
  0006c	48 8b c1	 mov	 rax, rcx
  0006f	48 c1 f8 03	 sar	 rax, 3
  00073	48 89 45 20	 mov	 QWORD PTR _Whereoff$[rbp], rax

; 821  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00077	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0007b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 2b c1	 sub	 rax, rcx
  00088	48 c1 f8 03	 sar	 rax, 3
  0008c	48 89 45 28	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 822  : 
; 823  :         if (_Oldsize == max_size()) {

  00090	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00097	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::max_size
  0009c	48 39 45 28	 cmp	 QWORD PTR _Oldsize$[rbp], rax
  000a0	75 05		 jne	 SHORT $LN2@Emplace_re

; 824  :             _Xlength();

  000a2	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Xlength
$LN2@Emplace_re:

; 825  :         }
; 826  : 
; 827  :         const size_type _Newsize = _Oldsize + 1;

  000a7	48 8b 45 28	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  000ab	48 ff c0	 inc	 rax
  000ae	48 89 45 30	 mov	 QWORD PTR _Newsize$[rbp], rax

; 828  :         size_type _Newcapacity   = _Calculate_growth(_Newsize);

  000b2	48 8b 55 30	 mov	 rdx, QWORD PTR _Newsize$[rbp]
  000b6	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bd	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Calculate_growth
  000c2	48 89 45 38	 mov	 QWORD PTR _Newcapacity$[rbp], rax

; 829  : 
; 830  :         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);

  000c6	48 8d 55 38	 lea	 rdx, QWORD PTR _Newcapacity$[rbp]
  000ca	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000ce	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@AEAV?$allocator@PEAVFWindowsWindow@@@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<FWindowsWindow *> >
  000d3	48 89 45 40	 mov	 QWORD PTR _Newvec$[rbp], rax

; 831  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000d7	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  000db	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  000df	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  000e4	48 89 45 48	 mov	 QWORD PTR _Constructed_last$[rbp], rax

; 832  :         pointer _Constructed_first      = _Constructed_last;

  000e8	48 8b 45 48	 mov	 rax, QWORD PTR _Constructed_last$[rbp]
  000ec	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 833  : 
; 834  :         _TRY_BEGIN
; 835  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000f0	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  000f4	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  000f8	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ; std::_Unfancy<FWindowsWindow *>
  00104	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR <_Val_0>$[rbp]
  0010b	48 8b d0	 mov	 rdx, rax
  0010e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  00112	e8 00 00 00 00	 call	 ??$construct@PEAVFWindowsWindow@@AEBQEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@AEBQEAV3@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::construct<FWindowsWindow *,FWindowsWindow * const &>

; 836  :         _Constructed_first = _Newvec + _Whereoff;

  00117	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  0011b	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  0011f	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00123	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 837  : 
; 838  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00127	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0012b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012e	48 39 85 b8 00
	00 00		 cmp	 QWORD PTR _Whereptr$[rbp], rax
  00135	75 1d		 jne	 SHORT $LN4@Emplace_re

; 839  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 840  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

  00137	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  0013b	4c 8b 45 40	 mov	 r8, QWORD PTR _Newvec$[rbp]
  0013f	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00143	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00146	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0014a	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0014d	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >

; 841  :             } else {
; 842  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 843  :             }
; 844  :         } else { // provide basic guarantee

  00152	eb 4b		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 845  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

  00154	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  00158	4c 8b 45 40	 mov	 r8, QWORD PTR _Newvec$[rbp]
  0015c	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  00163	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00167	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0016a	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >

; 846  :             _Constructed_first = _Newvec;

  0016f	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  00173	48 89 45 50	 mov	 QWORD PTR _Constructed_first$[rbp], rax

; 847  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

  00177	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  0017b	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  0017f	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00184	4c 8b 4d 00	 mov	 r9, QWORD PTR _Al$[rbp]
  00188	4c 8b c0	 mov	 r8, rax
  0018b	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0018f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00192	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00199	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAPEAPEAVFWindowsWindow@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Uninitialized_move<FWindowsWindow * *,std::allocator<FWindowsWindow *> >
  0019e	90		 npad	 1
$LN5@Emplace_re:
  0019f	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 848  :         }
; 849  :         _CATCH_ALL
; 850  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 851  :         _Al.deallocate(_Newvec, _Newcapacity);
; 852  :         _RERAISE;
; 853  :         _CATCH_END
; 854  : 
; 855  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001a1	4c 8b 4d 38	 mov	 r9, QWORD PTR _Newcapacity$[rbp]
  001a5	4c 8b 45 30	 mov	 r8, QWORD PTR _Newsize$[rbp]
  001a9	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  001ad	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  001b4	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Change_array

; 856  :         return _Newvec + _Whereoff;

  001b9	48 8b 45 40	 mov	 rax, QWORD PTR _Newvec$[rbp]
  001bd	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereoff$[rbp]
  001c1	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 857  :     }

  001c5	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  001cc	5d		 pop	 rbp
  001cd	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Whereoff$ = 32
_Oldsize$ = 40
_Newsize$ = 48
_Newcapacity$ = 56
_Newvec$ = 64
_Constructed_last$ = 72
_Constructed_first$ = 80
this$ = 176
_Whereptr$ = 184
<_Val_0>$ = 192
?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA PROC ; `std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>'::`1'::catch$0

; 849  :         _CATCH_ALL

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z$0:

; 850  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

  0000e	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00012	48 8b 55 48	 mov	 rdx, QWORD PTR _Constructed_last$[rbp]
  00016	48 8b 4d 50	 mov	 rcx, QWORD PTR _Constructed_first$[rbp]
  0001a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >

; 851  :         _Al.deallocate(_Newvec, _Newcapacity);

  0001f	4c 8b 45 38	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00023	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::deallocate

; 852  :         _RERAISE;

  00030	33 d2		 xor	 edx, edx
  00032	33 c9		 xor	 ecx, ecx
  00034	e8 00 00 00 00	 call	 _CxxThrowException
  00039	90		 npad	 1

; 853  :         _CATCH_END

  0003a	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
  00047	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z@4HA ENDP ; `std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 0
_Mylast$ = 8
_Result$ = 16
this$ = 112
<_Val_0>$ = 120
??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_back_with_unused_capacity<FWindowsWindow * const &>, COMDAT

; 788  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 789  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 790  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 791  :         pointer& _Mylast = _My_data._Mylast;

  0002b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002f	48 83 c0 10	 add	 rax, 16
  00033	48 89 45 08	 mov	 QWORD PTR _Mylast$[rbp], rax

; 792  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 793  :         if constexpr (conjunction_v<is_nothrow_constructible<_Ty, _Valty...>,
; 794  :                           _Uses_default_construct<_Alloc, _Ty*, _Valty...>>) {
; 795  :             _ASAN_VECTOR_MODIFY(1);
; 796  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

  00037	48 8b 55 78	 mov	 rdx, QWORD PTR <_Val_0>$[rbp]
  0003b	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0003f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00042	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAVFWindowsWindow@@AEBQEAV1@@std@@YAXAEAPEAVFWindowsWindow@@AEBQEAV1@@Z ; std::_Construct_in_place<FWindowsWindow *,FWindowsWindow * const &>

; 797  :         } else {
; 798  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 799  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 800  :             _ASAN_VECTOR_RELEASE_GUARD;
; 801  :         }
; 802  : 
; 803  :         _Orphan_range(_Mylast, _Mylast);

  00047	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0004b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0004e	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00052	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00055	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range

; 804  :         _Ty& _Result = *_Mylast;

  0005e	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 89 45 10	 mov	 QWORD PTR _Result$[rbp], rax

; 805  :         ++_Mylast;

  00069	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0006d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00070	48 83 c0 08	 add	 rax, 8
  00074	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 806  : 
; 807  :         return _Result;

  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Result$[rbp]

; 808  :     }

  0007f	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00083	5d		 pop	 rbp
  00084	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_back_with_unused_capacity<FWindowsWindow * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
_Location$ = 80
??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z PROC ; std::destroy_at<FWindowsWindow *>, COMDAT

; 313  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 314  : #if _HAS_CXX20
; 315  :     if constexpr (is_array_v<_Ty>) {
; 316  :         _Destroy_range(_STD begin(*_Location), _STD end(*_Location));
; 317  :     } else
; 318  : #endif // _HAS_CXX20
; 319  :     {
; 320  :         _Location->~_Ty();
; 321  :     }
; 322  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z ENDP ; std::destroy_at<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 0
_LastPtr$ = 8
_DestPtr$ = 16
_First_ch$ = 24
_Last_ch$ = 32
_Dest_ch$ = 40
_Count$ = 48
_First$ = 144
_Last$ = 152
_Dest$ = 160
??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<FWindowsWindow * *,FWindowsWindow * *>, COMDAT

; 4509 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4510 :     auto _FirstPtr              = _To_address(_First);

  00028	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z ; std::_To_address<FWindowsWindow * *>
  00034	48 89 45 00	 mov	 QWORD PTR _FirstPtr$[rbp], rax

; 4511 :     auto _LastPtr               = _To_address(_Last);

  00038	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  0003f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z ; std::_To_address<FWindowsWindow * *>
  00044	48 89 45 08	 mov	 QWORD PTR _LastPtr$[rbp], rax

; 4512 :     auto _DestPtr               = _To_address(_Dest);

  00048	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR _Dest$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$_To_address@PEAPEAVFWindowsWindow@@@std@@YA?A_PAEBQEAPEAVFWindowsWindow@@@Z ; std::_To_address<FWindowsWindow * *>
  00054	48 89 45 10	 mov	 QWORD PTR _DestPtr$[rbp], rax

; 4513 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _FirstPtr$[rbp]
  0005c	48 89 45 18	 mov	 QWORD PTR _First_ch$[rbp], rax

; 4514 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _LastPtr$[rbp]
  00064	48 89 45 20	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 4515 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

  00068	48 8b 45 10	 mov	 rax, QWORD PTR _DestPtr$[rbp]
  0006c	48 89 45 28	 mov	 QWORD PTR _Dest_ch$[rbp], rax

; 4516 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00070	48 8b 45 18	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00074	48 8b 4d 20	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 45 30	 mov	 QWORD PTR _Count$[rbp], rax

; 4517 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00082	4c 8b 45 30	 mov	 r8, QWORD PTR _Count$[rbp]
  00086	48 8b 55 18	 mov	 rdx, QWORD PTR _First_ch$[rbp]
  0008a	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0008e	e8 00 00 00 00	 call	 memmove

; 4518 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4519 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  00093	48 8b 45 30	 mov	 rax, QWORD PTR _Count$[rbp]
  00097	48 8b 4d 28	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0009b	48 03 c8	 add	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx

; 4520 :     } else {
; 4521 :         return _Dest + (_LastPtr - _FirstPtr);
; 4522 :     }
; 4523 : }

  000a1	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<FWindowsWindow * *,FWindowsWindow * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z PROC	; std::_Get_unwrapped<char * &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _It$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z ENDP	; std::_Get_unwrapped<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1123 : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1124 :     // deallocate a plain pointer using an allocator
; 1125 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1126 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1127 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00033	90		 npad	 1

; 1128 :     } else {
; 1129 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1130 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1131 :     }
; 1132 : }

  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S39$ = 24
_Proxy$ = 32
_New_capacity$1 = 48
_New_ptr$2 = 56
_Guard$ = 64
_Ptr$3 = 72
_Ptr$ = 80
$T4 = 152
$T5 = 154
tv138 = 160
tv136 = 168
this$ = 192
_First$ = 200
_Last$ = 208
_Count$ = 216
??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>, COMDAT

; 2675 :     _CONSTEXPR20 void _Construct_from_iter(_Iter _First, const _Sent _Last, _Size _Count = {}) {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2676 :         // Pre: _First models input_iterator or meets the Cpp17InputIterator requirements
; 2677 :         // Pre: [_First, _Last) is a valid range
; 2678 :         // Pre: if is_same_v<_Size, size_type>, _Count is the length of [_First, _Last).
; 2679 :         // Pre: *this is in SSO mode; the lifetime of the SSO elements has already begun
; 2680 : 
; 2681 :         auto& _My_data  = _Mypair._Myval2;

  0002d	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2682 :         auto& _Al       = _Getal();

  00038	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00044	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2683 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  00048	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  0004c	48 8d 4d 18	 lea	 rcx, QWORD PTR $S39$[rbp]
  00050	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00055	48 8d 45 18	 lea	 rax, QWORD PTR $S39$[rbp]
  00059	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2684 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005d	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00061	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00065	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00069	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0006e	90		 npad	 1

; 2685 : 
; 2686 :         _My_data._Mysize = 0;

  0006f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00073	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2687 :         _My_data._Myres  = _BUF_SIZE - 1;

  0007b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0007f	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 2688 : 
; 2689 :         if constexpr (is_same_v<_Size, size_type>) {
; 2690 :             if (_Count > max_size()) {

  00087	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008e	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00093	48 39 85 d8 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  0009a	76 05		 jbe	 SHORT $LN5@Construct_

; 2691 :                 _Xlen_string(); // result too long

  0009c	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN5@Construct_:

; 2692 :             }
; 2693 : 
; 2694 :             if (_Count >= _BUF_SIZE) {

  000a1	48 83 bd d8 00
	00 00 08	 cmp	 QWORD PTR _Count$[rbp], 8
  000a9	0f 82 8f 00 00
	00		 jb	 $LN6@Construct_

; 2695 :                 size_type _New_capacity = _Calculate_growth(_Count);

  000af	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  000b6	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bd	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
  000c2	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2696 :                 ++_New_capacity;

  000c6	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  000ca	48 ff c0	 inc	 rax
  000cd	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2697 :                 const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  000d1	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$1[rbp]
  000d5	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  000d9	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
  000de	48 89 45 38	 mov	 QWORD PTR _New_ptr$2[rbp], rax

; 2698 :                 --_New_capacity;

  000e2	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  000e6	48 ff c8	 dec	 rax
  000e9	48 89 45 30	 mov	 QWORD PTR _New_capacity$1[rbp], rax

; 2699 :                 _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000ed	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000f1	48 83 c0 08	 add	 rax, 8
  000f5	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$2[rbp]
  000f9	48 8b c8	 mov	 rcx, rax
  000fc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>

; 2700 :                 _My_data._Myres = _New_capacity;

  00101	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00105	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$1[rbp]
  00109	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2701 : 
; 2702 :                 _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  0010d	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$1[rbp]
  00111	48 ff c0	 inc	 rax
  00114	48 89 85 a0 00
	00 00		 mov	 QWORD PTR tv138[rbp], rax
  0011b	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$2[rbp]
  0011f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00124	48 89 85 a8 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  0012b	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR tv138[rbp]
  00132	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR tv136[rbp]
  00139	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
$LN6@Construct_:

; 2703 :             }
; 2704 :         }
; 2705 : 
; 2706 :         _Tidy_deallocate_guard<basic_string> _Guard{this};

  0013e	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00145	48 89 45 40	 mov	 QWORD PTR _Guard$[rbp], rax

; 2707 :         for (; _First != _Last; ++_First) {

  00149	eb 11		 jmp	 SHORT $LN4@Construct_
$LN2@Construct_:
  0014b	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00152	48 ff c0	 inc	 rax
  00155	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _First$[rbp], rax
$LN4@Construct_:
  0015c	48 8b 85 d0 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00163	48 39 85 c8 00
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  0016a	74 53		 je	 SHORT $LN3@Construct_

; 2708 :             if constexpr (!is_same_v<_Size, size_type>) {
; 2709 :                 if (_My_data._Mysize == _My_data._Myres) { // Need to grow
; 2710 :                     if (_My_data._Mysize == max_size()) {
; 2711 :                         _Xlen_string(); // result too long
; 2712 :                     }
; 2713 : 
; 2714 :                     const auto _Old_ptr     = _My_data._Myptr();
; 2715 :                     size_type _New_capacity = _Calculate_growth(_My_data._Mysize);
; 2716 :                     ++_New_capacity;
; 2717 :                     const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws
; 2718 :                     --_New_capacity;
; 2719 : 
; 2720 :                     _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2721 :                     _Traits::copy(_Unfancy(_New_ptr), _Old_ptr, _My_data._Mysize);
; 2722 :                     if (_My_data._Myres >= _BUF_SIZE) { // Need to deallocate old storage
; 2723 :                         _Al.deallocate(_My_data._Bx._Ptr, _My_data._Myres + 1);
; 2724 :                         _My_data._Bx._Ptr = _New_ptr;
; 2725 :                     } else {
; 2726 :                         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 2727 :                     }
; 2728 :                     _My_data._Myres = _New_capacity;
; 2729 :                 }
; 2730 :             }
; 2731 : 
; 2732 :             _Elem* const _Ptr = _My_data._Myptr();

  0016c	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00170	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00175	48 89 45 48	 mov	 QWORD PTR _Ptr$3[rbp], rax

; 2733 :             _Traits::assign(_Ptr[_My_data._Mysize], *_First);

  00179	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00180	66 0f be 00	 movsx	 ax, BYTE PTR [rax]
  00184	66 89 85 98 00
	00 00		 mov	 WORD PTR $T4[rbp], ax
  0018b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0018f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00193	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$3[rbp]
  00197	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  0019b	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  001a2	48 8b c8	 mov	 rcx, rax
  001a5	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2734 :             ++_My_data._Mysize;

  001aa	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001ae	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001b2	48 ff c0	 inc	 rax
  001b5	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  001b9	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2735 :         }

  001bd	eb 8c		 jmp	 SHORT $LN2@Construct_
$LN3@Construct_:

; 2736 : 
; 2737 :         _Elem* const _Ptr = _My_data._Myptr();

  001bf	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  001c3	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  001c8	48 89 45 50	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2738 :         _Traits::assign(_Ptr[_My_data._Mysize], _Elem());

  001cc	33 c0		 xor	 eax, eax
  001ce	66 89 85 9a 00
	00 00		 mov	 WORD PTR $T5[rbp], ax
  001d5	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001d9	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001dd	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  001e1	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  001e5	48 8d 95 9a 00
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2739 :         _ASAN_STRING_CREATE(*this);
; 2740 :         _Guard._Target = nullptr;

  001f4	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR _Guard$[rbp], 0

; 2741 :         _Proxy._Release();

  001fc	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00200	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 2742 :     }

  00205	48 8d 4d 40	 lea	 rcx, QWORD PTR _Guard$[rbp]
  00209	e8 00 00 00 00	 call	 ??1?$_Tidy_deallocate_guard@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~_Tidy_deallocate_guard<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0020e	90		 npad	 1
  0020f	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00213	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00218	48 8d a5 b0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+176]
  0021f	5d		 pop	 rbp
  00220	c3		 ret	 0
$LN10@Construct_:
??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S39$ = 24
_Proxy$ = 32
_New_capacity$1 = 48
_New_ptr$2 = 56
_Guard$ = 64
_Ptr$3 = 72
_Ptr$ = 80
$T4 = 152
$T5 = 154
tv138 = 160
tv136 = 168
this$ = 192
_First$ = 200
_Last$ = 208
_Count$ = 216
?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$distance@PEAD@std@@YA_JPEAD0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$distance@PEAD@std@@YA_JPEAD0@Z PROC			; std::distance<char *>, COMDAT

; 1436 : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1437 :     if constexpr (_Is_ranges_random_iter_v<_InIt>) {
; 1438 :         return _Last - _First; // assume the iterator will do debug checking

  00020	48 8b 45 50	 mov	 rax, QWORD PTR _First$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Last$[rbp]
  00028	48 2b c8	 sub	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx

; 1439 :     } else {
; 1440 :         _Adl_verify_range(_First, _Last);
; 1441 :         auto _UFirst             = _Get_unwrapped(_First);
; 1442 :         const auto _ULast        = _Get_unwrapped(_Last);
; 1443 :         _Iter_diff_t<_InIt> _Off = 0;
; 1444 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1445 :             ++_Off;
; 1446 :         }
; 1447 : 
; 1448 :         return _Off;
; 1449 :     }
; 1450 : }

  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$distance@PEAD@std@@YA_JPEAD0@Z ENDP			; std::distance<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 80
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>, COMDAT

; 1171 :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1172 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1173 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1174 :         return _It + 0;
; 1175 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1176 :         return static_cast<_Iter&&>(_It)._Unwrapped();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _It$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped

; 1177 :     } else {
; 1178 :         return static_cast<_Iter&&>(_It);
; 1179 :     }
; 1180 : }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >, COMDAT

; 1148 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1149 :     // check that [_First, _Last) forms an iterator range
; 1150 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1151 :         _Verify_range(_First, _Last);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Last$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _First$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ; std::_Verify_range

; 1152 :     }
; 1153 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Verify_range@D@std@@YAXQEBD0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$_Verify_range@D@std@@YAXQEBD0@Z PROC			; std::_Verify_range<char>, COMDAT

; 1126 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Verify_ran:

; 1127 :     // special case range verification for pointers
; 1128 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Last$[rbp]
  00024	48 39 45 50	 cmp	 QWORD PTR _First$[rbp], rax
  00028	77 02		 ja	 SHORT $LN7@Verify_ran
  0002a	eb 6b		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 68 04 00
	00		 mov	 r8d, 1128		; 00000468H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GB@IHPKJKEH@C?3?2Program?5Files?2Microsoft?5Visu@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN11@Verify_ran
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 68 04 00
	00		 mov	 r9d, 1128		; 00000468H
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MC@NIKDFAJH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 83		 jne	 SHORT $LN4@Verify_ran

; 1129 : }

  0009d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000a1	5d		 pop	 rbp
  000a2	c3		 ret	 0
??$_Verify_range@D@std@@YAXQEBD0@Z ENDP			; std::_Verify_range<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z
_TEXT	SEGMENT
_UVal_trunc$ = 0
_RNext$ = 96
_UVal$ = 104
??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z PROC	; std::_UIntegral_to_buff<char,unsigned __int64>, COMDAT

; 441  : _NODISCARD _Elem* _UIntegral_to_buff(_Elem* _RNext, _UTy _UVal) {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 442  :     // format _UVal into buffer *ending at* _RNext
; 443  :     static_assert(is_unsigned_v<_UTy>, "_UTy must be unsigned");
; 444  : 
; 445  : #ifdef _WIN64
; 446  :     auto _UVal_trunc = _UVal;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _UVal$[rbp]
  00024	48 89 45 00	 mov	 QWORD PTR _UVal_trunc$[rbp], rax
$LN4@UIntegral_:

; 447  : #else // ^^^ _WIN64 / !_WIN64 vvv
; 448  : 
; 449  :     constexpr bool _Big_uty = sizeof(_UTy) > 4;
; 450  :     if constexpr (_Big_uty) { // For 64-bit numbers, work in chunks to avoid 64-bit divisions.
; 451  :         while (_UVal > 0xFFFFFFFFU) {
; 452  :             auto _UVal_chunk = static_cast<unsigned long>(_UVal % 1000000000);
; 453  :             _UVal /= 1000000000;
; 454  : 
; 455  :             for (int _Idx = 0; _Idx != 9; ++_Idx) {
; 456  :                 *--_RNext = static_cast<_Elem>('0' + _UVal_chunk % 10);
; 457  :                 _UVal_chunk /= 10;
; 458  :             }
; 459  :         }
; 460  :     }
; 461  : 
; 462  :     auto _UVal_trunc = static_cast<unsigned long>(_UVal);
; 463  : #endif // _WIN64
; 464  : 
; 465  :     do {
; 466  :         *--_RNext = static_cast<_Elem>('0' + _UVal_trunc % 10);

  00028	48 8b 45 60	 mov	 rax, QWORD PTR _RNext$[rbp]
  0002c	48 ff c8	 dec	 rax
  0002f	48 89 45 60	 mov	 QWORD PTR _RNext$[rbp], rax
  00033	33 d2		 xor	 edx, edx
  00035	48 8b 45 00	 mov	 rax, QWORD PTR _UVal_trunc$[rbp]
  00039	b9 0a 00 00 00	 mov	 ecx, 10
  0003e	48 f7 f1	 div	 rcx
  00041	48 8b c2	 mov	 rax, rdx
  00044	48 83 c0 30	 add	 rax, 48			; 00000030H
  00048	48 8b 4d 60	 mov	 rcx, QWORD PTR _RNext$[rbp]
  0004c	88 01		 mov	 BYTE PTR [rcx], al

; 467  :         _UVal_trunc /= 10;

  0004e	33 d2		 xor	 edx, edx
  00050	48 8b 45 00	 mov	 rax, QWORD PTR _UVal_trunc$[rbp]
  00054	b9 0a 00 00 00	 mov	 ecx, 10
  00059	48 f7 f1	 div	 rcx
  0005c	48 89 45 00	 mov	 QWORD PTR _UVal_trunc$[rbp], rax

; 468  :     } while (_UVal_trunc != 0);

  00060	48 83 7d 00 00	 cmp	 QWORD PTR _UVal_trunc$[rbp], 0
  00065	75 c1		 jne	 SHORT $LN4@UIntegral_

; 469  :     return _RNext;

  00067	48 8b 45 60	 mov	 rax, QWORD PTR _RNext$[rbp]

; 470  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z ENDP	; std::_UIntegral_to_buff<char,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
$T1 = 80
$T2 = 81
tv94 = 88
tv70 = 88
this$ = 112
_First$ = 120
_Last$ = 128
_Al$ = 136
??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>, COMDAT

; 2569 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002d	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 89 45 58	 mov	 QWORD PTR tv70[rbp], rax
  00035	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0003c	0f b6 55 50	 movzx	 edx, BYTE PTR $T1[rbp]
  00040	48 8b 4d 58	 mov	 rcx, QWORD PTR tv70[rbp]
  00044	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
  00049	90		 npad	 1

; 2570 :         _Adl_verify_range(_First, _Last);

  0004a	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR _Last$[rbp]
  00051	48 8d 4d 78	 lea	 rcx, QWORD PTR _First$[rbp]
  00055	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z ; std::_Adl_verify_range<char *,char *>

; 2571 :         auto _UFirst = _Get_unwrapped(_First);

  0005a	48 8d 4d 78	 lea	 rcx, QWORD PTR _First$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z ; std::_Get_unwrapped<char * &>
  00063	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 2572 :         auto _ULast  = _Get_unwrapped(_Last);

  00067	48 8d 8d 80 00
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAPEAD@std@@YA?A_TAEAPEAD@Z ; std::_Get_unwrapped<char * &>
  00073	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 2573 :         if (_UFirst == _ULast) {

  00077	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  0007b	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  0007f	75 34		 jne	 SHORT $LN2@allocator

; 2574 :             _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00081	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00085	48 89 45 58	 mov	 QWORD PTR tv94[rbp], rax
  00089	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0008d	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00092	48 8b d0	 mov	 rdx, rax
  00095	48 8d 4d 51	 lea	 rcx, QWORD PTR $T2[rbp]
  00099	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0009e	48 8b d0	 mov	 rdx, rax
  000a1	48 8b 4d 58	 mov	 rcx, QWORD PTR tv94[rbp]
  000a5	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2575 :             _Tidy_init();

  000aa	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000ae	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2576 :         } else {

  000b3	eb 27		 jmp	 SHORT $LN3@allocator
$LN2@allocator:

; 2577 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2578 :                 _Construct<_Construct_strategy::_From_ptr>(

  000b5	48 8b 45 00	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000b9	48 8b 4d 08	 mov	 rcx, QWORD PTR _ULast$[rbp]
  000bd	48 2b c8	 sub	 rcx, rax
  000c0	48 8b c1	 mov	 rax, rcx
  000c3	48 8b c8	 mov	 rcx, rax
  000c6	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  000cb	4c 8b c0	 mov	 r8, rax
  000ce	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000d2	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000d6	e8 00 00 00 00	 call	 ??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>
  000db	90		 npad	 1
$LN3@allocator:

; 2579 :                     _UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));
; 2580 :             } else if constexpr (_Is_cpp17_fwd_iter_v<decltype(_UFirst)>) {
; 2581 :                 const auto _Length = static_cast<size_t>(_STD distance(_UFirst, _ULast));
; 2582 :                 const auto _Count  = _Convert_size<size_type>(_Length);
; 2583 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast), _Count);
; 2584 :             } else {
; 2585 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast));
; 2586 :             }
; 2587 :         }
; 2588 :     }

  000dc	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000e0	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
$T1 = 80
$T2 = 81
tv94 = 88
tv70 = 88
this$ = 112
_First$ = 120
_Last$ = 128
_Al$ = 136
?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z
_TEXT	SEGMENT
_UVal_trunc$ = 0
_RNext$ = 96
_UVal$ = 104
??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z PROC	; std::_UIntegral_to_buff<char,unsigned int>, COMDAT

; 441  : _NODISCARD _Elem* _UIntegral_to_buff(_Elem* _RNext, _UTy _UVal) {

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 442  :     // format _UVal into buffer *ending at* _RNext
; 443  :     static_assert(is_unsigned_v<_UTy>, "_UTy must be unsigned");
; 444  : 
; 445  : #ifdef _WIN64
; 446  :     auto _UVal_trunc = _UVal;

  0001f	8b 45 68	 mov	 eax, DWORD PTR _UVal$[rbp]
  00022	89 45 00	 mov	 DWORD PTR _UVal_trunc$[rbp], eax
$LN4@UIntegral_:

; 447  : #else // ^^^ _WIN64 / !_WIN64 vvv
; 448  : 
; 449  :     constexpr bool _Big_uty = sizeof(_UTy) > 4;
; 450  :     if constexpr (_Big_uty) { // For 64-bit numbers, work in chunks to avoid 64-bit divisions.
; 451  :         while (_UVal > 0xFFFFFFFFU) {
; 452  :             auto _UVal_chunk = static_cast<unsigned long>(_UVal % 1000000000);
; 453  :             _UVal /= 1000000000;
; 454  : 
; 455  :             for (int _Idx = 0; _Idx != 9; ++_Idx) {
; 456  :                 *--_RNext = static_cast<_Elem>('0' + _UVal_chunk % 10);
; 457  :                 _UVal_chunk /= 10;
; 458  :             }
; 459  :         }
; 460  :     }
; 461  : 
; 462  :     auto _UVal_trunc = static_cast<unsigned long>(_UVal);
; 463  : #endif // _WIN64
; 464  : 
; 465  :     do {
; 466  :         *--_RNext = static_cast<_Elem>('0' + _UVal_trunc % 10);

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _RNext$[rbp]
  00029	48 ff c8	 dec	 rax
  0002c	48 89 45 60	 mov	 QWORD PTR _RNext$[rbp], rax
  00030	33 d2		 xor	 edx, edx
  00032	8b 45 00	 mov	 eax, DWORD PTR _UVal_trunc$[rbp]
  00035	b9 0a 00 00 00	 mov	 ecx, 10
  0003a	f7 f1		 div	 ecx
  0003c	8b c2		 mov	 eax, edx
  0003e	83 c0 30	 add	 eax, 48			; 00000030H
  00041	48 8b 4d 60	 mov	 rcx, QWORD PTR _RNext$[rbp]
  00045	88 01		 mov	 BYTE PTR [rcx], al

; 467  :         _UVal_trunc /= 10;

  00047	33 d2		 xor	 edx, edx
  00049	8b 45 00	 mov	 eax, DWORD PTR _UVal_trunc$[rbp]
  0004c	b9 0a 00 00 00	 mov	 ecx, 10
  00051	f7 f1		 div	 ecx
  00053	89 45 00	 mov	 DWORD PTR _UVal_trunc$[rbp], eax

; 468  :     } while (_UVal_trunc != 0);

  00056	83 7d 00 00	 cmp	 DWORD PTR _UVal_trunc$[rbp], 0
  0005a	75 c9		 jne	 SHORT $LN4@UIntegral_

; 469  :     return _RNext;

  0005c	48 8b 45 60	 mov	 rax, QWORD PTR _RNext$[rbp]

; 470  : }

  00060	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z ENDP	; std::_UIntegral_to_buff<char,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z
_TEXT	SEGMENT
_Array$ = 80
??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z PROC		; std::end<char,21>, COMDAT

; 1825 : _NODISCARD constexpr _Ty* end(_Ty (&_Array)[_Size]) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1826 :     return _Array + _Size;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Array$[rbp]
  0001f	48 83 c0 15	 add	 rax, 21

; 1827 : }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z ENDP		; std::end<char,21>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 10 00 00 00	 mov	 ecx, 16
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00036	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 243  : }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z PROC ; std::construct_at<wchar_t,wchar_t const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 02 00 00 00	 mov	 ecx, 2
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0003d	66 89 08	 mov	 WORD PTR [rax], cx
  00040	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00044	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ENDP ; std::construct_at<wchar_t,wchar_t const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@_W@std@@YAPEA_WAEA_W@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@_W@std@@YAPEA_WAEA_W@Z PROC		; std::addressof<wchar_t>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@_W@std@@YAPEA_WAEA_W@Z ENDP		; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z PROC	; std::construct_at<char,char const &,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 01 00 00 00	 mov	 ecx, 1
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0003a	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0003d	88 08		 mov	 BYTE PTR [rax], cl
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 243  : }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ENDP	; std::construct_at<char,char const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 75   : }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	75 15		 jne	 SHORT $LN2@Allocate

; 235  : #endif // _HAS_CXX20
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00027	48 81 7d 50 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0002f	72 0b		 jb	 SHORT $LN3@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00035	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0003a	eb 14		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003c	48 83 7d 50 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00041	74 0b		 je	 SHORT $LN4@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

  00043	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  0004c	eb 02		 jmp	 SHORT $LN1@Allocate
$LN4@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004e	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 248  : }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z PROC		; std::_Unfancy<char const >, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z ENDP		; std::_Unfancy<char const >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 80
_Bytes$ = 88
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0b		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00030	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete

; 256  :     } else

  00035	eb 25		 jmp	 SHORT $LN3@Deallocate
$LN2@Deallocate:

; 257  : #endif // _HAS_CXX20
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00037	48 81 7d 58 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0003f	72 0d		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00041	48 8d 55 58	 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00045	48 8d 4d 50	 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0004e	48 8b 55 58	 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00052	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00056	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0005b	90		 npad	 1
$LN3@Deallocate:

; 265  :     }
; 266  : }

  0005c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z PROC ; std::_Construct_in_place<char *,char * &>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@PEADAEAPEAD$0A@@std@@YAPEAPEADQEAPEADAEAPEAD@Z ; std::construct_at<char *,char * &,0>

; 252  :     } else

  00041	eb 28		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 08 00 00 00	 mov	 ecx, 8
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00061	48 8b 4d 68	 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00068	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ENDP ; std::_Construct_in_place<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 80
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 303  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :     if constexpr (is_array_v<_Ty>) {
; 305  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 306  :     } else {
; 307  :         _Obj.~_Ty();
; 308  :     }
; 309  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
_TEXT	SEGMENT
_Obj$ = 80
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z PROC	; std::_Destroy_in_place<wchar_t *>, COMDAT

; 303  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :     if constexpr (is_array_v<_Ty>) {
; 305  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 306  :     } else {
; 307  :         _Obj.~_Ty();
; 308  :     }
; 309  : }

  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ENDP	; std::_Destroy_in_place<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1483 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1484 :         if (_Ptr) {

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 14		 je	 SHORT $LN2@Container_

; 1485 :             _Delete_plain_internal(_Al, _Ptr);

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00030	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00034	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1486 :         }
; 1487 :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 96
_Al_$ = 104
_Mycont$ = 112
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1469 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
  0002e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00036	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1470 :         // create a new _Container_proxy pointing at _Mycont
; 1471 :         _Ptr = _Unfancy(_Al_.allocate(1));

  0003a	ba 01 00 00 00	 mov	 edx, 1
  0003f	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al_$[rbp]
  00043	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00050	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00054	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1472 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00057	48 8b 4d 70	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00060	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00064	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0006f	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1473 :         _Mycont._Myproxy = _Ptr;

  00074	48 8b 45 70	 mov	 rax, QWORD PTR _Mycont$[rbp]
  00078	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0007c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1474 :     }

  00082	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00086	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,long,long> *>::allocator<IIContainer<void,long,long> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,long,long> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
_Val1$ = 96
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1524 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z PROC		; std::_Refancy<char *,0>, COMDAT

; 295  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 296  :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 297  : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ENDP		; std::_Refancy<char *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z
_TEXT	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S30$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 130
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>, COMDAT

; 2609 :     _CONSTEXPR20 void _Construct(const _Char_or_ptr _Arg, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2610 :         auto& _My_data = _Mypair._Myval2;

  00028	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 2611 :         _STL_INTERNAL_CHECK(!_My_data._Large_string_engaged());
; 2612 : 
; 2613 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2614 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Char_or_ptr, _Elem>);
; 2615 :         } else {
; 2616 :             _STL_INTERNAL_STATIC_ASSERT(_Is_elem_cptr<_Char_or_ptr>::value);
; 2617 :         }
; 2618 : 
; 2619 :         if (_Count > max_size()) {

  00033	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  0003f	48 39 85 c0 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00046	76 05		 jbe	 SHORT $LN2@Construct

; 2620 :             _Xlen_string(); // result too long

  00048	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Construct:

; 2621 :         }
; 2622 : 
; 2623 :         auto& _Al       = _Getal();

  0004d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00059	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 2624 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

  0005d	48 8b 55 08	 mov	 rdx, QWORD PTR _Al$[rbp]
  00061	48 8d 4d 18	 lea	 rcx, QWORD PTR $S30$[rbp]
  00065	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  0006a	48 8d 45 18	 lea	 rax, QWORD PTR $S30$[rbp]
  0006e	48 89 45 10	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2625 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  00072	4c 8b 45 00	 mov	 r8, QWORD PTR _My_data$[rbp]
  00076	48 8b 55 10	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0007a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00083	90		 npad	 1

; 2626 : 
; 2627 :         if (_Count < _BUF_SIZE) {

  00084	48 83 bd c0 00
	00 00 08	 cmp	 QWORD PTR _Count$[rbp], 8
  0008c	73 79		 jae	 SHORT $LN3@Construct

; 2628 :             _My_data._Mysize = _Count;

  0008e	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00099	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2629 :             _My_data._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a1	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 2630 : 
; 2631 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2632 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2633 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2634 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2635 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);

  000a9	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000b8	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy

; 2636 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

  000c7	33 c0		 xor	 eax, eax
  000c9	66 89 85 80 00
	00 00		 mov	 WORD PTR $T1[rbp], ax
  000d0	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000d4	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  000db	48 8d 44 48 08	 lea	 rax, QWORD PTR [rax+rcx*2+8]
  000e0	48 8d 95 80 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000e7	48 8b c8	 mov	 rcx, rax
  000ea	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2637 :             } else { // _Strat == _Construct_strategy::_From_string
; 2638 : #ifdef _INSERT_STRING_ANNOTATION
; 2639 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2640 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2641 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2642 : #endif // !_INSERT_STRING_ANNOTATION
; 2643 :             }
; 2644 : 
; 2645 :             _Proxy._Release();

  000ef	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f3	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f8	90		 npad	 1

; 2646 :             return;

  000f9	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000fd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00102	e9 08 01 00 00	 jmp	 $LN4@Construct
$LN3@Construct:

; 2647 :         }
; 2648 : 
; 2649 :         _My_data._Myres         = _BUF_SIZE - 1;

  00107	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0010b	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 2650 :         size_type _New_capacity = _Calculate_growth(_Count);

  00113	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  0011a	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00121	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
  00126	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2651 :         ++_New_capacity;

  0012a	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0012e	48 ff c0	 inc	 rax
  00131	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2652 :         const pointer _New_ptr = _Allocate_at_least_helper(_Al, _New_capacity); // throws

  00135	48 8d 55 30	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00139	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013d	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@_W@std@@@std@@YAPEA_WAEAV?$allocator@_W@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<wchar_t> >
  00142	48 89 45 38	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 2653 :         --_New_capacity;

  00146	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  0014a	48 ff c8	 dec	 rax
  0014d	48 89 45 30	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2654 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00151	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00155	48 83 c0 08	 add	 rax, 8
  00159	48 8d 55 38	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  0015d	48 8b c8	 mov	 rcx, rax
  00160	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>

; 2655 : 
; 2656 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);

  00165	48 8b 45 30	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00169	48 ff c0	 inc	 rax
  0016c	48 89 85 88 00
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  00173	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00177	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  0017c	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  00183	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR tv154[rbp]
  0018a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  00191	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes

; 2657 : 
; 2658 :         _My_data._Mysize = _Count;

  00196	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0019a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  001a1	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2659 :         _My_data._Myres  = _New_capacity;

  001a5	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  001a9	48 8b 4d 30	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  001ad	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2660 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2661 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2662 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2663 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2664 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);

  001b1	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001b5	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  001ba	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  001c1	48 8b 95 b8 00
	00 00		 mov	 rdx, QWORD PTR _Arg$[rbp]
  001c8	48 8b c8	 mov	 rcx, rax
  001cb	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_Char_traits<wchar_t,unsigned short>::copy

; 2665 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

  001d0	33 c0		 xor	 eax, eax
  001d2	66 89 85 82 00
	00 00		 mov	 WORD PTR $T2[rbp], ax
  001d9	48 8b 4d 38	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001dd	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  001e2	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  001e9	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  001ed	48 8d 95 82 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  001f4	48 8b c8	 mov	 rcx, rax
  001f7	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2666 :         } else { // _Strat == _Construct_strategy::_From_string
; 2667 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);
; 2668 :         }
; 2669 : 
; 2670 :         _ASAN_STRING_CREATE(*this);
; 2671 :         _Proxy._Release();

  001fc	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00200	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  00205	90		 npad	 1

; 2672 :     }

  00206	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0020a	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
$LN4@Construct:
  0020f	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  00216	5d		 pop	 rbp
  00217	c3		 ret	 0
$LN6@Construct:
??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 0
_Al$ = 8
_Alproxy$ = 16
$S30$ = 24
_Proxy$ = 32
_New_capacity$ = 48
_New_ptr$ = 56
$T1 = 128
$T2 = 130
tv154 = 136
tv152 = 144
this$ = 176
_Arg$ = 184
_Count$ = 192
?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 20	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Convert_size@_K_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 80
??$_Convert_size@_K_K@std@@YA_K_K@Z PROC		; std::_Convert_size<unsigned __int64,unsigned __int64>, COMDAT

; 1108 :     sizeof(_Unsigned_type) <= sizeof(_Size_type)) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1109 :     // convert _Unsigned_type to _Size_type, avoiding truncation
; 1110 :     _STL_INTERNAL_STATIC_ASSERT(_Unsigned_type(-1) > 0);
; 1111 :     _STL_INTERNAL_STATIC_ASSERT(_Size_type(-1) > 0);
; 1112 : 
; 1113 :     if constexpr (sizeof(_Unsigned_type) > sizeof(_Size_type)) {
; 1114 :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 1115 :             _Xlength_error("size is too long for _Size_type");
; 1116 :         }
; 1117 :     }
; 1118 : 
; 1119 :     return static_cast<_Size_type>(_Len);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Len$[rbp]

; 1120 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Convert_size@_K_K@std@@YA_K_K@Z ENDP		; std::_Convert_size<unsigned __int64,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::~vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@YAXPEAPEAV?$IIContainer@XJJ@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XJJ@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,long,long> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ; std::allocator<IIContainer<void,long,long> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S19$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::~vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S19$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,long,long> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S19$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::~vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XJJ@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,long,long> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,long,long> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XJJ@@@2@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XJJ@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XJJ@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,long,long> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z PROC ; std::allocator<IIContainer<void,long,long> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAAXQEAPEAV?$IIContainer@XJJ@@_K@Z ENDP ; std::allocator<IIContainer<void,long,long> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void,long,long> *>::allocator<IIContainer<void,long,long> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@XJJ@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void,long,long> *>::allocator<IIContainer<void,long,long> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ; std::allocator<IIContainer<void> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S20$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S20$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S20$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z PROC ; std::allocator<IIContainer<void> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ENDP ; std::allocator<IIContainer<void> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ ; std::allocator<FWindowsWindow *>::allocator<FWindowsWindow *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<FWindowsWindow *> >::_Vector_val<std::_Simple_types<FWindowsWindow *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><FWindowsWindow *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 0
_Mylast$ = 8
this$ = 96
<_Val_0>$ = 104
??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_one_at_back<FWindowsWindow * const &>, COMDAT

; 775  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 776  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 777  :         auto& _My_data   = _Mypair._Myval2;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 778  :         pointer& _Mylast = _My_data._Mylast;

  00028	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002c	48 83 c0 10	 add	 rax, 16
  00030	48 89 45 08	 mov	 QWORD PTR _Mylast$[rbp], rax

; 779  : 
; 780  :         if (_Mylast != _My_data._Myend) {

  00034	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00038	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00043	74 0f		 je	 SHORT $LN2@Emplace_on

; 781  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00045	48 8b 55 68	 mov	 rdx, QWORD PTR <_Val_0>$[rbp]
  00049	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004d	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_back_with_unused_capacity<FWindowsWindow * const &>
  00052	eb 14		 jmp	 SHORT $LN1@Emplace_on
$LN2@Emplace_on:

; 782  :         }
; 783  : 
; 784  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00054	4c 8b 45 68	 mov	 r8, QWORD PTR <_Val_0>$[rbp]
  00058	48 8b 45 08	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAPEAPEAVFWindowsWindow@@QEAPEAV2@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_reallocate<FWindowsWindow * const &>
$LN1@Emplace_on:

; 785  :     }

  00068	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_one_at_back<FWindowsWindow * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
__formal$ = 80
_Ptr$ = 88
??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z PROC ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::destroy<FWindowsWindow *>, COMDAT

; 728  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 729  : #if _HAS_CXX20
; 730  :         _STD destroy_at(_Ptr);

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00024	e8 00 00 00 00	 call	 ??$destroy_at@PEAVFWindowsWindow@@@std@@YAXQEAPEAVFWindowsWindow@@@Z ; std::destroy_at<FWindowsWindow *>

; 731  : #else // _HAS_CXX20
; 732  :         _Ptr->~_Uty();
; 733  : #endif // _HAS_CXX20
; 734  :     }

  00029	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::destroy<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z PROC ; std::_Unfancy<FWindowsWindow *>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ENDP ; std::_Unfancy<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z PROC ; std::_Move_unchecked<FWindowsWindow * *,FWindowsWindow * *>, COMDAT

; 4869 : _CONSTEXPR20 _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4870 :     // move [_First, _Last) to [_Dest, ...)
; 4871 :     // note: _Move_unchecked has callers other than the move family
; 4872 :     if constexpr (_Iter_move_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4873 : #if _HAS_CXX20
; 4874 :         if (!_STD is_constant_evaluated())

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	75 13		 jne	 SHORT $LN5@Move_unche

; 4875 : #endif // _HAS_CXX20
; 4876 :         {
; 4877 :             return _Copy_memmove(_First, _Last, _Dest);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Dest$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Last$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR _First$[rbp]
  0003d	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ; std::_Copy_memmove<FWindowsWindow * *,FWindowsWindow * *>
  00042	eb 38		 jmp	 SHORT $LN1@Move_unche
$LN5@Move_unche:

; 4878 :         }
; 4879 :     }
; 4880 : 
; 4881 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00044	eb 18		 jmp	 SHORT $LN4@Move_unche
$LN2@Move_unche:
  00046	48 8b 45 60	 mov	 rax, QWORD PTR _Dest$[rbp]
  0004a	48 83 c0 08	 add	 rax, 8
  0004e	48 89 45 60	 mov	 QWORD PTR _Dest$[rbp], rax
  00052	48 8b 45 50	 mov	 rax, QWORD PTR _First$[rbp]
  00056	48 83 c0 08	 add	 rax, 8
  0005a	48 89 45 50	 mov	 QWORD PTR _First$[rbp], rax
$LN4@Move_unche:
  0005e	48 8b 45 58	 mov	 rax, QWORD PTR _Last$[rbp]
  00062	48 39 45 50	 cmp	 QWORD PTR _First$[rbp], rax
  00066	74 10		 je	 SHORT $LN3@Move_unche

; 4882 :         *_Dest = _STD move(*_First);

  00068	48 8b 45 60	 mov	 rax, QWORD PTR _Dest$[rbp]
  0006c	48 8b 4d 50	 mov	 rcx, QWORD PTR _First$[rbp]
  00070	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00073	48 89 08	 mov	 QWORD PTR [rax], rcx

; 4883 :     }

  00076	eb ce		 jmp	 SHORT $LN2@Move_unche
$LN3@Move_unche:

; 4884 : 
; 4885 :     return _Dest;

  00078	48 8b 45 60	 mov	 rax, QWORD PTR _Dest$[rbp]
$LN1@Move_unche:

; 4886 : }

  0007c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ENDP ; std::_Move_unchecked<FWindowsWindow * *,FWindowsWindow * *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z PROC ; std::_Destroy_range<std::allocator<FWindowsWindow *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 98   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   :     // return smaller of _Left and _Right
; 100  :     return _Right < _Left ? _Right : _Left;

  00020	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00024	48 8b 4d 60	 mov	 rcx, QWORD PTR _Left$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@min
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@min
$LN3@min:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@min:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 101  : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 0
$T1 = 72
this$ = 96
_Al$ = 104
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al$[rbp]
  00029	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00036	48 89 45 00	 mov	 QWORD PTR _New_proxy$[rbp], rax

; 1209 :         _Construct_in_place(*_New_proxy, this);

  0003a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00042	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00046	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1210 :         _Myproxy            = _New_proxy;

  0004f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1211 :         _New_proxy->_Mycont = this;

  0005a	48 8b 45 00	 mov	 rax, QWORD PTR _New_proxy$[rbp]
  0005e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1212 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1135 : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1136 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1137 :     using _Ty = typename _Alloc::value_type;
; 1138 :     _Ptr->~_Ty();
; 1139 :     _Deallocate_plain(_Al, _Ptr);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1140 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b6	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bb	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bf	5d		 pop	 rbp
  000c0	c3		 ret	 0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Count$ = 88
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z PROC ; std::_Allocate_at_least_helper<std::allocator<char> >, COMDAT

; 2198 :     _Alloc& _Al, _CRT_GUARDOVERFLOW typename allocator_traits<_Alloc>::size_type& _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2199 : #if _HAS_CXX23
; 2200 :     if constexpr (_Should_allocate_at_least<_Alloc>) {
; 2201 :         auto [_Ptr, _Allocated] = _Al.allocate_at_least(_Count);
; 2202 :         _Count                  = _Allocated;
; 2203 :         return _Ptr;
; 2204 :     } else
; 2205 : #endif // _HAS_CXX23
; 2206 :     {
; 2207 :         return _Al.allocate(_Count);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Count$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002b	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2208 :     }
; 2209 : }

  00030	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00034	5d		 pop	 rbp
  00035	c3		 ret	 0
??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ENDP ; std::_Allocate_at_least_helper<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
__param0$ = 88
__param1$ = 96
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	4c 8b 45 60	 mov	 r8, QWORD PTR __param1$[rbp]
  0001d	48 8b 55 58	 mov	 rdx, QWORD PTR __param0$[rbp]
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
tv65 = 88
this$ = 112
__$ReturnUdt$ = 120
_Off$ = 128
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+, COMDAT

; 310  :     _NODISCARD _CONSTEXPR20 _Vector_iterator operator+(const difference_type _Off) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 311  :         _Vector_iterator _Tmp = *this;

  00028	48 8b 55 70	 mov	 rdx, QWORD PTR this$[rbp]
  0002c	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  00035	48 89 45 58	 mov	 QWORD PTR tv65[rbp], rax

; 312  :         _Tmp += _Off;

  00039	48 8b 95 80 00
	00 00		 mov	 rdx, QWORD PTR _Off$[rbp]
  00040	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00044	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=

; 313  :         return _Tmp;

  00049	48 8b 45 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 314  :     }

  0004d	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 80
_Off$ = 88
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=, COMDAT

; 305  :     _CONSTEXPR20 _Vector_iterator& operator+=(const difference_type _Off) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 306  :         _Mybase::operator+=(_Off);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Off$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=

; 307  :         return *this;

  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 308  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8b 4d 58	 mov	 rcx, QWORD PTR __that$[rbp]
  00029	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0002d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00031	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00039	5d		 pop	 rbp
  0003a	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8b 4d 58	 mov	 rcx, QWORD PTR __that$[rbp]
  00029	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0002d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00031	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00039	5d		 pop	 rbp
  0003a	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 80
_Off$ = 88
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=, COMDAT

; 124  :     _CONSTEXPR20 _Vector_const_iterator& operator+=(const difference_type _Off) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 125  :         _Verify_offset(_Off);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Off$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Verify_offset

; 126  :         _Ptr += _Off;

  0002d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00035	48 8b 4d 58	 mov	 rcx, QWORD PTR _Off$[rbp]
  00039	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0003d	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00041	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 127  :         return *this;

  00045	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 128  :     }

  00049	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 0
this$ = 96
_Off$ = 104
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Verify_offset, COMDAT

; 107  :     _CONSTEXPR20 void _Verify_offset(const difference_type _Off) const noexcept {

$LN43:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 108  : #if _ITERATOR_DEBUG_LEVEL == 0
; 109  :         (void) _Off;
; 110  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 / _ITERATOR_DEBUG_LEVEL != 0 vvv
; 111  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00023	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	48 89 45 00	 mov	 QWORD PTR _Mycont$[rbp], rax
$LN4@Verify_off:

; 112  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

  00030	48 83 7d 68 00	 cmp	 QWORD PTR _Off$[rbp], 0
  00035	74 0b		 je	 SHORT $LN28@Verify_off
  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00040	74 02		 je	 SHORT $LN7@Verify_off
$LN28@Verify_off:
  00042	eb 6b		 jmp	 SHORT $LN27@Verify_off
$LN7@Verify_off:
  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00057	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005c	45 33 c9	 xor	 r9d, r9d
  0005f	41 b8 70 00 00
	00		 mov	 r8d, 112		; 00000070H
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  0006c	b9 02 00 00 00	 mov	 ecx, 2
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00077	83 f8 01	 cmp	 eax, 1
  0007a	75 03		 jne	 SHORT $LN39@Verify_off
  0007c	cc		 int	 3
  0007d	33 c0		 xor	 eax, eax
$LN39@Verify_off:
  0007f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00088	41 b9 70 00 00
	00		 mov	 r9d, 112		; 00000070H
  0008e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0009c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
  000a3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	75 95		 jne	 SHORT $LN7@Verify_off
$LN27@Verify_off:
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	0f 85 77 ff ff
	ff		 jne	 $LN4@Verify_off
$LN10@Verify_off:

; 113  :         _STL_VERIFY(_Off == 0 || _Mycont, "cannot seek invalidated vector iterator");

  000b9	48 83 7d 68 00	 cmp	 QWORD PTR _Off$[rbp], 0
  000be	74 07		 je	 SHORT $LN31@Verify_off
  000c0	48 83 7d 00 00	 cmp	 QWORD PTR _Mycont$[rbp], 0
  000c5	74 02		 je	 SHORT $LN13@Verify_off
$LN31@Verify_off:
  000c7	eb 6b		 jmp	 SHORT $LN30@Verify_off
$LN13@Verify_off:
  000c9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CI@OOHCOPKB@cannot?5seek?5invalidated?5vector?5@
  000d0	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000dc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e1	45 33 c9	 xor	 r9d, r9d
  000e4	41 b8 71 00 00
	00		 mov	 r8d, 113		; 00000071H
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  000f1	b9 02 00 00 00	 mov	 ecx, 2
  000f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000fc	83 f8 01	 cmp	 eax, 1
  000ff	75 03		 jne	 SHORT $LN40@Verify_off
  00101	cc		 int	 3
  00102	33 c0		 xor	 eax, eax
$LN40@Verify_off:
  00104	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0010d	41 b9 71 00 00
	00		 mov	 r9d, 113		; 00000071H
  00113	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FE@NGOHPDCL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAi?$AAn@
  00128	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0012e	33 c0		 xor	 eax, eax
  00130	85 c0		 test	 eax, eax
  00132	75 95		 jne	 SHORT $LN13@Verify_off
$LN30@Verify_off:
  00134	33 c0		 xor	 eax, eax
  00136	85 c0		 test	 eax, eax
  00138	0f 85 7b ff ff
	ff		 jne	 $LN10@Verify_off

; 114  :         if (_Off < 0) {

  0013e	48 83 7d 68 00	 cmp	 QWORD PTR _Off$[rbp], 0
  00143	0f 8d 94 00 00
	00		 jge	 $LN32@Verify_off
$LN16@Verify_off:

; 115  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

  00149	48 8b 45 00	 mov	 rax, QWORD PTR _Mycont$[rbp]
  0014d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00151	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00155	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00159	48 2b c1	 sub	 rax, rcx
  0015c	48 c1 f8 03	 sar	 rax, 3
  00160	48 39 45 68	 cmp	 QWORD PTR _Off$[rbp], rax
  00164	7c 02		 jl	 SHORT $LN19@Verify_off
  00166	eb 6b		 jmp	 SHORT $LN34@Verify_off
$LN19@Verify_off:
  00168	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
  0016f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00174	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0017b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00180	45 33 c9	 xor	 r9d, r9d
  00183	41 b8 73 00 00
	00		 mov	 r8d, 115		; 00000073H
  00189	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  00190	b9 02 00 00 00	 mov	 ecx, 2
  00195	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0019b	83 f8 01	 cmp	 eax, 1
  0019e	75 03		 jne	 SHORT $LN41@Verify_off
  001a0	cc		 int	 3
  001a1	33 c0		 xor	 eax, eax
$LN41@Verify_off:
  001a3	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  001ac	41 b9 73 00 00
	00		 mov	 r9d, 115		; 00000073H
  001b2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  001c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  001c7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  001cd	33 c0		 xor	 eax, eax
  001cf	85 c0		 test	 eax, eax
  001d1	75 95		 jne	 SHORT $LN19@Verify_off
$LN34@Verify_off:
  001d3	33 c0		 xor	 eax, eax
  001d5	85 c0		 test	 eax, eax
  001d7	0f 85 6c ff ff
	ff		 jne	 $LN16@Verify_off
$LN32@Verify_off:

; 116  :         }
; 117  : 
; 118  :         if (_Off > 0) {

  001dd	48 83 7d 68 00	 cmp	 QWORD PTR _Off$[rbp], 0
  001e2	0f 8e 94 00 00
	00		 jle	 $LN35@Verify_off
$LN22@Verify_off:

; 119  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

  001e8	48 8b 45 00	 mov	 rax, QWORD PTR _Mycont$[rbp]
  001ec	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  001f0	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  001f4	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001f8	48 2b c1	 sub	 rax, rcx
  001fb	48 c1 f8 03	 sar	 rax, 3
  001ff	48 39 45 68	 cmp	 QWORD PTR _Off$[rbp], rax
  00203	7f 02		 jg	 SHORT $LN25@Verify_off
  00205	eb 6b		 jmp	 SHORT $LN37@Verify_off
$LN25@Verify_off:
  00207	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
  0020e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00213	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0021a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0021f	45 33 c9	 xor	 r9d, r9d
  00222	41 b8 77 00 00
	00		 mov	 r8d, 119		; 00000077H
  00228	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  0022f	b9 02 00 00 00	 mov	 ecx, 2
  00234	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0023a	83 f8 01	 cmp	 eax, 1
  0023d	75 03		 jne	 SHORT $LN42@Verify_off
  0023f	cc		 int	 3
  00240	33 c0		 xor	 eax, eax
$LN42@Verify_off:
  00242	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0024b	41 b9 77 00 00
	00		 mov	 r9d, 119		; 00000077H
  00251	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00258	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0025f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  00266	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0026c	33 c0		 xor	 eax, eax
  0026e	85 c0		 test	 eax, eax
  00270	75 95		 jne	 SHORT $LN25@Verify_off
$LN37@Verify_off:
  00272	33 c0		 xor	 eax, eax
  00274	85 c0		 test	 eax, eax
  00276	0f 85 6c ff ff
	ff		 jne	 $LN22@Verify_off
$LN35@Verify_off:

; 120  :         }
; 121  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 122  :     }

  0027c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00280	5d		 pop	 rbp
  00281	c3		 ret	 0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Parg$ = 88
_Pvector$ = 96
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 58	 mov	 rcx, QWORD PTR _Parg$[rbp]
  00036	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 44   :         this->_Adopt(_Pvector);

  0003a	48 8b 55 60	 mov	 rdx, QWORD PTR _Pvector$[rbp]
  0003e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 45   :     }

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
_TEXT	SEGMENT
_Left_size$ = 0
_Right_size$ = 8
$T1 = 80
$T2 = 81
$T3 = 84
tv86 = 88
__$ReturnUdt$ = 112
_Left$ = 120
_Right$ = 128
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4929 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001c	c7 45 54 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4930 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4931 :     const auto _Left_size  = _Convert_size<_Size_type>(_Traits::length(_Left));

  0002f	48 8b 4d 78	 mov	 rcx, QWORD PTR _Left$[rbp]
  00033	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  00040	48 89 45 00	 mov	 QWORD PTR _Left_size$[rbp], rax

; 4932 :     const auto _Right_size = _Right.size();

  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00050	48 89 45 08	 mov	 QWORD PTR _Right_size$[rbp], rax

; 4933 :     if (_Right.max_size() - _Right_size < _Left_size) {

  00054	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005b	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00060	48 2b 45 08	 sub	 rax, QWORD PTR _Right_size$[rbp]
  00064	48 3b 45 00	 cmp	 rax, QWORD PTR _Left_size$[rbp]
  00068	73 05		 jae	 SHORT $LN2@operator

; 4934 :         _Xlen_string();

  0006a	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@operator:

; 4935 :     }
; 4936 : 
; 4937 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

  0006f	0f b6 45 50	 movzx	 eax, BYTE PTR $T1[rbp]
  00073	88 45 51	 mov	 BYTE PTR $T2[rbp], al
  00076	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0007d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00082	48 89 45 58	 mov	 QWORD PTR tv86[rbp], rax
  00086	48 8b 45 08	 mov	 rax, QWORD PTR _Right_size$[rbp]
  0008a	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0008f	48 8b 45 58	 mov	 rax, QWORD PTR tv86[rbp]
  00093	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00098	48 8b 45 00	 mov	 rax, QWORD PTR _Left_size$[rbp]
  0009c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000a1	4c 8b 4d 78	 mov	 r9, QWORD PTR _Left$[rbp]
  000a5	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Right$[rbp]
  000ac	0f b6 55 51	 movzx	 edx, BYTE PTR $T2[rbp]
  000b0	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b9	8b 45 54	 mov	 eax, DWORD PTR $T3[rbp]
  000bc	83 c8 01	 or	 eax, 1
  000bf	89 45 54	 mov	 DWORD PTR $T3[rbp], eax
  000c2	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4938 : }

  000c6	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000ca	5d		 pop	 rbp
  000cb	c3		 ret	 0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>, COMDAT

; 2569 :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 68	 mov	 QWORD PTR tv72[rbp], rax
  00038	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  0003f	0f b6 55 60	 movzx	 edx, BYTE PTR $T3[rbp]
  00043	48 8b 4d 68	 mov	 rcx, QWORD PTR tv72[rbp]
  00047	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
  0004c	90		 npad	 1

; 2570 :         _Adl_verify_range(_First, _Last);

  0004d	48 8b 95 90 00
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00054	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@@std@@YAXAEBV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >

; 2571 :         auto _UFirst = _Get_unwrapped(_First);

  00060	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00067	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
  0006c	48 89 45 00	 mov	 QWORD PTR _UFirst$[rbp], rax

; 2572 :         auto _ULast  = _Get_unwrapped(_Last);

  00070	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
  0007c	48 89 45 08	 mov	 QWORD PTR _ULast$[rbp], rax

; 2573 :         if (_UFirst == _ULast) {

  00080	48 8b 45 08	 mov	 rax, QWORD PTR _ULast$[rbp]
  00084	48 39 45 00	 cmp	 QWORD PTR _UFirst$[rbp], rax
  00088	75 3d		 jne	 SHORT $LN2@allocator

; 2574 :             _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0008a	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00091	48 89 45 68	 mov	 QWORD PTR tv128[rbp], rax
  00095	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  000a1	48 8b d0	 mov	 rdx, rax
  000a4	48 8d 4d 61	 lea	 rcx, QWORD PTR $T4[rbp]
  000a8	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  000ad	48 8b d0	 mov	 rdx, rax
  000b0	48 8b 4d 68	 mov	 rcx, QWORD PTR tv128[rbp]
  000b4	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2575 :             _Tidy_init();

  000b9	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c0	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2576 :         } else {

  000c5	eb 37		 jmp	 SHORT $LN3@allocator
$LN2@allocator:

; 2577 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2578 :                 _Construct<_Construct_strategy::_From_ptr>(
; 2579 :                     _UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));
; 2580 :             } else if constexpr (_Is_cpp17_fwd_iter_v<decltype(_UFirst)>) {
; 2581 :                 const auto _Length = static_cast<size_t>(_STD distance(_UFirst, _ULast));

  000c7	48 8b 55 08	 mov	 rdx, QWORD PTR _ULast$[rbp]
  000cb	48 8b 4d 00	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  000cf	e8 00 00 00 00	 call	 ??$distance@PEAD@std@@YA_JPEAD0@Z ; std::distance<char *>
  000d4	48 89 45 10	 mov	 QWORD PTR _Length$1[rbp], rax

; 2582 :                 const auto _Count  = _Convert_size<size_type>(_Length);

  000d8	48 8b 4d 10	 mov	 rcx, QWORD PTR _Length$1[rbp]
  000dc	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  000e1	48 89 45 18	 mov	 QWORD PTR _Count$2[rbp], rax

; 2583 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast), _Count);

  000e5	4c 8b 4d 18	 mov	 r9, QWORD PTR _Count$2[rbp]
  000e9	4c 8b 45 08	 mov	 r8, QWORD PTR _ULast$[rbp]
  000ed	48 8b 55 00	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  000f1	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f8	e8 00 00 00 00	 call	 ??$_Construct_from_iter@PEADPEAD_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXPEADQEAD_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_from_iter<char *,char *,unsigned __int64>
  000fd	90		 npad	 1
$LN3@allocator:

; 2584 :             } else {
; 2585 :                 _Construct_from_iter(_STD move(_UFirst), _STD move(_ULast));
; 2586 :             }
; 2587 :         }
; 2588 :     }

  000fe	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00105	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  0010a	90		 npad	 1
  0010b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00112	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00117	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011e	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00122	5d		 pop	 rbp
  00123	c3		 ret	 0
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$1@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 0
_ULast$ = 8
_Length$1 = 16
_Count$2 = 24
$T3 = 96
$T4 = 97
tv128 = 104
tv72 = 104
this$ = 128
_First$ = 136
_Last$ = 144
_Al$ = 152
?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0???$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
__param0$ = 88
__param1$ = 96
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	4c 8b 45 60	 mov	 r8, QWORD PTR __param1$[rbp]
  0001d	48 8b 55 58	 mov	 rdx, QWORD PTR __param0$[rbp]
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 80
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ PROC ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped, COMDAT

; 2157 :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2158 :         return const_cast<value_type*>(_Unfancy(this->_Ptr));

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00023	e8 00 00 00 00	 call	 ??$_Unfancy@$$CBD@std@@YAPEBDPEBD@Z ; std::_Unfancy<char const >

; 2159 :     }

  00028	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?_Unwrapped@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAPEADXZ ENDP ; std::_String_iterator<std::_String_val<std::_Simple_types<char> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::~_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 64
_First$ = 96
_Last$ = 104
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 2025 :         const _String_const_iterator& _First, const _String_const_iterator& _Last) noexcept {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Verify_ran:

; 2026 :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "string iterators in range are from different containers");

  00023	48 8b 4d 60	 mov	 rcx, QWORD PTR _First$[rbp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00030	48 8b 4d 68	 mov	 rcx, QWORD PTR _Last$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR tv69[rbp]
  0003d	48 3b c8	 cmp	 rcx, rax
  00040	75 02		 jne	 SHORT $LN7@Verify_ran
  00042	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN7@Verify_ran:
  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@FIGNHEDK@string?5iterators?5in?5range?5are?5f@
  0004b	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00057	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005c	45 33 c9	 xor	 r9d, r9d
  0005f	41 b8 ea 07 00
	00		 mov	 r8d, 2026		; 000007eaH
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
  0006c	b9 02 00 00 00	 mov	 ecx, 2
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00077	83 f8 01	 cmp	 eax, 1
  0007a	75 03		 jne	 SHORT $LN19@Verify_ran
  0007c	cc		 int	 3
  0007d	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  0007f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00088	41 b9 ea 07 00
	00		 mov	 r9d, 2026		; 000007eaH
  0008e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0009c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@MFNJODIC@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	0f 85 6a ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 2027 :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "string iterator range transposed");

  000b9	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  000bd	48 8b 4d 68	 mov	 rcx, QWORD PTR _Last$[rbp]
  000c1	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c5	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000c9	77 02		 ja	 SHORT $LN13@Verify_ran
  000cb	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN13@Verify_ran:
  000cd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@KDGGCAAF@string?5iterator?5range?5transpose@
  000d4	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e5	45 33 c9	 xor	 r9d, r9d
  000e8	41 b8 eb 07 00
	00		 mov	 r8d, 2027		; 000007ebH
  000ee	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@PMHOGIIF@C?3?2Program?5Files?2Microsoft?5Visu@
  000f5	b9 02 00 00 00	 mov	 ecx, 2
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00100	83 f8 01	 cmp	 eax, 1
  00103	75 03		 jne	 SHORT $LN20@Verify_ran
  00105	cc		 int	 3
  00106	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  00108	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00111	41 b9 eb 07 00
	00		 mov	 r9d, 2027		; 000007ebH
  00117	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@GEBPNHFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00125	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@NKDFABAL@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  0012c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00132	33 c0		 xor	 eax, eax
  00134	85 c0		 test	 eax, eax
  00136	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	0f 85 77 ff ff
	ff		 jne	 $LN10@Verify_ran

; 2028 :     }

  00142	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00146	5d		 pop	 rbp
  00147	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Parg$ = 88
_Pstring$ = 96
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 1852 :     _CONSTEXPR20 _String_const_iterator(pointer _Parg, const _Container_base* _Pstring) noexcept : _Ptr(_Parg) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  0002e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8b 4d 58	 mov	 rcx, QWORD PTR _Parg$[rbp]
  00036	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 1853 :         this->_Adopt(_Pstring);

  0003a	48 8b 55 60	 mov	 rdx, QWORD PTR _Pstring$[rbp]
  0003e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1854 :     }

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z
_TEXT	SEGMENT
$T1 = 64
__$ReturnUdt$ = 96
_Left$ = 104
_Right$ = 112
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4977 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, basic_string<_Elem, _Traits, _Alloc>&& _Right) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	c7 45 40 00 00
	00 00		 mov	 DWORD PTR $T1[rbp], 0
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4978 :     return _STD move(_Right.insert(0, _Left));

  0002c	4c 8b 45 68	 mov	 r8, QWORD PTR _Left$[rbp]
  00030	33 d2		 xor	 edx, edx
  00032	48 8b 4d 70	 mov	 rcx, QWORD PTR _Right$[rbp]
  00036	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00042	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  0004a	83 c8 01	 or	 eax, 1
  0004d	89 45 40	 mov	 DWORD PTR $T1[rbp], eax
  00050	48 8b 45 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4979 : }

  00054	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 64
tv65 = 72
_Left$ = 96
_Right$ = 104
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 75   :     (max) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 76   :     // return larger of _Left and _Right
; 77   :     return _Left < _Right ? _Right : _Left;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  00024	48 8b 4d 68	 mov	 rcx, QWORD PTR _Right$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	73 0a		 jae	 SHORT $LN3@max
  00030	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
  00038	eb 08		 jmp	 SHORT $LN4@max
$LN3@max:
  0003a	48 8b 45 60	 mov	 rax, QWORD PTR _Left$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR tv65[rbp], rax
$LN4@max:
  00042	48 8b 45 48	 mov	 rax, QWORD PTR tv65[rbp]
  00046	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0004a	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]

; 78   : }

  0004e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 64
tv93 = 112
tv85 = 112
this$ = 160
__formal$ = 168
_Lobj$ = 176
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT

; 238  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C79B603_xloctime
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 239  :         _Cvt = _Lobj._Getcvt();

  0002a	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0003b	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  00046	48 8b f0	 mov	 rsi, rax
  00049	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0004e	f3 a4		 rep movsb

; 240  : 
; 241  :         if (is_same_v<_Elem2, wchar_t>) {

  00050	33 c0		 xor	 eax, eax
  00052	83 f8 01	 cmp	 eax, 1
  00055	74 5c		 je	 SHORT $LN2@Getvals

; 242  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00057	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 243  :             _Months =

  00077	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0008c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00093	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 244  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 245  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00097	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000aa	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 246  :         } else {

  000ae	e9 97 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 247  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000b3	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ba	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000be	48 89 45 70	 mov	 QWORD PTR tv85[rbp], rax
  000c2	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000cf	48 8b 4d 70	 mov	 rcx, QWORD PTR tv85[rbp]
  000d3	4c 8b c1	 mov	 r8, rcx
  000d6	33 d2		 xor	 edx, edx
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000e0	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e7	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 248  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000eb	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f2	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000f6	48 89 45 70	 mov	 QWORD PTR tv93[rbp], rax
  000fa	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00107	48 8b 4d 70	 mov	 rcx, QWORD PTR tv93[rbp]
  0010b	4c 8b c1	 mov	 r8, rcx
  0010e	33 d2		 xor	 edx, edx
  00110	48 8b c8	 mov	 rcx, rax
  00113	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00118	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 249  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00123	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  0012e	4c 8b c0	 mov	 r8, rax
  00131	33 d2		 xor	 edx, edx
  00133	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0013a	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  0013f	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00146	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 250  :         }
; 251  :     }

  0014a	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00151	5f		 pop	 rdi
  00152	5e		 pop	 rsi
  00153	5d		 pop	 rbp
  00154	c3		 ret	 0
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 64
tv93 = 112
tv85 = 112
this$ = 160
__formal$ = 168
_Lobj$ = 176
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT

; 238  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C79B603_xloctime
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 239  :         _Cvt = _Lobj._Getcvt();

  0002a	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0003b	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  00046	48 8b f0	 mov	 rsi, rax
  00049	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0004e	f3 a4		 rep movsb

; 240  : 
; 241  :         if (is_same_v<_Elem2, wchar_t>) {

  00050	33 c0		 xor	 eax, eax
  00052	83 f8 01	 cmp	 eax, 1
  00055	74 5c		 je	 SHORT $LN2@Getvals

; 242  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  00057	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0006c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00073	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 243  :             _Months =

  00077	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  0008c	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00093	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 244  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 245  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  00097	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000aa	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 246  :         } else {

  000ae	e9 97 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 247  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000b3	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ba	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000be	48 89 45 70	 mov	 QWORD PTR tv85[rbp], rax
  000c2	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000cf	48 8b 4d 70	 mov	 rcx, QWORD PTR tv85[rbp]
  000d3	4c 8b c1	 mov	 r8, rcx
  000d6	33 d2		 xor	 edx, edx
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000e0	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e7	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 248  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  000eb	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f2	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000f6	48 89 45 70	 mov	 QWORD PTR tv93[rbp], rax
  000fa	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Lobj$[rbp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00107	48 8b 4d 70	 mov	 rcx, QWORD PTR tv93[rbp]
  0010b	4c 8b c1	 mov	 r8, rcx
  0010e	33 d2		 xor	 edx, edx
  00110	48 8b c8	 mov	 rcx, rax
  00113	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00118	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 249  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00123	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  0012e	4c 8b c0	 mov	 r8, rax
  00131	33 d2		 xor	 edx, edx
  00133	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0013a	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  0013f	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00146	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 250  :         }
; 251  :     }

  0014a	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00151	5f		 pop	 rdi
  00152	5e		 pop	 rsi
  00153	5d		 pop	 rbp
  00154	c3		 ret	 0
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z PROC ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  00016	83 e0 02	 and	 eax, 2
  00019	85 c0		 test	 eax, eax
  0001b	74 51		 je	 SHORT $LN2@vector
  0001d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0002c	ba 08 00 00 00	 mov	 edx, 8
  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0003a	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0003d	83 e0 01	 and	 eax, 1
  00040	85 c0		 test	 eax, eax
  00042	74 20		 je	 SHORT $LN3@vector
  00044	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 40 f8	 mov	 rax, QWORD PTR [rax-8]
  0004c	48 8d 04 c5 08
	00 00 00	 lea	 rax, QWORD PTR [rax*8+8]
  00054	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00058	48 83 e9 08	 sub	 rcx, 8
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00064	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00068	48 83 e8 08	 sub	 rax, 8
  0006c	eb 25		 jmp	 SHORT $LN1@vector
$LN2@vector:
  0006e	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00072	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00077	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0007a	83 e0 01	 and	 eax, 1
  0007d	85 c0		 test	 eax, eax
  0007f	74 0e		 je	 SHORT $LN4@vector
  00081	ba 08 00 00 00	 mov	 edx, 8
  00086	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0008a	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  0008f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
$LN1@vector:
  00093	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00097	5d		 pop	 rbp
  00098	c3		 ret	 0
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ENDP ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT

; 289  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  :         InternalRelease();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease

; 291  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 0
temp$ = 8
this$ = 96
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT

; 228  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F7423081_client@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 229  :         unsigned long ref = 0;

  0001b	c7 45 00 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 230  :         T* temp = ptr_;

  00022	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00029	48 89 45 08	 mov	 QWORD PTR temp$[rbp], rax

; 231  : 
; 232  :         if (temp != nullptr)

  0002d	48 83 7d 08 00	 cmp	 QWORD PTR temp$[rbp], 0
  00032	74 1c		 je	 SHORT $LN2@InternalRe

; 233  :         {
; 234  :             ptr_ = nullptr;

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 235  :             ref = temp->Release();

  0003f	48 8b 45 08	 mov	 rax, QWORD PTR temp$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR temp$[rbp]
  0004a	ff 50 10	 call	 QWORD PTR [rax+16]
  0004d	89 45 00	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 236  :         }
; 237  : 
; 238  :         return ref;

  00050	8b 45 00	 mov	 eax, DWORD PTR ref$[rbp]

; 239  :     }

  00053	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 0
_Ptrdest$ = 8
_Ptrnext$1 = 16
_Ptr$ = 112
__formal$ = 120
__formal$ = 128
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 525  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00017	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CC18A947_xlocale
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 526  :     // convert C string to _Elem sequence using _Cvtvec
; 527  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

  00028	48 8b 4d 70	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0002c	e8 00 00 00 00	 call	 strlen
  00031	48 ff c0	 inc	 rax
  00034	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax

; 528  : 
; 529  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

  00038	c7 44 24 20 11
	02 00 00	 mov	 DWORD PTR [rsp+32], 529	; 00000211H
  00040	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
  00047	41 b8 02 00 00
	00		 mov	 r8d, 2
  0004d	ba 01 00 00 00	 mov	 edx, 1
  00052	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  0005c	48 89 45 08	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 530  : 
; 531  :     if (!_Ptrdest) {

  00060	48 83 7d 08 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00065	75 05		 jne	 SHORT $LN5@Maklocstr

; 532  :         _Xbad_alloc();

  00067	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 533  :     }
; 534  : 
; 535  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
  00070	48 89 45 10	 mov	 QWORD PTR _Ptrnext$1[rbp], rax
  00074	eb 21		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00076	48 8b 45 00	 mov	 rax, QWORD PTR _Count$[rbp]
  0007a	48 ff c8	 dec	 rax
  0007d	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00081	48 8b 45 10	 mov	 rax, QWORD PTR _Ptrnext$1[rbp]
  00085	48 ff c0	 inc	 rax
  00088	48 89 45 10	 mov	 QWORD PTR _Ptrnext$1[rbp], rax
  0008c	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00090	48 ff c0	 inc	 rax
  00093	48 89 45 70	 mov	 QWORD PTR _Ptr$[rbp], rax
$LN4@Maklocstr:
  00097	48 83 7d 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  0009c	76 0f		 jbe	 SHORT $LN3@Maklocstr

; 536  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

  0009e	48 8b 45 10	 mov	 rax, QWORD PTR _Ptrnext$1[rbp]
  000a2	48 8b 4d 70	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000a6	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  000a9	88 08		 mov	 BYTE PTR [rax], cl

; 537  :     }

  000ab	eb c9		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 538  : 
; 539  :     return _Ptrdest;

  000ad	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN6@Maklocstr:

; 540  : }

  000b1	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000b5	5d		 pop	 rbp
  000b6	c3		 ret	 0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Count$ = 0
_Ptrdest$ = 8
_Ptr$ = 96
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 71   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__529FCF50_xlocnum
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 72   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  0001e	48 8b 4d 60	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00028	48 ff c0	 inc	 rax
  0002b	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax

; 73   : 
; 74   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  0002f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
  00035	83 c0 03	 add	 eax, 3
  00038	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0003c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@CODCFEGK@C?3?2Program?5Files?2Microsoft?5Visu@
  00043	41 b8 02 00 00
	00		 mov	 r8d, 2
  00049	ba 02 00 00 00	 mov	 edx, 2
  0004e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00052	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  00058	48 89 45 08	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 75   : 
; 76   :     if (!_Ptrdest) {

  0005c	48 83 7d 08 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00061	75 05		 jne	 SHORT $LN2@Maklocwcs

; 77   :         _Xbad_alloc();

  00063	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 78   :     }
; 79   : 
; 80   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00068	4c 8b 45 00	 mov	 r8, QWORD PTR _Count$[rbp]
  0006c	48 8b 55 60	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00070	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptrdest$[rbp]
  00074	e8 00 00 00 00	 call	 wmemcpy

; 81   :     return _Ptrdest;

  00079	48 8b 45 08	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN3@Maklocwcs:

; 82   : }

  0007d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z PROC	; std::_Adl_verify_range<char *,char *>, COMDAT

; 1148 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1149 :     // check that [_First, _Last) forms an iterator range
; 1150 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1151 :         _Verify_range(_First, _Last);

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Last$[rbp]
  00024	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00027	48 8b 45 50	 mov	 rax, QWORD PTR _First$[rbp]
  0002b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002e	e8 00 00 00 00	 call	 ??$_Verify_range@D@std@@YAXQEBD0@Z ; std::_Verify_range<char>

; 1152 :     }
; 1153 : }

  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??$_Adl_verify_range@PEADPEAD@std@@YAXAEBQEAD0@Z ENDP	; std::_Adl_verify_range<char *,char *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 0
_Count1$ = 8
_Wchars$ = 16
_Ptr1$ = 24
_Bytes$ = 32
_Wc$ = 36
_Mbst1$ = 40
_Ptrdest$ = 48
_Ptrnext$ = 56
_Mbst2$ = 64
_Ptr$ = 176
__formal$ = 184
_Cvt$ = 192
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 543  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CC18A947_xlocale
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 544  :     // convert C string to wchar_t sequence using _Cvtvec
; 545  :     size_t _Count;
; 546  :     size_t _Count1;
; 547  :     size_t _Wchars;
; 548  :     const char* _Ptr1;
; 549  :     int _Bytes;
; 550  :     wchar_t _Wc;
; 551  :     mbstate_t _Mbst1 = {};

  00029	48 8d 45 28	 lea	 rax, QWORD PTR _Mbst1$[rbp]
  0002d	48 8b f8	 mov	 rdi, rax
  00030	33 c0		 xor	 eax, eax
  00032	b9 08 00 00 00	 mov	 ecx, 8
  00037	f3 aa		 rep stosb

; 552  : 
; 553  :     _Count1 = _CSTD strlen(_Ptr) + 1;

  00039	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00040	e8 00 00 00 00	 call	 strlen
  00045	48 ff c0	 inc	 rax
  00048	48 89 45 08	 mov	 QWORD PTR _Count1$[rbp], rax

; 554  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

  0004c	48 8b 45 08	 mov	 rax, QWORD PTR _Count1$[rbp]
  00050	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00054	48 c7 45 10 00
	00 00 00	 mov	 QWORD PTR _Wchars$[rbp], 0
  0005c	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00063	48 89 45 18	 mov	 QWORD PTR _Ptr1$[rbp], rax
  00067	eb 2f		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00069	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0006d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  0007b	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0007f	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr1$[rbp]
  00083	48 03 c8	 add	 rcx, rax
  00086	48 8b c1	 mov	 rax, rcx
  00089	48 89 45 18	 mov	 QWORD PTR _Ptr1$[rbp], rax
  0008d	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  00091	48 ff c0	 inc	 rax
  00094	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax
$LN4@Maklocstr:
  00098	48 83 7d 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  0009d	76 2e		 jbe	 SHORT $LN3@Maklocstr

; 555  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

  0009f	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Cvt$[rbp]
  000a6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ab	4c 8d 4d 28	 lea	 r9, QWORD PTR _Mbst1$[rbp]
  000af	4c 8b 45 00	 mov	 r8, QWORD PTR _Count$[rbp]
  000b3	48 8b 55 18	 mov	 rdx, QWORD PTR _Ptr1$[rbp]
  000b7	48 8d 4d 24	 lea	 rcx, QWORD PTR _Wc$[rbp]
  000bb	e8 00 00 00 00	 call	 _Mbrtowc
  000c0	89 45 20	 mov	 DWORD PTR _Bytes$[rbp], eax
  000c3	83 7d 20 00	 cmp	 DWORD PTR _Bytes$[rbp], 0
  000c7	7f 02		 jg	 SHORT $LN8@Maklocstr

; 556  :             break;

  000c9	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 557  :         }
; 558  :     }

  000cb	eb 9c		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 559  : 
; 560  :     ++_Wchars; // count terminating nul

  000cd	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  000d1	48 ff c0	 inc	 rax
  000d4	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax

; 561  : 
; 562  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  000d8	c7 44 24 20 32
	02 00 00	 mov	 DWORD PTR [rsp+32], 562	; 00000232H
  000e0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GA@KNHPFGML@C?3?2Program?5Files?2Microsoft?5Visu@
  000e7	41 b8 02 00 00
	00		 mov	 r8d, 2
  000ed	ba 02 00 00 00	 mov	 edx, 2
  000f2	48 8b 4d 10	 mov	 rcx, QWORD PTR _Wchars$[rbp]
  000f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  000fc	48 89 45 30	 mov	 QWORD PTR _Ptrdest$[rbp], rax

; 563  : 
; 564  :     if (!_Ptrdest) {

  00100	48 83 7d 30 00	 cmp	 QWORD PTR _Ptrdest$[rbp], 0
  00105	75 05		 jne	 SHORT $LN9@Maklocstr

; 565  :         _Xbad_alloc();

  00107	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 566  :     }
; 567  : 
; 568  :     wchar_t* _Ptrnext = _Ptrdest;

  0010c	48 8b 45 30	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
  00110	48 89 45 38	 mov	 QWORD PTR _Ptrnext$[rbp], rax

; 569  :     mbstate_t _Mbst2  = {};

  00114	48 8d 45 40	 lea	 rax, QWORD PTR _Mbst2$[rbp]
  00118	48 8b f8	 mov	 rdi, rax
  0011b	33 c0		 xor	 eax, eax
  0011d	b9 08 00 00 00	 mov	 ecx, 8
  00122	f3 aa		 rep stosb

; 570  : 
; 571  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

  00124	eb 41		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:
  00126	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0012a	48 8b 4d 00	 mov	 rcx, QWORD PTR _Count$[rbp]
  0012e	48 2b c8	 sub	 rcx, rax
  00131	48 8b c1	 mov	 rax, rcx
  00134	48 89 45 00	 mov	 QWORD PTR _Count$[rbp], rax
  00138	48 63 45 20	 movsxd	 rax, DWORD PTR _Bytes$[rbp]
  0013c	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00143	48 03 c8	 add	 rcx, rax
  00146	48 8b c1	 mov	 rax, rcx
  00149	48 89 85 b0 00
	00 00		 mov	 QWORD PTR _Ptr$[rbp], rax
  00150	48 8b 45 10	 mov	 rax, QWORD PTR _Wchars$[rbp]
  00154	48 ff c8	 dec	 rax
  00157	48 89 45 10	 mov	 QWORD PTR _Wchars$[rbp], rax
  0015b	48 8b 45 38	 mov	 rax, QWORD PTR _Ptrnext$[rbp]
  0015f	48 83 c0 02	 add	 rax, 2
  00163	48 89 45 38	 mov	 QWORD PTR _Ptrnext$[rbp], rax
$LN7@Maklocstr:
  00167	48 83 7d 10 00	 cmp	 QWORD PTR _Wchars$[rbp], 0
  0016c	76 31		 jbe	 SHORT $LN6@Maklocstr

; 572  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

  0016e	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Cvt$[rbp]
  00175	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0017a	4c 8d 4d 40	 lea	 r9, QWORD PTR _Mbst2$[rbp]
  0017e	4c 8b 45 08	 mov	 r8, QWORD PTR _Count1$[rbp]
  00182	48 8b 95 b0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00189	48 8b 4d 38	 mov	 rcx, QWORD PTR _Ptrnext$[rbp]
  0018d	e8 00 00 00 00	 call	 _Mbrtowc
  00192	89 45 20	 mov	 DWORD PTR _Bytes$[rbp], eax
  00195	83 7d 20 00	 cmp	 DWORD PTR _Bytes$[rbp], 0
  00199	7f 02		 jg	 SHORT $LN10@Maklocstr

; 573  :             break;

  0019b	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 574  :         }
; 575  :     }

  0019d	eb 87		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:

; 576  : 
; 577  :     *_Ptrnext = L'\0';

  0019f	33 c0		 xor	 eax, eax
  001a1	48 8b 4d 38	 mov	 rcx, QWORD PTR _Ptrnext$[rbp]
  001a5	66 89 01	 mov	 WORD PTR [rcx], ax

; 578  : 
; 579  :     return _Ptrdest;

  001a8	48 8b 45 30	 mov	 rax, QWORD PTR _Ptrdest$[rbp]
$LN11@Maklocstr:

; 580  : }

  001ac	48 8d a5 98 00
	00 00		 lea	 rsp, QWORD PTR [rbp+152]
  001b3	5f		 pop	 rdi
  001b4	5d		 pop	 rbp
  001b5	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Application\Application.h
;	COMDAT ?CmdShow@Application@@SAHXZ
_TEXT	SEGMENT
?CmdShow@Application@@SAHXZ PROC			; Application::CmdShow, COMDAT

; 39   : 	static INT32 CmdShow() { return _inst->nCmdShow; }

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__103905FF_Application@h
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_inst@Application@@0PEAV1@EA ; Application::_inst
  0001e	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00021	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?CmdShow@Application@@SAHXZ ENDP			; Application::CmdShow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Application\Application.h
;	COMDAT ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ PROC	; Application::GetInstance, COMDAT

; 38   : 	static HINSTANCE GetInstance() { return _inst->hInsance; }

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__103905FF_Application@h
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_inst@Application@@0PEAV1@EA ; Application::_inst
  0001e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00021	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ENDP	; Application::GetInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<FWindowsWindow *> >::_Vector_val<std::_Simple_types<FWindowsWindow *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<FWindowsWindow *> >::_Vector_val<std::_Simple_types<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal, COMDAT

; 2193 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2194 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first

; 2195 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
_TEXT	SEGMENT
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range, COMDAT

; 2174 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2175 :         // orphan iterators within specified (inclusive) range
; 2176 : #if _HAS_CXX20
; 2177 :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@Orphan_ran

; 2178 :             _Orphan_range_unlocked(_First, _Last);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_unlocked

; 2179 :         } else

  00042	eb 11		 jmp	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:

; 2180 : #endif // _HAS_CXX20
; 2181 :         {
; 2182 :             _Orphan_range_locked(_First, _Last);

  00044	4c 8b 45 60	 mov	 r8, QWORD PTR _Last$[rbp]
  00048	48 8b 55 58	 mov	 rdx, QWORD PTR _First$[rbp]
  0004c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked
$LN3@Orphan_ran:

; 2183 :         }
; 2184 :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked, COMDAT

; 2169 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2170 :         _Lockit _Lock(_LOCK_DEBUG);

  00025	ba 03 00 00 00	 mov	 edx, 3
  0002a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00034	90		 npad	 1

; 2171 :         _Orphan_range_unlocked(_First, _Last);

  00035	4c 8b 45 70	 mov	 r8, QWORD PTR _Last$[rbp]
  00039	48 8b 55 68	 mov	 rdx, QWORD PTR _First$[rbp]
  0003d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_unlocked
  00046	90		 npad	 1

; 2172 :     }

  00047	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00051	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 0
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA PROC ; `std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0000e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00014	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00018	5d		 pop	 rbp
  00019	c3		 ret	 0
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z@4HA ENDP ; `std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z
_TEXT	SEGMENT
_Pnext$ = 0
_Pnextptr$1 = 8
_Temp$2 = 16
this$ = 112
_First$ = 120
_Last$ = 128
?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_unlocked, COMDAT

; 2155 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2156 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00028	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 83 c0 08	 add	 rax, 8
  00033	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 2157 :         while (*_Pnext) {

  00037	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0003b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003f	74 5b		 je	 SHORT $LN3@Orphan_ran

; 2158 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00041	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0004c	48 89 45 08	 mov	 QWORD PTR _Pnextptr$1[rbp], rax

; 2159 :             const auto _Temp     = *_Pnext;

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 45 10	 mov	 QWORD PTR _Temp$2[rbp], rax

; 2160 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  0005b	48 8b 45 78	 mov	 rax, QWORD PTR _First$[rbp]
  0005f	48 39 45 08	 cmp	 QWORD PTR _Pnextptr$1[rbp], rax
  00063	72 0d		 jb	 SHORT $LN6@Orphan_ran
  00065	48 8b 45 08	 mov	 rax, QWORD PTR _Pnextptr$1[rbp]
  00069	48 39 85 80 00
	00 00		 cmp	 QWORD PTR _Last$[rbp], rax
  00070	73 0e		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2161 :                 _Pnext = &_Temp->_Mynextiter;

  00072	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00076	48 83 c0 08	 add	 rax, 8
  0007a	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 2162 :             } else { // orphan the iterator

  0007e	eb 1a		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2163 :                 _Temp->_Myproxy = nullptr;

  00080	48 8b 45 10	 mov	 rax, QWORD PTR _Temp$2[rbp]
  00084	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2164 :                 *_Pnext         = _Temp->_Mynextiter;

  0008b	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0008f	48 8b 4d 10	 mov	 rcx, QWORD PTR _Temp$2[rbp]
  00093	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00097	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN5@Orphan_ran:

; 2165 :             }
; 2166 :         }

  0009a	eb 9b		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 2167 :     }

  0009c	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000a0	5d		 pop	 rbp
  000a1	c3		 ret	 0
?_Orphan_range_unlocked@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Xlength, COMDAT

; 2146 :     [[noreturn]] static void _Xlength() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2147 :         _Xlength_error("vector too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 2148 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlength@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@CAXXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
_Newvec$ = 136
_Newsize$ = 144
_Newcapacity$ = 152
?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Change_array, COMDAT

; 2022 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2023 :         // orphan all iterators, discard old array, acquire new array
; 2024 :         auto& _Al         = _Getal();

  0002d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00039	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2025 :         auto& _My_data    = _Mypair._Myval2;

  0003d	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00044	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2026 :         pointer& _Myfirst = _My_data._Myfirst;

  00048	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2027 :         pointer& _Mylast  = _My_data._Mylast;

  00054	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2028 :         pointer& _Myend   = _My_data._Myend;

  00060	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00064	48 83 c0 18	 add	 rax, 24
  00068	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2029 : 
; 2030 :         _My_data._Orphan_all();

  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2031 : 
; 2032 :         if (_Myfirst) { // destroy and deallocate old array

  00075	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00079	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0007d	74 3f		 je	 SHORT $LN2@Change_arr

; 2033 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  0007f	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00083	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00087	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008a	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0008e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00091	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >

; 2034 :             _ASAN_VECTOR_REMOVE;
; 2035 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00096	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0009a	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0009e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 2b c1	 sub	 rax, rcx
  000a7	48 c1 f8 03	 sar	 rax, 3
  000ab	4c 8b c0	 mov	 r8, rax
  000ae	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b2	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000b5	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000b9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z ; std::allocator<FWindowsWindow *>::deallocate
$LN2@Change_arr:

; 2036 :         }
; 2037 : 
; 2038 :         _Myfirst = _Newvec;

  000be	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000c2	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000c9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 2039 :         _Mylast  = _Newvec + _Newsize;

  000cc	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000d3	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  000da	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000de	48 8b 4d 18	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  000e2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2040 :         _Myend   = _Newvec + _Newcapacity;

  000e5	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000ec	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Newcapacity$[rbp]
  000f3	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000f7	48 8b 4d 20	 mov	 rcx, QWORD PTR _Myend$[rbp]
  000fb	48 89 01	 mov	 QWORD PTR [rcx], rax

; 2041 :         _ASAN_VECTOR_CREATE;
; 2042 :     }

  000fe	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?_Change_array@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXQEAPEAVFWindowsWindow@@_K1@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 0
_Max$ = 8
_Geometric$ = 16
this$ = 112
_Newsize$ = 120
?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Calculate_growth, COMDAT

; 1970 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1971 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1972 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00027	e8 00 00 00 00	 call	 ?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::capacity
  0002c	48 89 45 00	 mov	 QWORD PTR _Oldcapacity$[rbp], rax

; 1973 :         const auto _Max              = max_size();

  00030	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::max_size
  00039	48 89 45 08	 mov	 QWORD PTR _Max$[rbp], rax

; 1974 : 
; 1975 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003d	33 d2		 xor	 edx, edx
  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00043	b9 02 00 00 00	 mov	 ecx, 2
  00048	48 f7 f1	 div	 rcx
  0004b	48 8b 4d 08	 mov	 rcx, QWORD PTR _Max$[rbp]
  0004f	48 2b c8	 sub	 rcx, rax
  00052	48 8b c1	 mov	 rax, rcx
  00055	48 39 45 00	 cmp	 QWORD PTR _Oldcapacity$[rbp], rax
  00059	76 06		 jbe	 SHORT $LN2@Calculate_

; 1976 :             return _Max; // geometric growth would overflow

  0005b	48 8b 45 08	 mov	 rax, QWORD PTR _Max$[rbp]
  0005f	eb 30		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1977 :         }
; 1978 : 
; 1979 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00061	33 d2		 xor	 edx, edx
  00063	48 8b 45 00	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00067	b9 02 00 00 00	 mov	 ecx, 2
  0006c	48 f7 f1	 div	 rcx
  0006f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Oldcapacity$[rbp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 89 45 10	 mov	 QWORD PTR _Geometric$[rbp], rax

; 1980 : 
; 1981 :         if (_Geometric < _Newsize) {

  0007d	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  00081	48 39 45 10	 cmp	 QWORD PTR _Geometric$[rbp], rax
  00085	73 06		 jae	 SHORT $LN3@Calculate_

; 1982 :             return _Newsize; // geometric growth would be insufficient

  00087	48 8b 45 78	 mov	 rax, QWORD PTR _Newsize$[rbp]
  0008b	eb 04		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1983 :         }
; 1984 : 
; 1985 :         return _Geometric; // geometric growth is sufficient

  0008d	48 8b 45 10	 mov	 rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1986 :     }

  00091	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
_Pos$ = 104
??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[], COMDAT

; 1891 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1892 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax
$LN4@operator:

; 1893 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1894 :         _STL_VERIFY(

  0002b	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00037	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003b	48 2b c1	 sub	 rax, rcx
  0003e	48 c1 f8 03	 sar	 rax, 3
  00042	48 39 45 68	 cmp	 QWORD PTR _Pos$[rbp], rax
  00046	73 02		 jae	 SHORT $LN7@operator
  00048	eb 6b		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00051	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	45 33 c9	 xor	 r9d, r9d
  00065	41 b8 67 07 00
	00		 mov	 r8d, 1895		; 00000767H
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  00072	b9 02 00 00 00	 mov	 ecx, 2
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN11@operator
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN11@operator:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 67 07 00
	00		 mov	 r9d, 1895		; 00000767H
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	75 95		 jne	 SHORT $LN7@operator
$LN9@operator:
  000b5	33 c0		 xor	 eax, eax
  000b7	85 c0		 test	 eax, eax
  000b9	0f 85 6c ff ff
	ff		 jne	 $LN4@operator

; 1895 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1896 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1897 : 
; 1898 :         return _My_data._Myfirst[_Pos];

  000bf	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  000c3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c7	48 8b 4d 68	 mov	 rcx, QWORD PTR _Pos$[rbp]
  000cb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 1899 :     }

  000cf	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000d3	5d		 pop	 rbp
  000d4	c3		 ret	 0
??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::capacity, COMDAT

; 1886 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1887 :         auto& _My_data = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1888 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0002f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00033	48 2b c1	 sub	 rax, rcx
  00036	48 c1 f8 03	 sar	 rax, 3

; 1889 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?capacity@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
this$ = 96
?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::max_size, COMDAT

; 1881 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1882 :         return (_STD min)(

  0001b	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAAEBV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::max_size
  0002c	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00030	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00035	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00039	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0003d	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00041	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00046	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1883 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1884 :     }

  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?max_size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 96
?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size, COMDAT

; 1876 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1877 :         auto& _My_data = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1878 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0002f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00033	48 2b c1	 sub	 rax, rcx
  00036	48 c1 f8 03	 sar	 rax, 3

; 1879 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 0
tv80 = 72
tv78 = 80
this$ = 112
__$ReturnUdt$ = 120
?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::begin, COMDAT

; 1803 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1804 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1805 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0002b	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
  00034	48 89 45 48	 mov	 QWORD PTR tv80[rbp], rax
  00038	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00040	48 89 45 50	 mov	 QWORD PTR tv78[rbp], rax
  00044	4c 8b 45 48	 mov	 r8, QWORD PTR tv80[rbp]
  00048	48 8b 55 50	 mov	 rdx, QWORD PTR tv78[rbp]
  0004c	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00050	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
  00055	48 8b 45 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1806 :     }

  00059	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
_Myfirst$ = 8
_Mylast$ = 16
tv82 = 88
tv84 = 96
tv80 = 104
this$ = 128
?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::clear, COMDAT

; 1770 :     _CONSTEXPR20 void clear() noexcept { // erase all

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1771 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00025	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 1772 :         pointer& _Myfirst = _My_data._Myfirst;

  00029	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 45 08	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1773 :         pointer& _Mylast  = _My_data._Mylast;

  00035	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00039	48 83 c0 10	 add	 rax, 16
  0003d	48 89 45 10	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1774 : 
; 1775 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

  00041	48 8b 45 08	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00045	48 8b 4d 10	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004f	75 02		 jne	 SHORT $LN2@clear

; 1776 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1777 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1778 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1779 :             return;

  00051	eb 4e		 jmp	 SHORT $LN1@clear
$LN2@clear:

; 1780 :         }
; 1781 : 
; 1782 :         _My_data._Orphan_all();

  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1783 :         _Destroy_range(_Myfirst, _Mylast, _Getal());

  0005c	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00063	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00068	48 89 45 58	 mov	 QWORD PTR tv82[rbp], rax
  0006c	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00070	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00073	48 89 45 60	 mov	 QWORD PTR tv84[rbp], rax
  00077	48 8b 45 08	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007e	48 89 45 68	 mov	 QWORD PTR tv80[rbp], rax
  00082	4c 8b 45 58	 mov	 r8, QWORD PTR tv82[rbp]
  00086	48 8b 55 60	 mov	 rdx, QWORD PTR tv84[rbp]
  0008a	48 8b 4d 68	 mov	 rcx, QWORD PTR tv80[rbp]
  0008e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@YAXPEAPEAVFWindowsWindow@@QEAPEAV1@AEAV?$allocator@PEAVFWindowsWindow@@@0@@Z ; std::_Destroy_range<std::allocator<FWindowsWindow *> >

; 1784 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1785 :         _Mylast = _Myfirst;

  00093	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00097	48 8b 4d 08	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0009b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009e	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@clear:

; 1786 :     }

  000a1	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000a5	5d		 pop	 rbp
  000a6	c3		 ret	 0
?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_Whereptr$ = 0
_My_data$ = 8
_Mylast$ = 16
tv150 = 88
tv74 = 88
tv148 = 96
this$ = 128
__$ReturnUdt$ = 136
_Where$ = 144
?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::erase, COMDAT

; 1726 :         is_nothrow_move_assignable_v<value_type>) /* strengthened */ {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1727 :         const pointer _Whereptr = _Where._Ptr;

  00028	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR _Where$[rbp]
  0002f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00033	48 89 45 00	 mov	 QWORD PTR _Whereptr$[rbp], rax

; 1728 :         auto& _My_data          = _Mypair._Myval2;

  00037	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1729 :         pointer& _Mylast        = _My_data._Mylast;

  00042	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00046	48 83 c0 10	 add	 rax, 16
  0004a	48 89 45 10	 mov	 QWORD PTR _Mylast$[rbp], rax
$LN4@erase:

; 1730 : 
; 1731 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1732 :         _STL_VERIFY(

  0004e	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005a	48 89 45 58	 mov	 QWORD PTR tv74[rbp], rax
  0005e	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00062	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
  00067	48 8b 4d 58	 mov	 rcx, QWORD PTR tv74[rbp]
  0006b	48 3b c8	 cmp	 rcx, rax
  0006e	75 1d		 jne	 SHORT $LN7@erase
  00070	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00074	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00078	48 39 45 00	 cmp	 QWORD PTR _Whereptr$[rbp], rax
  0007c	72 0f		 jb	 SHORT $LN7@erase
  0007e	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00082	48 8b 4d 00	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00086	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00089	76 02		 jbe	 SHORT $LN7@erase
  0008b	eb 6b		 jmp	 SHORT $LN9@erase
$LN7@erase:
  0008d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
  00094	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00099	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000a0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000a5	45 33 c9	 xor	 r9d, r9d
  000a8	41 b8 c6 06 00
	00		 mov	 r8d, 1734		; 000006c6H
  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0FP@IENHKCNK@C?3?2Program?5Files?2Microsoft?5Visu@
  000b5	b9 02 00 00 00	 mov	 ecx, 2
  000ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000c0	83 f8 01	 cmp	 eax, 1
  000c3	75 03		 jne	 SHORT $LN11@erase
  000c5	cc		 int	 3
  000c6	33 c0		 xor	 eax, eax
$LN11@erase:
  000c8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000d1	41 b9 c6 06 00
	00		 mov	 r9d, 1734		; 000006c6H
  000d7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1LO@DMIPLFD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000e5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
  000ec	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000f2	33 c0		 xor	 eax, eax
  000f4	85 c0		 test	 eax, eax
  000f6	75 95		 jne	 SHORT $LN7@erase
$LN9@erase:
  000f8	33 c0		 xor	 eax, eax
  000fa	85 c0		 test	 eax, eax
  000fc	0f 85 4c ff ff
	ff		 jne	 $LN4@erase

; 1733 :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Mylast > _Whereptr,
; 1734 :             "vector erase iterator outside range");
; 1735 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1736 : 
; 1737 :         _Orphan_range(_Whereptr, _Mylast);

  00102	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00106	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00109	48 8b 55 00	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0010d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00114	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEBAXPEAPEAVFWindowsWindow@@0@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Orphan_range

; 1738 :         _STD _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  00119	48 8b 45 00	 mov	 rax, QWORD PTR _Whereptr$[rbp]
  0011d	48 83 c0 08	 add	 rax, 8
  00121	4c 8b 45 00	 mov	 r8, QWORD PTR _Whereptr$[rbp]
  00125	48 8b 4d 10	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00129	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0012c	48 8b c8	 mov	 rcx, rax
  0012f	e8 00 00 00 00	 call	 ??$_Move_unchecked@PEAPEAVFWindowsWindow@@PEAPEAV1@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@00@Z ; std::_Move_unchecked<FWindowsWindow * *,FWindowsWindow * *>

; 1739 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Mylast - 1));

  00134	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00138	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0013b	48 83 e8 08	 sub	 rax, 8
  0013f	48 8b c8	 mov	 rcx, rax
  00142	e8 00 00 00 00	 call	 ??$_Unfancy@PEAVFWindowsWindow@@@std@@YAPEAPEAVFWindowsWindow@@PEAPEAV1@@Z ; std::_Unfancy<FWindowsWindow *>
  00147	48 89 45 58	 mov	 QWORD PTR tv150[rbp], rax
  0014b	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00152	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00157	48 89 45 60	 mov	 QWORD PTR tv148[rbp], rax
  0015b	48 8b 55 58	 mov	 rdx, QWORD PTR tv150[rbp]
  0015f	48 8b 4d 60	 mov	 rcx, QWORD PTR tv148[rbp]
  00163	e8 00 00 00 00	 call	 ??$destroy@PEAVFWindowsWindow@@@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SAXAEAV?$allocator@PEAVFWindowsWindow@@@1@QEAPEAVFWindowsWindow@@@Z ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::destroy<FWindowsWindow *>

; 1740 :         _ASAN_VECTOR_MODIFY(-1);
; 1741 :         --_Mylast;

  00168	48 8b 45 10	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0016c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016f	48 83 e8 08	 sub	 rax, 8
  00173	48 8b 4d 10	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00177	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1742 :         return iterator(_Whereptr, _STD addressof(_My_data));

  0017a	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0017e	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >
  00183	4c 8b c0	 mov	 r8, rax
  00186	48 8b 55 00	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0018a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00191	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@PEAPEAVFWindowsWindow@@PEBU_Container_base12@1@@Z
  00196	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0019d	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
  001a2	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1743 :     }

  001a9	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  001ad	5d		 pop	 rbp
  001ae	c3		 ret	 0
?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z
_TEXT	SEGMENT
this$ = 80
_Val$ = 88
?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::push_back, COMDAT

; 871  :     _CONSTEXPR20 void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 872  :         _Emplace_one_at_back(_Val);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Val$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Emplace_one_at_back@AEBQEAVFWindowsWindow@@@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAPEAVFWindowsWindow@@AEBQEAV2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Emplace_one_at_back<FWindowsWindow * const &>

; 873  :     }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S13$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::~vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S13$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><FWindowsWindow *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S13$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::~vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ PROC ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVFWindowsWindow@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1>::_Compressed_pair<std::allocator<FWindowsWindow *>,std::_Vector_val<std::_Simple_types<FWindowsWindow *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@AEAAAEAV?$allocator@PEAVFWindowsWindow@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAVFWindowsWindow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVFWindowsWindow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><FWindowsWindow *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@SA_KAEBV?$allocator@PEAVFWindowsWindow@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<FWindowsWindow *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z PROC ; std::allocator<FWindowsWindow *>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAPEAPEAVFWindowsWindow@@_K@Z ENDP ; std::allocator<FWindowsWindow *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z PROC ; std::allocator<FWindowsWindow *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAVFWindowsWindow@@@std@@QEAAXQEAPEAVFWindowsWindow@@_K@Z ENDP ; std::allocator<FWindowsWindow *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ PROC	; std::allocator<FWindowsWindow *>::allocator<FWindowsWindow *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAVFWindowsWindow@@@std@@QEAA@XZ ENDP	; std::allocator<FWindowsWindow *>::allocator<FWindowsWindow *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?SetDelay@FWindowsWindowManager@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 80
ms$ = 88
?SetDelay@FWindowsWindowManager@@QEAAXH@Z PROC		; FWindowsWindowManager::SetDelay, COMDAT

; 270  : {

$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 271  : 	//KillTimer(NULL, (UINT_PTR)hTimer);
; 272  : 	delay = ms;

  0001f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00023	8b 4d 58	 mov	 ecx, DWORD PTR ms$[rbp]
  00026	89 48 20	 mov	 DWORD PTR [rax+32], ecx

; 273  : 
; 274  : 	if (hTimer)

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00031	74 3c		 je	 SHORT $LN2@SetDelay

; 275  : 	{
; 276  : 		SetWaitableTimer(hTimer, &li, delay, NULL, NULL, FALSE);

  00033	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 83 c0 10	 add	 rax, 16
  0003b	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00043	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0004c	45 33 c9	 xor	 r9d, r9d
  0004f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00053	44 8b 41 20	 mov	 r8d, DWORD PTR [rcx+32]
  00057	48 8b d0	 mov	 rdx, rax
  0005a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWaitableTimer

; 277  : 		timerIsStarted = true;

  00067	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0006b	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1
$LN2@SetDelay:

; 278  : 	}
; 279  : }

  0006f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?SetDelay@FWindowsWindowManager@@QEAAXH@Z ENDP		; FWindowsWindowManager::SetDelay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Quit@FWindowsWindowManager@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 0
$T2 = 72
tv74 = 80
tv79 = 88
this$ = 112
?Quit@FWindowsWindowManager@@QEAAXXZ PROC		; FWindowsWindowManager::Quit, COMDAT

; 320  : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 321  : 	for (size_t i = 0; i < windows.size(); i++)

  0001e	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR i$1[rbp], 0
  00026	eb 0b		 jmp	 SHORT $LN4@Quit
$LN2@Quit:
  00028	48 8b 45 00	 mov	 rax, QWORD PTR i$1[rbp]
  0002c	48 ff c0	 inc	 rax
  0002f	48 89 45 00	 mov	 QWORD PTR i$1[rbp], rax
$LN4@Quit:
  00033	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 83 c0 28	 add	 rax, 40			; 00000028H
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
  00043	48 39 45 00	 cmp	 QWORD PTR i$1[rbp], rax
  00047	73 45		 jae	 SHORT $LN3@Quit

; 322  : 	{
; 323  : 		delete windows[i];

  00049	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00051	48 89 45 50	 mov	 QWORD PTR tv74[rbp], rax
  00055	48 8b 55 00	 mov	 rdx, QWORD PTR i$1[rbp]
  00059	48 8b 4d 50	 mov	 rcx, QWORD PTR tv74[rbp]
  0005d	e8 00 00 00 00	 call	 ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00069	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  0006e	74 14		 je	 SHORT $LN6@Quit
  00070	ba 01 00 00 00	 mov	 edx, 1
  00075	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00079	e8 00 00 00 00	 call	 ??_GFWindowsWindow@@QEAAPEAXI@Z
  0007e	48 89 45 58	 mov	 QWORD PTR tv79[rbp], rax
  00082	eb 08		 jmp	 SHORT $LN7@Quit
$LN6@Quit:
  00084	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv79[rbp], 0
$LN7@Quit:

; 324  : 	}

  0008c	eb 9a		 jmp	 SHORT $LN2@Quit
$LN3@Quit:

; 325  : 
; 326  : 
; 327  : 	windows.clear();

  0008e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00092	48 83 c0 28	 add	 rax, 40			; 00000028H
  00096	48 8b c8	 mov	 rcx, rax
  00099	e8 00 00 00 00	 call	 ?clear@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::clear

; 328  : 	KillTimer(NULL, (UINT_PTR)hTimer);

  0009e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a5	33 c9		 xor	 ecx, ecx
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_KillTimer

; 329  : 	timerIsStarted = false;

  000ad	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000b1	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 330  : 
; 331  : }

  000b5	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?Quit@FWindowsWindowManager@@QEAAXXZ ENDP		; FWindowsWindowManager::Quit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Destroy@FWindowsWindowManager@@QEAAXI@Z
_TEXT	SEGMENT
wnd$ = 0
$T1 = 72
$T2 = 80
$T3 = 104
$T4 = 112
$T5 = 136
$T6 = 160
tv87 = 184
tv78 = 184
tv70 = 184
tv135 = 192
tv83 = 192
tv156 = 200
tv144 = 208
tv158 = 216
tv160 = 224
this$ = 256
index$ = 264
?Destroy@FWindowsWindowManager@@QEAAXI@Z PROC		; FWindowsWindowManager::Destroy, COMDAT

; 308  : {

$LN9:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  0001d	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 309  : 	auto wnd = windows[index];

  00022	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00029	48 83 c0 28	 add	 rax, 40			; 00000028H
  0002d	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  00034	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR index$[rbp]
  0003a	8b d0		 mov	 edx, eax
  0003c	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  00043	e8 00 00 00 00	 call	 ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 45 00	 mov	 QWORD PTR wnd$[rbp], rax

; 310  : 
; 311  : 	wnd->Destroy();

  0004f	48 8b 4d 00	 mov	 rcx, QWORD PTR wnd$[rbp]
  00053	e8 00 00 00 00	 call	 ?Destroy@FWindowsWindow@@QEAAXXZ ; FWindowsWindow::Destroy

; 312  : 
; 313  : 
; 314  : 	delete windows[index];

  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00063	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0006a	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR index$[rbp]
  00070	8b d0		 mov	 edx, eax
  00072	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00079	e8 00 00 00 00	 call	 ??A?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAAEAPEAVFWindowsWindow@@_K@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::operator[]
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00085	48 83 7d 48 00	 cmp	 QWORD PTR $T1[rbp], 0
  0008a	74 17		 je	 SHORT $LN3@Destroy
  0008c	ba 01 00 00 00	 mov	 edx, 1
  00091	48 8b 4d 48	 mov	 rcx, QWORD PTR $T1[rbp]
  00095	e8 00 00 00 00	 call	 ??_GFWindowsWindow@@QEAAPEAXI@Z
  0009a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  000a1	eb 0b		 jmp	 SHORT $LN4@Destroy
$LN3@Destroy:
  000a3	48 c7 85 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv83[rbp], 0
$LN4@Destroy:

; 315  : 
; 316  : 	windows.erase(windows.begin() + index);

  000ae	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b5	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b9	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000c0	48 8d 45 50	 lea	 rax, QWORD PTR $T2[rbp]
  000c4	48 89 45 68	 mov	 QWORD PTR $T3[rbp], rax
  000c8	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cf	48 83 c0 28	 add	 rax, 40			; 00000028H
  000d3	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  000da	48 8d 55 70	 lea	 rdx, QWORD PTR $T4[rbp]
  000de	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv135[rbp]
  000e5	e8 00 00 00 00	 call	 ?begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::begin
  000ea	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv156[rbp], rax
  000f1	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv156[rbp]
  000f8	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv144[rbp], rax
  000ff	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR index$[rbp]
  00105	44 8b c0	 mov	 r8d, eax
  00108	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  0010f	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv144[rbp]
  00116	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<FWindowsWindow *> > >::operator+
  0011b	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv158[rbp], rax
  00122	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv158[rbp]
  00129	48 8b 4d 68	 mov	 rcx, QWORD PTR $T3[rbp]
  0012d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00132	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv160[rbp], rax
  00139	4c 8b 85 e0 00
	00 00		 mov	 r8, QWORD PTR tv160[rbp]
  00140	48 8d 95 a0 00
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  00147	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  0014e	e8 00 00 00 00	 call	 ?erase@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@2@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::erase
  00153	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  0015a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
  0015f	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00166	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ
  0016b	48 8d 4d 70	 lea	 rcx, QWORD PTR $T4[rbp]
  0016f	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVFWindowsWindow@@@std@@@std@@@std@@QEAA@XZ

; 317  : }

  00174	48 8d a5 f0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+240]
  0017b	5d		 pop	 rbp
  0017c	c3		 ret	 0
?Destroy@FWindowsWindowManager@@QEAAXI@Z ENDP		; FWindowsWindowManager::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Update@FWindowsWindowManager@@QEAAXXZ
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
this$ = 112
?Update@FWindowsWindowManager@@QEAAXXZ PROC		; FWindowsWindowManager::Update, COMDAT

; 235  : {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 236  : 	for (auto& i : windows)

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 83 c0 28	 add	 rax, 40			; 00000028H
  00026	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  0002a	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_begin
  00033	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  00037	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0003b	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAPEAPEAVFWindowsWindow@@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::_Unchecked_end
  00040	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  00044	eb 0c		 jmp	 SHORT $LN4@Update
$LN2@Update:
  00046	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0004a	48 83 c0 08	 add	 rax, 8
  0004e	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@Update:
  00052	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  00056	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  0005a	74 16		 je	 SHORT $LN3@Update
  0005c	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00060	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 237  : 	{
; 238  : 		i->Update();

  00064	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00068	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0006b	e8 00 00 00 00	 call	 ?Update@FWindowsWindow@@QEAAXXZ ; FWindowsWindow::Update

; 239  : 	}

  00070	eb d4		 jmp	 SHORT $LN2@Update
$LN3@Update:
$LN5@Update:

; 240  : 
; 241  : 
; 242  : 
; 243  : 
; 244  : 	while (PeekMessage(&msg, 0, 0, 0, PM_REMOVE))

  00072	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00076	48 83 c0 48	 add	 rax, 72			; 00000048H
  0007a	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  00082	45 33 c9	 xor	 r9d, r9d
  00085	45 33 c0	 xor	 r8d, r8d
  00088	33 d2		 xor	 edx, edx
  0008a	48 8b c8	 mov	 rcx, rax
  0008d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PeekMessageW
  00093	85 c0		 test	 eax, eax
  00095	74 3c		 je	 SHORT $LN6@Update

; 245  : 	{
; 246  : 		if (msg.message == WM_QUIT)

  00097	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0009b	83 78 50 12	 cmp	 DWORD PTR [rax+80], 18
  0009f	75 0e		 jne	 SHORT $LN7@Update

; 247  : 		{
; 248  : 			GEngine.Quit();

  000a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?GEngine@@3VDEngine@@A ; GEngine
  000a8	e8 00 00 00 00	 call	 ?Quit@DEngine@@QEAAXXZ	; DEngine::Quit

; 249  : 			return;

  000ad	eb 24		 jmp	 SHORT $LN1@Update
$LN7@Update:

; 250  : 		}
; 251  : 
; 252  : 
; 253  : 		TranslateMessage(&msg);

  000af	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000b3	48 83 c0 48	 add	 rax, 72			; 00000048H
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_TranslateMessage

; 254  : 		DispatchMessageW(&msg);

  000c0	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000c4	48 83 c0 48	 add	 rax, 72			; 00000048H
  000c8	48 8b c8	 mov	 rcx, rax
  000cb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DispatchMessageW

; 255  : 
; 256  : 	}

  000d1	eb 9f		 jmp	 SHORT $LN5@Update
$LN6@Update:
$LN1@Update:

; 257  : 
; 258  : 	//if (timerIsStarted)
; 259  : 	//{
; 260  : 	//	//WaitForSingleObject(&hTimer, INFINITE);
; 261  : 	//	WaitForMultipleObjects(1, &hTimer, TRUE, INFINITE);
; 262  : 	//}
; 263  : 
; 264  : 	//MsgWaitForMultipleObjects(1, &hTimer, TRUE, INFINITE, QS_ALLEVENTS);
; 265  : 
; 266  : }

  000d3	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000d7	5d		 pop	 rbp
  000d8	c3		 ret	 0
?Update@FWindowsWindowManager@@QEAAXXZ ENDP		; FWindowsWindowManager::Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
window$ = 0
$T1 = 72
$T2 = 80
$T3 = 88
$T4 = 128
$T5 = 136
$T6 = 176
tv161 = 184
tv151 = 184
tv83 = 184
tv157 = 192
tv84 = 192
tv139 = 200
tv137 = 208
tv159 = 216
tv145 = 224
this$ = 256
Weight$ = 264
Height$ = 272
Name$ = 280
?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; FWindowsWindowManager::CreateWindow, COMDAT

; 222  : {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec 30 01
	00 00		 sub	 rsp, 304		; 00000130H
  0001b	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 223  : 	FWindowsWindow* window = new FWindowsWindow(this, (UINT)windows.size());

  0002c	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  00031	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00036	48 89 45 50	 mov	 QWORD PTR $T2[rbp], rax
  0003a	48 83 7d 50 00	 cmp	 QWORD PTR $T2[rbp], 0
  0003f	74 39		 je	 SHORT $LN3@CreateWind
  00041	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 83 c0 28	 add	 rax, 40			; 00000028H
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
  00054	89 85 b8 00 00
	00		 mov	 DWORD PTR tv83[rbp], eax
  0005a	44 8b 85 b8 00
	00 00		 mov	 r8d, DWORD PTR tv83[rbp]
  00061	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00068	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  0006c	e8 00 00 00 00	 call	 ??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z ; FWindowsWindow::FWindowsWindow
  00071	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00078	eb 0b		 jmp	 SHORT $LN4@CreateWind
$LN3@CreateWind:
  0007a	48 c7 85 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv84[rbp], 0
$LN4@CreateWind:
  00085	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv84[rbp]
  0008c	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00090	48 8b 45 48	 mov	 rax, QWORD PTR $T1[rbp]
  00094	48 89 45 00	 mov	 QWORD PTR window$[rbp], rax

; 224  : 
; 225  : 	window->Create(Weight, Height, 0, 0, Name + to_string(windows.size()), NULL);

  00098	48 8d 45 58	 lea	 rax, QWORD PTR $T3[rbp]
  0009c	48 89 85 80 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000a3	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000aa	48 83 c0 28	 add	 rax, 40			; 00000028H
  000ae	48 8b c8	 mov	 rcx, rax
  000b1	e8 00 00 00 00	 call	 ?size@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEBA_KXZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::size
  000b6	48 8b d0	 mov	 rdx, rax
  000b9	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000c0	e8 00 00 00 00	 call	 ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::to_string
  000c5	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv161[rbp], rax
  000cc	48 8b 85 b8 00
	00 00		 mov	 rax, QWORD PTR tv161[rbp]
  000d3	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv157[rbp], rax
  000da	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv157[rbp]
  000e1	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv139[rbp], rax
  000e8	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR Name$[rbp]
  000ef	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000f6	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv139[rbp]
  000fd	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv137[rbp]
  00104	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR $T4[rbp]
  0010b	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@$$QEAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00110	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv159[rbp], rax
  00117	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv159[rbp]
  0011e	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv145[rbp], rax
  00125	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  0012e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR tv145[rbp]
  00135	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0013a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00142	45 33 c9	 xor	 r9d, r9d
  00145	44 8b 85 10 01
	00 00		 mov	 r8d, DWORD PTR Height$[rbp]
  0014c	8b 95 08 01 00
	00		 mov	 edx, DWORD PTR Weight$[rbp]
  00152	48 8b 4d 00	 mov	 rcx, QWORD PTR window$[rbp]
  00156	e8 00 00 00 00	 call	 ?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z ; FWindowsWindow::Create
  0015b	90		 npad	 1
  0015c	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00163	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 226  : 
; 227  : 	windows.push_back(window);

  00168	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0016f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00173	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv151[rbp], rax
  0017a	48 8d 55 00	 lea	 rdx, QWORD PTR window$[rbp]
  0017e	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR tv151[rbp]
  00185	e8 00 00 00 00	 call	 ?push_back@?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAAXAEBQEAVFWindowsWindow@@@Z ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::push_back

; 228  : 
; 229  : 
; 230  : 	return window;

  0018a	48 8b 45 00	 mov	 rax, QWORD PTR window$[rbp]
  0018e	48 89 85 b0 00
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00195	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR Name$[rbp]
  0019c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a1	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR $T6[rbp]

; 231  : 
; 232  : }

  001a8	48 8d a5 f0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+240]
  001af	5d		 pop	 rbp
  001b0	c3		 ret	 0
?CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; FWindowsWindowManager::CreateWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
window$ = 0
$T1 = 72
$T2 = 80
$T3 = 88
$T4 = 128
$T5 = 136
$T6 = 176
tv161 = 184
tv151 = 184
tv83 = 184
tv157 = 192
tv84 = 192
tv139 = 200
tv137 = 208
tv159 = 216
tv145 = 224
this$ = 256
Weight$ = 264
Height$ = 272
Name$ = 280
?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR Name$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
window$ = 0
$T1 = 72
$T2 = 80
$T3 = 88
$T4 = 128
$T5 = 136
$T6 = 176
tv161 = 184
tv151 = 184
tv83 = 184
tv157 = 192
tv84 = 192
tv139 = 200
tv137 = 208
tv159 = 216
tv145 = 224
this$ = 256
Weight$ = 264
Height$ = 272
Name$ = 280
?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	ba b0 00 00 00	 mov	 edx, 176		; 000000b0H
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$1@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
window$ = 0
$T1 = 72
$T2 = 80
$T3 = 88
$T4 = 128
$T5 = 136
$T6 = 176
tv161 = 184
tv151 = 184
tv83 = 184
tv157 = 192
tv84 = 192
tv139 = 200
tv137 = 208
tv159 = 216
tv145 = 224
this$ = 256
Weight$ = 264
Height$ = 272
Name$ = 280
?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  0000a	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$2@?0??CreateWindow@FWindowsWindowManager@@QEAAPEAVFWindowsWindow@@IIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `FWindowsWindowManager::CreateWindow'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ??1FWindowsWindowManager@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1FWindowsWindowManager@@QEAA@XZ PROC			; FWindowsWindowManager::~FWindowsWindowManager, COMDAT

; 335  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 336  : 	Quit();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?Quit@FWindowsWindowManager@@QEAAXXZ ; FWindowsWindowManager::Quit

; 337  : 
; 338  : }

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 28	 add	 rax, 40			; 00000028H
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??1?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::~vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >
  00034	90		 npad	 1
  00035	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00039	5d		 pop	 rbp
  0003a	c3		 ret	 0
??1FWindowsWindowManager@@QEAA@XZ ENDP			; FWindowsWindowManager::~FWindowsWindowManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ??0FWindowsWindowManager@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0FWindowsWindowManager@@QEAA@XZ PROC			; FWindowsWindowManager::FWindowsWindowManager, COMDAT

; 284  : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h

; 106  : 	bool timerIsStarted = false;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp

; 284  : {

  00023	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 83 c0 28	 add	 rax, 40			; 00000028H
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??0?$vector@PEAVFWindowsWindow@@V?$allocator@PEAVFWindowsWindow@@@std@@@std@@QEAA@XZ ; std::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >::vector<FWindowsWindow *,std::allocator<FWindowsWindow *> >

; 285  : 	hTimer = CreateWaitableTimer(NULL, FALSE, NULL);

  00033	45 33 c0	 xor	 r8d, r8d
  00036	33 d2		 xor	 edx, edx
  00038	33 c9		 xor	 ecx, ecx
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateWaitableTimerW
  00040	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00044	48 89 01	 mov	 QWORD PTR [rcx], rax

; 286  : 
; 287  : 	li.QuadPart = 0;

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 288  : 
; 289  : 	delay = 1;

  00053	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00057	c7 40 20 01 00
	00 00		 mov	 DWORD PTR [rax+32], 1

; 290  : 
; 291  : 
; 292  : 	if (hTimer)

  0005e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 293  : 	{
; 294  : 		//SetWaitableTimer(hTimer, &li, delay, NULL, NULL, FALSE);
; 295  : 	}
; 296  : 
; 297  : }

  00062	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00066	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0FWindowsWindowManager@@QEAA@XZ ENDP			; FWindowsWindowManager::FWindowsWindowManager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GFWindowsWindow@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_GFWindowsWindow@@QEAAPEAXI@Z PROC			; FWindowsWindow::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1FWindowsWindow@@QEAA@XZ ; FWindowsWindow::~FWindowsWindow
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba b0 00 00 00	 mov	 edx, 176		; 000000b0H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_GFWindowsWindow@@QEAAPEAXI@Z ENDP			; FWindowsWindow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
pThis$ = 0
width$1 = 8
height$2 = 12
tv132 = 80
tv67 = 80
hwnd$ = 112
msg$ = 120
wParam$ = 128
lParam$ = 136
?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z PROC	; FWindowsWindow::WndProc, COMDAT

; 183  : {

$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 184  : 	FWindowsWindow* pThis = reinterpret_cast<FWindowsWindow*>(GetWindowLongPtr(hwnd, GWLP_USERDATA));

  0002c	ba eb ff ff ff	 mov	 edx, -21
  00031	48 8b 4d 70	 mov	 rcx, QWORD PTR hwnd$[rbp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowLongPtrW
  0003b	48 89 45 00	 mov	 QWORD PTR pThis$[rbp], rax

; 185  : 
; 186  : 	FInputCore::InputProc(hwnd, msg, wParam, lParam);

  0003f	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR lParam$[rbp]
  00046	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR wParam$[rbp]
  0004d	8b 55 78	 mov	 edx, DWORD PTR msg$[rbp]
  00050	48 8b 4d 70	 mov	 rcx, QWORD PTR hwnd$[rbp]
  00054	e8 00 00 00 00	 call	 ?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z ; FInputCore::InputProc

; 187  : 
; 188  : 	switch (msg)

  00059	8b 45 78	 mov	 eax, DWORD PTR msg$[rbp]
  0005c	89 45 50	 mov	 DWORD PTR tv67[rbp], eax
  0005f	83 7d 50 01	 cmp	 DWORD PTR tv67[rbp], 1
  00063	74 17		 je	 SHORT $LN4@WndProc
  00065	83 7d 50 02	 cmp	 DWORD PTR tv67[rbp], 2
  00069	74 4c		 je	 SHORT $LN5@WndProc
  0006b	83 7d 50 05	 cmp	 DWORD PTR tv67[rbp], 5
  0006f	74 78		 je	 SHORT $LN7@WndProc
  00071	83 7d 50 10	 cmp	 DWORD PTR tv67[rbp], 16
  00075	74 67		 je	 SHORT $LN6@WndProc
  00077	e9 b5 00 00 00	 jmp	 $LN8@WndProc
$LN4@WndProc:

; 189  : 	{
; 190  : 	case WM_CREATE:
; 191  : 		SetCursor(LoadCursor(NULL, IDC_ARROW));

  0007c	ba 00 7f 00 00	 mov	 edx, 32512		; 00007f00H
  00081	33 c9		 xor	 ecx, ecx
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadCursorW
  00089	48 8b c8	 mov	 rcx, rax
  0008c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetCursor

; 192  : 		return DefWindowProcW(hwnd, msg, wParam, lParam);

  00092	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR lParam$[rbp]
  00099	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR wParam$[rbp]
  000a0	8b 55 78	 mov	 edx, DWORD PTR msg$[rbp]
  000a3	48 8b 4d 70	 mov	 rcx, QWORD PTR hwnd$[rbp]
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  000ad	e9 9e 00 00 00	 jmp	 $LN1@WndProc

; 193  : 		break;

  000b2	e9 97 00 00 00	 jmp	 $LN2@WndProc
$LN5@WndProc:

; 194  : 	case WM_DESTROY:
; 195  : 	{
; 196  : 		PostQuitMessage(0);

  000b7	33 c9		 xor	 ecx, ecx
  000b9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PostQuitMessage

; 197  : 		return DefWindowProcW(hwnd, msg, wParam, lParam);

  000bf	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR lParam$[rbp]
  000c6	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR wParam$[rbp]
  000cd	8b 55 78	 mov	 edx, DWORD PTR msg$[rbp]
  000d0	48 8b 4d 70	 mov	 rcx, QWORD PTR hwnd$[rbp]
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  000da	eb 74		 jmp	 SHORT $LN1@WndProc

; 198  : 		break;

  000dc	eb 70		 jmp	 SHORT $LN2@WndProc
$LN6@WndProc:

; 199  : 	}
; 200  : 
; 201  : 	case WM_CLOSE:
; 202  : 		pThis->Destroy();

  000de	48 8b 4d 00	 mov	 rcx, QWORD PTR pThis$[rbp]
  000e2	e8 00 00 00 00	 call	 ?Destroy@FWindowsWindow@@QEAAXXZ ; FWindowsWindow::Destroy

; 203  : 		break;

  000e7	eb 65		 jmp	 SHORT $LN2@WndProc
$LN7@WndProc:

; 204  : 
; 205  : 	case WM_SIZE:
; 206  : 	{
; 207  : 		UINT width = LOWORD(lParam);

  000e9	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR lParam$[rbp]
  000f0	48 25 ff ff 00
	00		 and	 rax, 65535		; 0000ffffH
  000f6	0f b7 c0	 movzx	 eax, ax
  000f9	89 45 08	 mov	 DWORD PTR width$1[rbp], eax

; 208  : 		UINT height = HIWORD(lParam);

  000fc	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR lParam$[rbp]
  00103	48 c1 e8 10	 shr	 rax, 16
  00107	48 25 ff ff 00
	00		 and	 rax, 65535		; 0000ffffH
  0010d	0f b7 c0	 movzx	 eax, ax
  00110	89 45 0c	 mov	 DWORD PTR height$2[rbp], eax

; 209  : 		pThis->onResizeWindow.BroadCast(width, height);

  00113	48 8b 45 00	 mov	 rax, QWORD PTR pThis$[rbp]
  00117	48 83 c0 08	 add	 rax, 8
  0011b	48 89 45 50	 mov	 QWORD PTR tv132[rbp], rax
  0011f	44 8b 45 0c	 mov	 r8d, DWORD PTR height$2[rbp]
  00123	8b 55 08	 mov	 edx, DWORD PTR width$1[rbp]
  00126	48 8b 4d 50	 mov	 rcx, QWORD PTR tv132[rbp]
  0012a	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z ; TMultiCastDelegate<void,long,long>::BroadCast

; 210  : 		break;

  0012f	eb 1d		 jmp	 SHORT $LN2@WndProc
$LN8@WndProc:

; 211  : 	}
; 212  : 
; 213  : 	default:
; 214  : 		return DefWindowProcW(hwnd, msg, wParam, lParam);

  00131	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR lParam$[rbp]
  00138	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR wParam$[rbp]
  0013f	8b 55 78	 mov	 edx, DWORD PTR msg$[rbp]
  00142	48 8b 4d 70	 mov	 rcx, QWORD PTR hwnd$[rbp]
  00146	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  0014c	eb 02		 jmp	 SHORT $LN1@WndProc
$LN2@WndProc:

; 215  : 		break;
; 216  : 	}
; 217  : 
; 218  : 	return 0;

  0014e	33 c0		 xor	 eax, eax
$LN1@WndProc:

; 219  : }

  00150	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00154	5d		 pop	 rbp
  00155	c3		 ret	 0
?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z ENDP	; FWindowsWindow::WndProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
this$ = 112
?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ PROC	; TMultiCastDelegate<void>::BroadCast, COMDAT

; 165  : 	{

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  : 		for (auto& i : *containers)

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00025	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00029	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0002d	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
  00032	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  00036	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0003a	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
  0003f	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  00043	eb 0c		 jmp	 SHORT $LN4@BroadCast
$LN2@BroadCast:
  00045	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00049	48 83 c0 08	 add	 rax, 8
  0004d	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BroadCast:
  00051	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  00055	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00059	74 1d		 je	 SHORT $LN3@BroadCast
  0005b	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0005f	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 167  : 		{
; 168  : 			i->Call(params...);

  00063	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 8b 4d 18	 mov	 rcx, QWORD PTR i$4[rbp]
  0006e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	ff 10		 call	 QWORD PTR [rax]

; 165  : 	{

  00076	eb cd		 jmp	 SHORT $LN2@BroadCast
$LN3@BroadCast:

; 169  : 		}
; 170  : 
; 171  : 	}

  00078	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ENDP	; TMultiCastDelegate<void>::BroadCast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@X$$V@@QEAA@XZ PROC		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ENDP		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@X$$V@@QEAA@XZ PROC		; TMultiCastDelegate<void>::TMultiCastDelegate<void>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ENDP		; TMultiCastDelegate<void>::TMultiCastDelegate<void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
tv79 = 96
tv81 = 104
this$ = 128
<params_0>$ = 136
<params_1>$ = 144
?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z PROC	; TMultiCastDelegate<void,long,long>::BroadCast, COMDAT

; 165  : 	{

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00016	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  : 		for (auto& i : *containers)

  00027	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00035	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00039	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_begin
  0003e	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  00042	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00046	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XJJ@@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::_Unchecked_end
  0004b	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  0004f	eb 0c		 jmp	 SHORT $LN4@BroadCast
$LN2@BroadCast:
  00051	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00055	48 83 c0 08	 add	 rax, 8
  00059	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BroadCast:
  0005d	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  00061	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00065	74 3a		 je	 SHORT $LN3@BroadCast
  00067	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0006b	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 167  : 		{
; 168  : 			i->Call(params...);

  0006f	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00076	48 89 45 60	 mov	 QWORD PTR tv79[rbp], rax
  0007a	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00084	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00087	48 89 45 68	 mov	 QWORD PTR tv81[rbp], rax
  0008b	44 8b 85 90 00
	00 00		 mov	 r8d, DWORD PTR <params_1>$[rbp]
  00092	8b 95 88 00 00
	00		 mov	 edx, DWORD PTR <params_0>$[rbp]
  00098	48 8b 4d 60	 mov	 rcx, QWORD PTR tv79[rbp]
  0009c	ff 55 68	 call	 QWORD PTR tv81[rbp]

; 165  : 	{

  0009f	eb b0		 jmp	 SHORT $LN2@BroadCast
$LN3@BroadCast:

; 169  : 		}
; 170  : 
; 171  : 	}

  000a1	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000a5	5d		 pop	 rbp
  000a6	c3		 ret	 0
?BroadCast@?$TMultiCastDelegate@XJJ@@QEAAXJJ@Z ENDP	; TMultiCastDelegate<void,long,long>::BroadCast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@XJJ@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@XJJ@@QEAA@XZ PROC		; TMultiCastDelegate<void,long,long>::~TMultiCastDelegate<void,long,long>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@XJJ@@QEAA@XZ ENDP		; TMultiCastDelegate<void,long,long>::~TMultiCastDelegate<void,long,long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@XJJ@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@XJJ@@QEAA@XZ PROC		; TMultiCastDelegate<void,long,long>::TMultiCastDelegate<void,long,long>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@XJJ@@V?$allocator@PEAV?$IIContainer@XJJ@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >::vector<IIContainer<void,long,long> *,std::allocator<IIContainer<void,long,long> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@XJJ@@QEAA@XZ ENDP		; TMultiCastDelegate<void,long,long>::TMultiCastDelegate<void,long,long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 104
$T3 = 112
$T4 = 136
$T5 = 144
$T6 = 168
tv94 = 176
tv141 = 184
tv84 = 192
tv143 = 200
tv92 = 208
tv145 = 216
tv138 = 224
tv136 = 232
this$ = 256
str$ = 264
?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; FWindowsWindow::SetWindowTitle, COMDAT

; 173  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 174  : 	SetWindowText(m_Wnd, strw(str).c_str());

  00023	48 8d 4d 68	 lea	 rcx, QWORD PTR $T2[rbp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  0002c	48 89 85 b0 00
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  00033	48 8d 45 70	 lea	 rax, QWORD PTR $T3[rbp]
  00037	48 89 85 88 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  0003e	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR $T4[rbp]
  00045	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  0004c	e8 00 00 00 00	 call	 ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
  00051	48 89 85 b8 00
	00 00		 mov	 QWORD PTR tv141[rbp], rax
  00058	48 8b 85 b8 00
	00 00		 mov	 rax, QWORD PTR tv141[rbp]
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00066	48 8d 85 90 00
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  0006d	48 89 85 a8 00
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00074	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR $T6[rbp]
  0007b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  00082	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  00087	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv143[rbp], rax
  0008e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv143[rbp]
  00095	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv92[rbp], rax
  0009c	4c 8b 8d b0 00
	00 00		 mov	 r9, QWORD PTR tv94[rbp]
  000a3	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv84[rbp]
  000aa	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv92[rbp]
  000b1	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  000b5	e8 00 00 00 00	 call	 ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
  000ba	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv145[rbp], rax
  000c1	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv145[rbp]
  000c8	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000cd	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv138[rbp], rax
  000d4	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000db	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  000df	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  000e6	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv138[rbp]
  000ed	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR tv136[rbp]
  000f4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowTextW
  000fa	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  000fe	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00103	90		 npad	 1

; 175  : }

  00104	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  0010b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00110	48 8d a5 f0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+240]
  00117	5d		 pop	 rbp
  00118	c3		 ret	 0
?SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; FWindowsWindow::SetWindowTitle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 104
$T3 = 112
$T4 = 136
$T5 = 144
$T6 = 168
tv94 = 176
tv141 = 184
tv84 = 192
tv143 = 200
tv92 = 208
tv145 = 216
tv138 = 224
tv136 = 232
this$ = 256
str$ = 264
?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `FWindowsWindow::SetWindowTitle'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR str$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0??SetWindowTitle@FWindowsWindow@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `FWindowsWindow::SetWindowTitle'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?isClose@FWindowsWindow@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 80
?isClose@FWindowsWindow@@QEAA_NXZ PROC			; FWindowsWindow::isClose, COMDAT

; 178  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  : 	return m_Close;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	0f b6 80 a8 00
	00 00		 movzx	 eax, BYTE PTR [rax+168]

; 180  : }

  00026	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?isClose@FWindowsWindow@@QEAA_NXZ ENDP			; FWindowsWindow::isClose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?SetResPos@FWindowsWindow@@QEAAXIIII@Z
_TEXT	SEGMENT
this$ = 80
w$ = 88
h$ = 96
x$ = 104
y$ = 112
?SetResPos@FWindowsWindow@@QEAAXIIII@Z PROC		; FWindowsWindow::SetResPos, COMDAT

; 163  : {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001b	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 164  : 	leftX = x;

  0002c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00030	8b 4d 68	 mov	 ecx, DWORD PTR x$[rbp]
  00033	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 165  : 	topY = y;

  00036	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003a	8b 4d 70	 mov	 ecx, DWORD PTR y$[rbp]
  0003d	89 48 3c	 mov	 DWORD PTR [rax+60], ecx

; 166  : 	width = w;

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	8b 4d 58	 mov	 ecx, DWORD PTR w$[rbp]
  00047	89 48 30	 mov	 DWORD PTR [rax+48], ecx

; 167  : 	height = h;

  0004a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004e	8b 4d 60	 mov	 ecx, DWORD PTR h$[rbp]
  00051	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 168  : 
; 169  : 	SetWindowPos(m_Wnd, NULL, x, y, w, h, NULL);

  00054	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  0005c	8b 45 60	 mov	 eax, DWORD PTR h$[rbp]
  0005f	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00063	8b 45 58	 mov	 eax, DWORD PTR w$[rbp]
  00066	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0006a	44 8b 4d 70	 mov	 r9d, DWORD PTR y$[rbp]
  0006e	44 8b 45 68	 mov	 r8d, DWORD PTR x$[rbp]
  00072	33 d2		 xor	 edx, edx
  00074	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowPos

; 170  : }

  00082	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
?SetResPos@FWindowsWindow@@QEAAXIIII@Z ENDP		; FWindowsWindow::SetResPos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?SetPos@FWindowsWindow@@QEAAXII@Z
_TEXT	SEGMENT
this$ = 80
x$ = 88
y$ = 96
?SetPos@FWindowsWindow@@QEAAXII@Z PROC			; FWindowsWindow::SetPos, COMDAT

; 154  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00016	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  : 	leftX = x;

  00027	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002b	8b 4d 58	 mov	 ecx, DWORD PTR x$[rbp]
  0002e	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 156  : 	topY = y;

  00031	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00035	8b 4d 60	 mov	 ecx, DWORD PTR y$[rbp]
  00038	89 48 3c	 mov	 DWORD PTR [rax+60], ecx

; 157  : 
; 158  : 	SetWindowPos(m_Wnd, NULL, x, y, width, height, NULL);

  0003b	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00043	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00047	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  0004a	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  0004e	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00052	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00055	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00059	44 8b 4d 60	 mov	 r9d, DWORD PTR y$[rbp]
  0005d	44 8b 45 58	 mov	 r8d, DWORD PTR x$[rbp]
  00061	33 d2		 xor	 edx, edx
  00063	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowPos

; 159  : 
; 160  : }

  00071	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?SetPos@FWindowsWindow@@QEAAXII@Z ENDP			; FWindowsWindow::SetPos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?SetResolution@FWindowsWindow@@QEAAXII@Z
_TEXT	SEGMENT
this$ = 80
w$ = 88
h$ = 96
?SetResolution@FWindowsWindow@@QEAAXII@Z PROC		; FWindowsWindow::SetResolution, COMDAT

; 145  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00016	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 146  : 	width = w;

  00027	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002b	8b 4d 58	 mov	 ecx, DWORD PTR w$[rbp]
  0002e	89 48 30	 mov	 DWORD PTR [rax+48], ecx

; 147  : 	height = h;

  00031	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00035	8b 4d 60	 mov	 ecx, DWORD PTR h$[rbp]
  00038	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 148  : 
; 149  : 	SetWindowPos(m_Wnd, NULL, leftX, topY, w, h, NULL);

  0003b	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  00043	8b 45 60	 mov	 eax, DWORD PTR h$[rbp]
  00046	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  0004a	8b 45 58	 mov	 eax, DWORD PTR w$[rbp]
  0004d	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00051	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00055	44 8b 48 3c	 mov	 r9d, DWORD PTR [rax+60]
  00059	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005d	44 8b 40 38	 mov	 r8d, DWORD PTR [rax+56]
  00061	33 d2		 xor	 edx, edx
  00063	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowPos

; 150  : 
; 151  : }

  00071	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?SetResolution@FWindowsWindow@@QEAAXII@Z ENDP		; FWindowsWindow::SetResolution
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Update@FWindowsWindow@@QEAAXXZ
_TEXT	SEGMENT
rect$ = 0
this$ = 96
?Update@FWindowsWindow@@QEAAXXZ PROC			; FWindowsWindow::Update, COMDAT

; 115  : {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 116  : 	if (!IsWindow(m_Wnd))

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_IsWindow
  00029	85 c0		 test	 eax, eax
  0002b	75 0d		 jne	 SHORT $LN2@Update

; 117  : 	{
; 118  : 		m_Close = true;

  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 119  : 
; 120  : 		return;

  00038	eb 6e		 jmp	 SHORT $LN1@Update
$LN2@Update:

; 121  : 	}
; 122  : 
; 123  : 	RECT rect;
; 124  : 
; 125  : 	GetWindowRect(m_Wnd, &rect);

  0003a	48 8d 55 00	 lea	 rdx, QWORD PTR rect$[rbp]
  0003e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00046	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowRect

; 126  : 
; 127  : 	leftX = rect.left;

  0004c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00050	8b 4d 00	 mov	 ecx, DWORD PTR rect$[rbp]
  00053	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 128  : 	topY = rect.top;

  00056	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005a	8b 4d 04	 mov	 ecx, DWORD PTR rect$[rbp+4]
  0005d	89 48 3c	 mov	 DWORD PTR [rax+60], ecx

; 129  : 
; 130  : 
; 131  : 	if (!(width == rect.right - rect.left || height == rect.bottom - rect.top))

  00060	8b 45 00	 mov	 eax, DWORD PTR rect$[rbp]
  00063	8b 4d 08	 mov	 ecx, DWORD PTR rect$[rbp+8]
  00066	2b c8		 sub	 ecx, eax
  00068	8b c1		 mov	 eax, ecx
  0006a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0006e	39 41 30	 cmp	 DWORD PTR [rcx+48], eax
  00071	74 35		 je	 SHORT $LN3@Update
  00073	8b 45 04	 mov	 eax, DWORD PTR rect$[rbp+4]
  00076	8b 4d 0c	 mov	 ecx, DWORD PTR rect$[rbp+12]
  00079	2b c8		 sub	 ecx, eax
  0007b	8b c1		 mov	 eax, ecx
  0007d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00081	39 41 34	 cmp	 DWORD PTR [rcx+52], eax
  00084	74 22		 je	 SHORT $LN3@Update

; 132  : 	{
; 133  : 		width = rect.right - rect.left;

  00086	8b 45 00	 mov	 eax, DWORD PTR rect$[rbp]
  00089	8b 4d 08	 mov	 ecx, DWORD PTR rect$[rbp+8]
  0008c	2b c8		 sub	 ecx, eax
  0008e	8b c1		 mov	 eax, ecx
  00090	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00094	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 134  : 		height = rect.bottom - rect.top;

  00097	8b 45 04	 mov	 eax, DWORD PTR rect$[rbp+4]
  0009a	8b 4d 0c	 mov	 ecx, DWORD PTR rect$[rbp+12]
  0009d	2b c8		 sub	 ecx, eax
  0009f	8b c1		 mov	 eax, ecx
  000a1	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  000a5	89 41 34	 mov	 DWORD PTR [rcx+52], eax
$LN3@Update:
$LN1@Update:

; 135  : 
; 136  : 	}
; 137  : 
; 138  : 
; 139  : 
; 140  : 
; 141  : 
; 142  : }

  000a8	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000ac	5d		 pop	 rbp
  000ad	c3		 ret	 0
?Update@FWindowsWindow@@QEAAXXZ ENDP			; FWindowsWindow::Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Destroy@FWindowsWindow@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?Destroy@FWindowsWindow@@QEAAXXZ PROC			; FWindowsWindow::Destroy, COMDAT

; 97   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 98   : 	if (m_Close)

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	0f b6 80 a8 00
	00 00		 movzx	 eax, BYTE PTR [rax+168]
  00026	85 c0		 test	 eax, eax
  00028	74 02		 je	 SHORT $LN2@Destroy

; 99   : 		return;

  0002a	eb 4b		 jmp	 SHORT $LN1@Destroy
$LN2@Destroy:

; 100  : 
; 101  : 
; 102  : 	onDestroyWindow.BroadCast();

  0002c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00030	48 83 c0 18	 add	 rax, 24
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast

; 103  : 
; 104  : 	m_Close = true;

  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 105  : 	DestroyWindow(m_Wnd);

  00047	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  0004f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DestroyWindow

; 106  : 
; 107  : 
; 108  : 	Log("Window has been Destroyed. - ", cstr(m_Name));

  00055	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00059	48 83 c0 78	 add	 rax, 120		; 00000078H
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00065	45 33 c0	 xor	 r8d, r8d
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BO@HCHDIKNO@Window?5has?5been?5Destroyed?4?5?9?5@
  00072	e8 00 00 00 00	 call	 ?logF@Logger@@SAXPEBDZZ	; Logger::logF
$LN1@Destroy:

; 109  : 
; 110  : 
; 111  : 
; 112  : }

  00077	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
?Destroy@FWindowsWindow@@QEAAXXZ ENDP			; FWindowsWindow::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z
_TEXT	SEGMENT
wSex$ = 0
wClassName$ = 80
ClassName$ = 120
er$1 = 128
rect2$ = 136
$T2 = 216
$T3 = 224
$T4 = 248
$T5 = 256
$T6 = 280
$T7 = 288
$T8 = 328
$T9 = 336
$T10 = 376
$T11 = 384
$T12 = 424
tv285 = 464
tv283 = 464
tv232 = 464
tv93 = 464
tv66 = 464
tv289 = 472
tv278 = 472
tv230 = 472
tv274 = 480
tv83 = 480
tv293 = 488
tv280 = 488
tv291 = 496
tv91 = 496
tv272 = 504
tv270 = 512
this$ = 544
w$ = 552
h$ = 560
x$ = 568
y$ = 576
name$ = 584
Parent$ = 592
?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z PROC ; FWindowsWindow::Create, COMDAT

; 16   : {

$LN14:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec 70 02
	00 00		 sub	 rsp, 624		; 00000270H
  0001b	48 8d 6c 24 60	 lea	 rbp, QWORD PTR [rsp+96]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 17   : 	WNDCLASSEX wSex;
; 18   : 
; 19   : 	wstring wClassName(name.begin(), name.end());

  0002c	48 8d 8d d8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00033	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00038	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  0003f	48 8d 85 e0 00
	00 00		 lea	 rax, QWORD PTR $T3[rbp]
  00046	48 89 85 f8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  0004d	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR $T4[rbp]
  00054	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  0005b	e8 00 00 00 00	 call	 ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
  00060	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv278[rbp], rax
  00067	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR tv278[rbp]
  0006e	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00075	48 8d 85 00 01
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  0007c	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00083	48 8b 95 18 01
	00 00		 mov	 rdx, QWORD PTR $T6[rbp]
  0008a	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  00091	e8 00 00 00 00	 call	 ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
  00096	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv280[rbp], rax
  0009d	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv280[rbp]
  000a4	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000ab	4c 8b 8d d0 01
	00 00		 mov	 r9, QWORD PTR tv93[rbp]
  000b2	4c 8b 85 e0 01
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  000b9	48 8b 95 f0 01
	00 00		 mov	 rdx, QWORD PTR tv91[rbp]
  000c0	48 8d 4d 50	 lea	 rcx, QWORD PTR wClassName$[rbp]
  000c4	e8 00 00 00 00	 call	 ??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> ><std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,0>
  000c9	90		 npad	 1

; 20   : 
; 21   : 	LPCWSTR ClassName = wClassName.c_str();

  000ca	48 8d 4d 50	 lea	 rcx, QWORD PTR wClassName$[rbp]
  000ce	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000d3	48 89 45 78	 mov	 QWORD PTR ClassName$[rbp], rax

; 22   : 
; 23   : 
; 24   : 
; 25   : 	wSex.cbSize = sizeof(WNDCLASSEX);

  000d7	c7 45 00 50 00
	00 00		 mov	 DWORD PTR wSex$[rbp], 80 ; 00000050H

; 26   : 	wSex.style = CS_HREDRAW | CS_VREDRAW | CS_OWNDC;

  000de	c7 45 04 23 00
	00 00		 mov	 DWORD PTR wSex$[rbp+4], 35 ; 00000023H

; 27   : 	wSex.lpfnWndProc = FWindowsWindow::WndProc;

  000e5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?WndProc@FWindowsWindow@@CA_JPEAUHWND__@@I_K_J@Z ; FWindowsWindow::WndProc
  000ec	48 89 45 08	 mov	 QWORD PTR wSex$[rbp+8], rax

; 28   : 	wSex.cbClsExtra = 0;

  000f0	c7 45 10 00 00
	00 00		 mov	 DWORD PTR wSex$[rbp+16], 0

; 29   : 	wSex.cbWndExtra = 0;

  000f7	c7 45 14 00 00
	00 00		 mov	 DWORD PTR wSex$[rbp+20], 0

; 30   : 	wSex.hInstance = Application::GetInstance();

  000fe	e8 00 00 00 00	 call	 ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ; Application::GetInstance
  00103	48 89 45 18	 mov	 QWORD PTR wSex$[rbp+24], rax

; 31   : 	wSex.hIcon = LoadIcon(Application::GetInstance(), IDI_APPLICATION);

  00107	e8 00 00 00 00	 call	 ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ; Application::GetInstance
  0010c	ba 00 7f 00 00	 mov	 edx, 32512		; 00007f00H
  00111	48 8b c8	 mov	 rcx, rax
  00114	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadIconW
  0011a	48 89 45 20	 mov	 QWORD PTR wSex$[rbp+32], rax

; 32   : 	wSex.hCursor = LoadCursor(Application::GetInstance(), IDC_ARROW);

  0011e	e8 00 00 00 00	 call	 ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ; Application::GetInstance
  00123	ba 00 7f 00 00	 mov	 edx, 32512		; 00007f00H
  00128	48 8b c8	 mov	 rcx, rax
  0012b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadCursorW
  00131	48 89 45 28	 mov	 QWORD PTR wSex$[rbp+40], rax

; 33   : 	wSex.hbrBackground = (HBRUSH)COLOR_WINDOW;

  00135	48 c7 45 30 05
	00 00 00	 mov	 QWORD PTR wSex$[rbp+48], 5

; 34   : 	wSex.lpszMenuName = NULL;

  0013d	48 c7 45 38 00
	00 00 00	 mov	 QWORD PTR wSex$[rbp+56], 0

; 35   : 	wSex.lpszClassName = ClassName;

  00145	48 8b 45 78	 mov	 rax, QWORD PTR ClassName$[rbp]
  00149	48 89 45 40	 mov	 QWORD PTR wSex$[rbp+64], rax

; 36   : 	wSex.hIconSm = LoadIcon(Application::GetInstance(), IDI_APPLICATION);

  0014d	e8 00 00 00 00	 call	 ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ; Application::GetInstance
  00152	ba 00 7f 00 00	 mov	 edx, 32512		; 00007f00H
  00157	48 8b c8	 mov	 rcx, rax
  0015a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadIconW
  00160	48 89 45 48	 mov	 QWORD PTR wSex$[rbp+72], rax

; 37   : 
; 38   : 
; 39   : 
; 40   : 
; 41   : 
; 42   : 	if (!RegisterClassExW(&wSex))

  00164	48 8d 4d 00	 lea	 rcx, QWORD PTR wSex$[rbp]
  00168	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegisterClassExW
  0016e	0f b7 c0	 movzx	 eax, ax
  00171	85 c0		 test	 eax, eax
  00173	75 50		 jne	 SHORT $LN2@Create

; 43   : 	{
; 44   : 		auto er = GetLastError();

  00175	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  0017b	89 85 80 00 00
	00		 mov	 DWORD PTR er$1[rbp], eax

; 45   : 
; 46   : 		Logger::log(L"Error register Class", LOGGER_ERROR);

  00181	48 8d 85 20 01
	00 00		 lea	 rax, QWORD PTR $T7[rbp]
  00188	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  0018f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CK@NODEJLMD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5@
  00196	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  0019d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  001a2	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv283[rbp], rax
  001a9	ba 04 00 00 00	 mov	 edx, 4
  001ae	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR tv283[rbp]
  001b5	e8 00 00 00 00	 call	 ?log@Logger@@SAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@W4LOGGER_ENUM@@@Z ; Logger::log

; 47   : 		Logger::wait();

  001ba	e8 00 00 00 00	 call	 ?wait@Logger@@SAXXZ	; Logger::wait

; 48   : 		abort();

  001bf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_abort
$LN2@Create:

; 49   : 
; 50   : 	}
; 51   : 
; 52   : 
; 53   : 	m_Wnd = CreateWindowW(ClassName,

  001c5	e8 00 00 00 00	 call	 ?GetInstance@Application@@SAPEAUHINSTANCE__@@XZ ; Application::GetInstance
  001ca	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR [rsp+88], 0
  001d3	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  001d8	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR [rsp+72], 0
  001e1	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  001ea	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR h$[rbp]
  001f0	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  001f4	8b 85 28 02 00
	00		 mov	 eax, DWORD PTR w$[rbp]
  001fa	89 44 24 30	 mov	 DWORD PTR [rsp+48], eax
  001fe	8b 85 40 02 00
	00		 mov	 eax, DWORD PTR y$[rbp]
  00204	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00208	8b 85 38 02 00
	00		 mov	 eax, DWORD PTR x$[rbp]
  0020e	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00212	41 b9 00 00 cf
	00		 mov	 r9d, 13565952		; 00cf0000H
  00218	4c 8b 45 78	 mov	 r8, QWORD PTR ClassName$[rbp]
  0021c	48 8b 55 78	 mov	 rdx, QWORD PTR ClassName$[rbp]
  00220	33 c9		 xor	 ecx, ecx
  00222	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateWindowExW
  00228	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0022f	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax

; 54   : 		ClassName,
; 55   : 		WS_OVERLAPPEDWINDOW,
; 56   : 		x, y, w, h,
; 57   : 		NULL,
; 58   : 		NULL,
; 59   : 		Application::GetInstance(),
; 60   : 		NULL);
; 61   : 
; 62   : 
; 63   : 	if (!m_Wnd)

  00233	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0023a	48 83 78 40 00	 cmp	 QWORD PTR [rax+64], 0
  0023f	75 66		 jne	 SHORT $LN3@Create

; 64   : 	{
; 65   : 		Logger::log("Error create Window " + name);

  00241	48 8d 85 50 01
	00 00		 lea	 rax, QWORD PTR $T9[rbp]
  00248	48 89 85 78 01
	00 00		 mov	 QWORD PTR $T10[rbp], rax
  0024f	4c 8b 85 48 02
	00 00		 mov	 r8, QWORD PTR name$[rbp]
  00256	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@MDBPLPPA@Error?5create?5Window?5@
  0025d	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR $T10[rbp]
  00264	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00269	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv285[rbp], rax
  00270	ba 01 00 00 00	 mov	 edx, 1
  00275	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR tv285[rbp]
  0027c	e8 00 00 00 00	 call	 ?log@Logger@@SAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4LOGGER_ENUM@@@Z ; Logger::log

; 66   : 
; 67   : 		Logger::wait();

  00281	e8 00 00 00 00	 call	 ?wait@Logger@@SAXXZ	; Logger::wait

; 68   : 
; 69   : 		abort();

  00286	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_abort
  0028c	90		 npad	 1

; 70   : 
; 71   : 		return;

  0028d	48 8d 4d 50	 lea	 rcx, QWORD PTR wClassName$[rbp]
  00291	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00296	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  0029d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a2	e9 da 01 00 00	 jmp	 $LN4@Create
$LN3@Create:

; 72   : 	}
; 73   : 
; 74   : 
; 75   : 	SetWindowLongPtr(m_Wnd, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(this));

  002a7	4c 8b 85 20 02
	00 00		 mov	 r8, QWORD PTR this$[rbp]
  002ae	ba eb ff ff ff	 mov	 edx, -21
  002b3	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002ba	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  002be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetWindowLongPtrW

; 76   : 
; 77   : 
; 78   : 	ShowWindow(m_Wnd, Application::CmdShow());

  002c4	e8 00 00 00 00	 call	 ?CmdShow@Application@@SAHXZ ; Application::CmdShow
  002c9	89 85 d0 01 00
	00		 mov	 DWORD PTR tv232[rbp], eax
  002cf	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002d6	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  002da	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv230[rbp], rax
  002e1	8b 95 d0 01 00
	00		 mov	 edx, DWORD PTR tv232[rbp]
  002e7	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv230[rbp]
  002ee	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ShowWindow

; 79   : 	UpdateWindow(m_Wnd);

  002f4	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002fb	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  002ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UpdateWindow

; 80   : 
; 81   : 
; 82   : 	RECT rect2;
; 83   : 	GetWindowRect(m_Wnd, &rect2);

  00305	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR rect2$[rbp]
  0030c	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00313	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00317	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetWindowRect

; 84   : 
; 85   : 	leftX = rect2.left;

  0031d	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00324	8b 8d 88 00 00
	00		 mov	 ecx, DWORD PTR rect2$[rbp]
  0032a	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 86   : 	topY = rect2.top;

  0032d	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00334	8b 8d 8c 00 00
	00		 mov	 ecx, DWORD PTR rect2$[rbp+4]
  0033a	89 48 3c	 mov	 DWORD PTR [rax+60], ecx

; 87   : 	width = rect2.right - rect2.left;

  0033d	8b 85 88 00 00
	00		 mov	 eax, DWORD PTR rect2$[rbp]
  00343	8b 8d 90 00 00
	00		 mov	 ecx, DWORD PTR rect2$[rbp+8]
  00349	2b c8		 sub	 ecx, eax
  0034b	8b c1		 mov	 eax, ecx
  0034d	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00354	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 88   : 	height = rect2.bottom - rect2.top;

  00357	8b 85 8c 00 00
	00		 mov	 eax, DWORD PTR rect2$[rbp+4]
  0035d	8b 8d 94 00 00
	00		 mov	 ecx, DWORD PTR rect2$[rbp+12]
  00363	2b c8		 sub	 ecx, eax
  00365	8b c1		 mov	 eax, ecx
  00367	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0036e	89 41 34	 mov	 DWORD PTR [rcx+52], eax

; 89   : 
; 90   : 	m_Close = false;

  00371	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00378	c6 80 a8 00 00
	00 00		 mov	 BYTE PTR [rax+168], 0

; 91   : 
; 92   : 
; 93   : 	Log("Success create window ", cstr(name), " ", icstr(width), "x", icstr(height));

  0037f	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00386	8b 50 34	 mov	 edx, DWORD PTR [rax+52]
  00389	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00390	e8 00 00 00 00	 call	 ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
  00395	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  0039c	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR tv66[rbp]
  003a3	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv289[rbp], rax
  003aa	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv289[rbp]
  003b1	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  003b6	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv274[rbp], rax
  003bd	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003c4	8b 50 30	 mov	 edx, DWORD PTR [rax+48]
  003c7	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  003ce	e8 00 00 00 00	 call	 ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
  003d3	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv293[rbp], rax
  003da	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv293[rbp]
  003e1	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  003e8	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  003ef	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  003f4	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv272[rbp], rax
  003fb	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  00402	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00407	48 89 85 00 02
	00 00		 mov	 QWORD PTR tv270[rbp], rax
  0040e	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00417	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR tv274[rbp]
  0041e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00423	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_01FJMABOPO@x@
  0042a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0042f	4c 8b 8d f8 01
	00 00		 mov	 r9, QWORD PTR tv272[rbp]
  00436	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
  0043d	48 8b 95 00 02
	00 00		 mov	 rdx, QWORD PTR tv270[rbp]
  00444	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@NDOLHIMA@Success?5create?5window?5@
  0044b	e8 00 00 00 00	 call	 ?logF@Logger@@SAXPEBDZZ	; Logger::logF
  00450	90		 npad	 1
  00451	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  00458	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0045d	90		 npad	 1
  0045e	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00465	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0046a	90		 npad	 1

; 94   : }

  0046b	48 8d 4d 50	 lea	 rcx, QWORD PTR wClassName$[rbp]
  0046f	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00474	90		 npad	 1
  00475	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  0047c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@Create:
  00481	48 8d a5 10 02
	00 00		 lea	 rsp, QWORD PTR [rbp+528]
  00488	5d		 pop	 rbp
  00489	c3		 ret	 0
$LN13@Create:
?Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z ENDP ; FWindowsWindow::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
wSex$ = 0
wClassName$ = 80
ClassName$ = 120
er$1 = 128
rect2$ = 136
$T2 = 216
$T3 = 224
$T4 = 248
$T5 = 256
$T6 = 280
$T7 = 288
$T8 = 328
$T9 = 336
$T10 = 376
$T11 = 384
$T12 = 424
tv285 = 464
tv283 = 464
tv232 = 464
tv93 = 464
tv66 = 464
tv289 = 472
tv278 = 472
tv230 = 472
tv274 = 480
tv83 = 480
tv293 = 488
tv280 = 488
tv291 = 496
tv91 = 496
tv272 = 504
tv270 = 512
this$ = 544
w$ = 552
h$ = 560
x$ = 568
y$ = 576
name$ = 584
Parent$ = 592
?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA PROC ; `FWindowsWindow::Create'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 60	 lea	 rbp, QWORD PTR [rdx+96]
  0000a	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR name$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA ENDP ; `FWindowsWindow::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
wSex$ = 0
wClassName$ = 80
ClassName$ = 120
er$1 = 128
rect2$ = 136
$T2 = 216
$T3 = 224
$T4 = 248
$T5 = 256
$T6 = 280
$T7 = 288
$T8 = 328
$T9 = 336
$T10 = 376
$T11 = 384
$T12 = 424
tv285 = 464
tv283 = 464
tv232 = 464
tv93 = 464
tv66 = 464
tv289 = 472
tv278 = 472
tv230 = 472
tv274 = 480
tv83 = 480
tv293 = 488
tv280 = 488
tv291 = 496
tv91 = 496
tv272 = 504
tv270 = 512
this$ = 544
w$ = 552
h$ = 560
x$ = 568
y$ = 576
name$ = 584
Parent$ = 592
?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA PROC ; `FWindowsWindow::Create'::`1'::dtor$3
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 60	 lea	 rbp, QWORD PTR [rdx+96]
  0000a	48 8d 4d 50	 lea	 rcx, QWORD PTR wClassName$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$3@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA ENDP ; `FWindowsWindow::Create'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
wSex$ = 0
wClassName$ = 80
ClassName$ = 120
er$1 = 128
rect2$ = 136
$T2 = 216
$T3 = 224
$T4 = 248
$T5 = 256
$T6 = 280
$T7 = 288
$T8 = 328
$T9 = 336
$T10 = 376
$T11 = 384
$T12 = 424
tv285 = 464
tv283 = 464
tv232 = 464
tv93 = 464
tv66 = 464
tv289 = 472
tv278 = 472
tv230 = 472
tv274 = 480
tv83 = 480
tv293 = 488
tv280 = 488
tv291 = 496
tv91 = 496
tv272 = 504
tv270 = 512
this$ = 544
w$ = 552
h$ = 560
x$ = 568
y$ = 576
name$ = 584
Parent$ = 592
?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA PROC ; `FWindowsWindow::Create'::`1'::dtor$6
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 60	 lea	 rbp, QWORD PTR [rdx+96]
  0000a	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$6@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA ENDP ; `FWindowsWindow::Create'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
wSex$ = 0
wClassName$ = 80
ClassName$ = 120
er$1 = 128
rect2$ = 136
$T2 = 216
$T3 = 224
$T4 = 248
$T5 = 256
$T6 = 280
$T7 = 288
$T8 = 328
$T9 = 336
$T10 = 376
$T11 = 384
$T12 = 424
tv285 = 464
tv283 = 464
tv232 = 464
tv93 = 464
tv66 = 464
tv289 = 472
tv278 = 472
tv230 = 472
tv274 = 480
tv83 = 480
tv293 = 488
tv280 = 488
tv291 = 496
tv91 = 496
tv272 = 504
tv270 = 512
this$ = 544
w$ = 552
h$ = 560
x$ = 568
y$ = 576
name$ = 584
Parent$ = 592
?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA PROC ; `FWindowsWindow::Create'::`1'::dtor$7
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 60	 lea	 rbp, QWORD PTR [rdx+96]
  0000a	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$7@?0??Create@FWindowsWindow@@QEAAXIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV1@@Z@4HA ENDP ; `FWindowsWindow::Create'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ??1FWindowsWindow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1FWindowsWindow@@QEAA@XZ PROC				; FWindowsWindow::~FWindowsWindow, COMDAT

; 300  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 301  : 	this->Destroy();

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?Destroy@FWindowsWindow@@QEAAXXZ ; FWindowsWindow::Destroy

; 302  : 
; 303  : 
; 304  : }

  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 78	 add	 rax, 120		; 00000078H
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 83 c0 18	 add	 rax, 24
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00044	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@XJJ@@QEAA@XZ ; TMultiCastDelegate<void,long,long>::~TMultiCastDelegate<void,long,long>
  00054	90		 npad	 1
  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
??1FWindowsWindow@@QEAA@XZ ENDP				; FWindowsWindow::~FWindowsWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z
_TEXT	SEGMENT
this$ = 80
maneger$ = 88
index$ = 96
??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z PROC ; FWindowsWindow::FWindowsWindow, COMDAT

; 10   : {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h

; 60   : 	int MouseX = 0, MouseY = 0;

  00025	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [rax+4], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp

; 10   : {

  0003a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@XJJ@@QEAA@XZ ; TMultiCastDelegate<void,long,long>::TMultiCastDelegate<void,long,long>
  0004a	90		 npad	 1
  0004b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 c0 18	 add	 rax, 24
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h

; 78   : 	UINT width{ 0 };

  0005b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0005f	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 79   : 	UINT height{ 0 };

  00066	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0006a	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [rax+52], 0

; 80   : 	UINT leftX{ 0 };

  00071	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00075	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [rax+56], 0

; 81   : 	UINT topY{ 0 };

  0007c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00080	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [rax+60], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp

; 10   : {

  00087	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0008b	48 83 c0 78	 add	 rax, 120		; 00000078H
  0008f	48 8b c8	 mov	 rcx, rax
  00092	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\public\Windows\WindowsWindow.h

; 91   : 	bool m_Close = true;

  00097	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0009b	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp

; 11   : 	m_Manager = (maneger);

  000a2	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000a6	48 8b 4d 58	 mov	 rcx, QWORD PTR maneger$[rbp]
  000aa	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 12   : 	m_Index = index;

  000b1	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000b5	8b 4d 60	 mov	 ecx, DWORD PTR index$[rbp]
  000b8	89 88 ac 00 00
	00		 mov	 DWORD PTR [rax+172], ecx

; 13   : }

  000be	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  000c2	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c6	5d		 pop	 rbp
  000c7	c3		 ret	 0
??0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z ENDP ; FWindowsWindow::FWindowsWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
maneger$ = 88
index$ = 96
?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA PROC ; `FWindowsWindow::FWindowsWindow'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 08	 add	 rcx, 8
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@XJJ@@QEAA@XZ ; TMultiCastDelegate<void,long,long>::~TMultiCastDelegate<void,long,long>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$0@?0???0FWindowsWindow@@QEAA@PEAVFWindowsWindowManager@@I@Z@4HA ENDP ; `FWindowsWindow::FWindowsWindow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z
_TEXT	SEGMENT
_Buff$ = 0
_Buff_end$ = 24
_RNext$ = 32
$T1 = 104
$T2 = 108
__$ReturnUdt$ = 128
_Val$ = 136
??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z PROC ; std::_UIntegral_to_string<char,unsigned __int64>, COMDAT

; 493  : _NODISCARD basic_string<_Elem> _UIntegral_to_string(const _Ty _Val) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	c7 45 6c 00 00
	00 00		 mov	 DWORD PTR $T2[rbp], 0
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 494  :     // convert _Val to string
; 495  :     static_assert(is_integral_v<_Ty>, "_Ty must be integral");
; 496  :     static_assert(is_unsigned_v<_Ty>, "_Ty must be unsigned");
; 497  :     _Elem _Buff[21]; // can hold 2^64 - 1, plus NUL
; 498  :     _Elem* const _Buff_end = _STD end(_Buff);

  0002a	48 8d 4d 00	 lea	 rcx, QWORD PTR _Buff$[rbp]
  0002e	e8 00 00 00 00	 call	 ??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z ; std::end<char,21>
  00033	48 89 45 18	 mov	 QWORD PTR _Buff_end$[rbp], rax

; 499  :     _Elem* const _RNext    = _UIntegral_to_buff(_Buff_end, _Val);

  00037	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  0003e	48 8b 4d 18	 mov	 rcx, QWORD PTR _Buff_end$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_UIntegral_to_buff@D_K@std@@YAPEADPEAD_K@Z ; std::_UIntegral_to_buff<char,unsigned __int64>
  00047	48 89 45 20	 mov	 QWORD PTR _RNext$[rbp], rax

; 500  :     return basic_string<_Elem>(_RNext, _Buff_end);

  0004b	48 8d 4d 68	 lea	 rcx, QWORD PTR $T1[rbp]
  0004f	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00054	4c 8b c8	 mov	 r9, rax
  00057	4c 8b 45 18	 mov	 r8, QWORD PTR _Buff_end$[rbp]
  0005b	48 8b 55 20	 mov	 rdx, QWORD PTR _RNext$[rbp]
  0005f	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00066	e8 00 00 00 00	 call	 ??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
  0006b	8b 45 6c	 mov	 eax, DWORD PTR $T2[rbp]
  0006e	83 c8 01	 or	 eax, 1
  00071	89 45 6c	 mov	 DWORD PTR $T2[rbp], eax
  00074	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 501  : }

  0007b	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007f	5d		 pop	 rbp
  00080	c3		 ret	 0
??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z ENDP ; std::_UIntegral_to_string<char,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
_TEXT	SEGMENT
$T1 = 64
__$ReturnUdt$ = 96
_Val$ = 104
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z PROC ; std::to_string, COMDAT

; 523  : _EXPORT_STD _NODISCARD inline string to_string(unsigned long long _Val) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	c7 45 40 00 00
	00 00		 mov	 DWORD PTR $T1[rbp], 0
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  00022	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 524  :     return _UIntegral_to_string<char>(_Val);

  00027	48 8b 55 68	 mov	 rdx, QWORD PTR _Val$[rbp]
  0002b	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002f	e8 00 00 00 00	 call	 ??$_UIntegral_to_string@D_K@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@_K@Z ; std::_UIntegral_to_string<char,unsigned __int64>
  00034	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  00037	83 c8 01	 or	 eax, 1
  0003a	89 45 40	 mov	 DWORD PTR $T1[rbp], eax
  0003d	48 8b 45 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 525  : }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ENDP ; std::to_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z
_TEXT	SEGMENT
_Buff$ = 0
_Buff_end$ = 24
_RNext$ = 32
$T1 = 104
$T2 = 108
__$ReturnUdt$ = 128
_Val$ = 136
??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z PROC ; std::_UIntegral_to_string<char,unsigned int>, COMDAT

; 493  : _NODISCARD basic_string<_Elem> _UIntegral_to_string(const _Ty _Val) {

$LN5:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	c7 45 6c 00 00
	00 00		 mov	 DWORD PTR $T2[rbp], 0
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 494  :     // convert _Val to string
; 495  :     static_assert(is_integral_v<_Ty>, "_Ty must be integral");
; 496  :     static_assert(is_unsigned_v<_Ty>, "_Ty must be unsigned");
; 497  :     _Elem _Buff[21]; // can hold 2^64 - 1, plus NUL
; 498  :     _Elem* const _Buff_end = _STD end(_Buff);

  00029	48 8d 4d 00	 lea	 rcx, QWORD PTR _Buff$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$end@D$0BF@@std@@YAPEADAEAY0BF@D@Z ; std::end<char,21>
  00032	48 89 45 18	 mov	 QWORD PTR _Buff_end$[rbp], rax

; 499  :     _Elem* const _RNext    = _UIntegral_to_buff(_Buff_end, _Val);

  00036	8b 95 88 00 00
	00		 mov	 edx, DWORD PTR _Val$[rbp]
  0003c	48 8b 4d 18	 mov	 rcx, QWORD PTR _Buff_end$[rbp]
  00040	e8 00 00 00 00	 call	 ??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z ; std::_UIntegral_to_buff<char,unsigned int>
  00045	48 89 45 20	 mov	 QWORD PTR _RNext$[rbp], rax

; 500  :     return basic_string<_Elem>(_RNext, _Buff_end);

  00049	48 8d 4d 68	 lea	 rcx, QWORD PTR $T1[rbp]
  0004d	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00052	4c 8b c8	 mov	 r9, rax
  00055	4c 8b 45 18	 mov	 r8, QWORD PTR _Buff_end$[rbp]
  00059	48 8b 55 20	 mov	 rdx, QWORD PTR _RNext$[rbp]
  0005d	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00064	e8 00 00 00 00	 call	 ??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> ><char *,0>
  00069	8b 45 6c	 mov	 eax, DWORD PTR $T2[rbp]
  0006c	83 c8 01	 or	 eax, 1
  0006f	89 45 6c	 mov	 DWORD PTR $T2[rbp], eax
  00072	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 501  : }

  00079	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z ENDP ; std::_UIntegral_to_string<char,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\string
;	COMDAT ?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
$T1 = 64
__$ReturnUdt$ = 96
_Val$ = 104
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::to_string, COMDAT

; 507  : _EXPORT_STD _NODISCARD inline string to_string(unsigned int _Val) {

$LN5:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	c7 45 40 00 00
	00 00		 mov	 DWORD PTR $T1[rbp], 0
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__91273182_string
  00021	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 508  :     return _UIntegral_to_string<char>(_Val);

  00026	8b 55 68	 mov	 edx, DWORD PTR _Val$[rbp]
  00029	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002d	e8 00 00 00 00	 call	 ??$_UIntegral_to_string@DI@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@I@Z ; std::_UIntegral_to_string<char,unsigned int>
  00032	8b 45 40	 mov	 eax, DWORD PTR $T1[rbp]
  00035	83 c8 01	 or	 eax, 1
  00038	89 45 40	 mov	 DWORD PTR $T1[rbp], eax
  0003b	48 8b 45 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 509  : }

  0003f	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::to_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4878 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4879 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4880 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4874 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4875 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4876 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
_Ptr$1 = 8
_Al$2 = 16
$T3 = 88
this$ = 112
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT

; 4846 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4847 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4848 :         _My_data._Orphan_all();

  00026	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4849 :         if (_My_data._Large_string_engaged()) {

  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 4d		 je	 SHORT $LN2@Tidy_deall

; 4850 :             _ASAN_STRING_REMOVE(*this);
; 4851 :             const pointer _Ptr = _My_data._Bx._Ptr;

  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4852 :             auto& _Al          = _Getal();

  0004b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00054	48 89 45 10	 mov	 QWORD PTR _Al$2[rbp], rax

; 4853 :             _Destroy_in_place(_My_data._Bx._Ptr);

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 83 c0 08	 add	 rax, 8
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ; std::_Destroy_in_place<wchar_t *>

; 4854 :             _My_data._Activate_SSO_buffer();

  00068	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer

; 4855 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00071	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00075	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00079	48 ff c0	 inc	 rax
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  00083	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$2[rbp]
  00087	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy_deall:

; 4856 :         }
; 4857 : 
; 4858 :         _My_data._Mysize = 0;

  0008c	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00090	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4859 :         _My_data._Myres  = _BUF_SIZE - 1;

  00098	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009c	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4860 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4861 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000a4	33 c0		 xor	 eax, eax
  000a6	66 89 45 58	 mov	 WORD PTR $T3[rbp], ax
  000aa	b8 02 00 00 00	 mov	 eax, 2
  000af	48 6b c0 00	 imul	 rax, rax, 0
  000b3	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000b7	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000bc	48 8d 55 58	 lea	 rdx, QWORD PTR $T3[rbp]
  000c0	48 8b c8	 mov	 rcx, rax
  000c3	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign
  000c8	90		 npad	 1

; 4862 :     }

  000c9	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
$T1 = 72
this$ = 96
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT

; 4835 :     _CONSTEXPR20 void _Tidy_init() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4836 :         // initialize basic_string data members
; 4837 :         auto& _My_data   = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4838 :         _My_data._Mysize = 0;

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4839 :         _My_data._Myres  = _BUF_SIZE - 1;

  0002f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00033	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4840 :         _My_data._Activate_SSO_buffer();

  0003b	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer

; 4841 : 
; 4842 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4843 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	33 c0		 xor	 eax, eax
  00046	66 89 45 48	 mov	 WORD PTR $T1[rbp], ax
  0004a	b8 02 00 00 00	 mov	 eax, 2
  0004f	48 6b c0 00	 imul	 rax, rax, 0
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00057	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  0005c	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 4844 :     }

  00068	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 64
tv74 = 72
this$ = 96
_Requested$ = 104
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4739 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4740 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00029	48 89 45 40	 mov	 QWORD PTR tv76[rbp], rax
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00035	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  00039	4c 8b 45 40	 mov	 r8, QWORD PTR tv76[rbp]
  0003d	48 8b 55 48	 mov	 rdx, QWORD PTR tv74[rbp]
  00041	48 8b 4d 68	 mov	 rcx, QWORD PTR _Requested$[rbp]
  00045	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth

; 4741 :     }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 0
$T1 = 72
_Requested$ = 96
_Old$ = 104
_Max$ = 112
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4726 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4727 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _Requested$[rbp]
  00029	48 83 c8 07	 or	 rax, 7
  0002d	48 89 45 00	 mov	 QWORD PTR _Masked$[rbp], rax

; 4728 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00035	48 39 45 00	 cmp	 QWORD PTR _Masked$[rbp], rax
  00039	76 06		 jbe	 SHORT $LN2@Calculate_

; 4729 :             return _Max;

  0003b	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  0003f	eb 50		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4730 :         }
; 4731 : 
; 4732 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00041	33 d2		 xor	 edx, edx
  00043	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  00047	b9 02 00 00 00	 mov	 ecx, 2
  0004c	48 f7 f1	 div	 rcx
  0004f	48 8b 4d 70	 mov	 rcx, QWORD PTR _Max$[rbp]
  00053	48 2b c8	 sub	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 39 45 68	 cmp	 QWORD PTR _Old$[rbp], rax
  0005d	76 06		 jbe	 SHORT $LN3@Calculate_

; 4733 :             return _Max;

  0005f	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00063	eb 2c		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4734 :         }
; 4735 : 
; 4736 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00065	33 d2		 xor	 edx, edx
  00067	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	48 f7 f1	 div	 rcx
  00073	48 8b 4d 68	 mov	 rcx, QWORD PTR _Old$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00081	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00085	48 8d 4d 00	 lea	 rcx, QWORD PTR _Masked$[rbp]
  00089	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4737 :     }

  00091	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 0
_Storage_max$ = 8
$T1 = 80
$T2 = 88
$T3 = 96
this$ = 128
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 4141 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4142 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0002a	48 8b c8	 mov	 rcx, rax
  0002d	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
  00032	48 89 45 00	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 4143 :         const size_type _Storage_max = // can always store small string

  00036	48 c7 45 50 08
	00 00 00	 mov	 QWORD PTR $T1[rbp], 8
  0003e	48 8d 55 50	 lea	 rdx, QWORD PTR $T1[rbp]
  00042	48 8d 4d 00	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00046	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 45 08	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 4144 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 4145 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00056	48 ff c8	 dec	 rax
  00059	48 89 45 58	 mov	 QWORD PTR $T2[rbp], rax
  0005d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00062	48 89 45 60	 mov	 QWORD PTR $T3[rbp], rax
  00066	48 8d 55 58	 lea	 rdx, QWORD PTR $T2[rbp]
  0006a	48 8d 4d 60	 lea	 rcx, QWORD PTR $T3[rbp]
  0006e	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 4146 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 4147 :         );
; 4148 :     }

  00076	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 80
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT

; 4119 :     _NODISCARD _CONSTEXPR20 _Ret_z_ const _Elem* c_str() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4120 :         return _Mypair._Myval2._Myptr();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 4121 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S17$ = 8
_To_delete$ = 16
this$ = 112
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 3128 :     _CONSTEXPR20 ~basic_string() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3129 :         _Tidy_deallocate();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 3130 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3131 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S17$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S17$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 3132 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00044	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 45 10	 mov	 QWORD PTR _To_delete$[rbp], rax

; 3133 :         _Mypair._Myval2._Myproxy = nullptr;

  0004f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3134 :         _Delete_plain_internal(_Alproxy, _To_delete);

  0005a	48 8b 55 10	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00062	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3135 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3136 :     }

  00067	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b c8	 mov	 rcx, rax
  0006e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Ptr$ = 96
_Size$ = 104
?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes, COMDAT

; 2591 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2592 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2593 :         // but likely more impactful to throughput.
; 2594 : #if _HAS_CXX20
; 2595 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 35		 je	 SHORT $LN5@Start_elem

; 2596 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {

  0002c	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00034	eb 0b		 jmp	 SHORT $LN4@Start_elem
$LN2@Start_elem:
  00036	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Start_elem:
  00041	48 8b 45 68	 mov	 rax, QWORD PTR _Size$[rbp]
  00045	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00049	73 16		 jae	 SHORT $LN3@Start_elem

; 2597 :                 _STD construct_at(_Ptr + _Idx);

  0004b	48 8b 45 60	 mov	 rax, QWORD PTR _Ptr$[rbp]
  0004f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00053	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$construct_at@_W$$V$0A@@std@@YAPEA_WQEA_W@Z ; std::construct_at<wchar_t,0>

; 2598 :             }

  0005f	eb d5		 jmp	 SHORT $LN2@Start_elem
$LN3@Start_elem:
$LN5@Start_elem:

; 2599 :         }
; 2600 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2601 :         (void) _Ptr;
; 2602 :         (void) _Size;
; 2603 : #endif // _HAS_CXX20
; 2604 :     }

  00061	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
?_Start_element_lifetimes@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXQEA_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Start_element_lifetimes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2538 :     _CONSTEXPR20 basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00028	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  0002c	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00030	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
  00035	90		 npad	 1

; 2539 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00036	48 8b 4d 68	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0003a	e8 00 00 00 00	 call	 ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ; std::_WChar_traits<wchar_t>::length
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$_Convert_size@_K_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64,unsigned __int64>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	48 8b 55 68	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0004e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Construct@$00PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct<1,wchar_t const *>
  00057	90		 npad	 1

; 2540 :     }

  00058	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
_Ptr$ = 104
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 83 c0 08	 add	 rax, 8
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 96
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00020	48 8b 7d 60	 mov	 rdi, QWORD PTR this$[rbp]
  00024	33 c0		 xor	 eax, eax
  00026	b9 10 00 00 00	 mov	 ecx, 16
  0002b	f3 aa		 rep stosb
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00035	5f		 pop	 rdi
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Idx$1 = 0
this$ = 96
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer, COMDAT

; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 2d		 je	 SHORT $LN5@Activate_S

; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {

  00027	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  0002f	eb 0b		 jmp	 SHORT $LN4@Activate_S
$LN2@Activate_S:
  00031	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00035	48 ff c0	 inc	 rax
  00038	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Activate_S:
  0003c	48 83 7d 00 08	 cmp	 QWORD PTR _Idx$1[rbp], 8
  00041	73 11		 jae	 SHORT $LN5@Activate_S

; 2251 :                 _Bx._Buf[_Idx] = value_type();

  00043	33 c0		 xor	 eax, eax
  00045	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00049	48 8b 55 00	 mov	 rdx, QWORD PTR _Idx$1[rbp]
  0004d	66 89 44 51 08	 mov	 WORD PTR [rcx+rdx*2+8], ax

; 2252 :             }

  00052	eb dd		 jmp	 SHORT $LN2@Activate_S
$LN5@Activate_S:

; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }

  00054	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 64
this$ = 96
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT

; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2243 :         return _BUF_SIZE <= _Myres;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 20 08	 cmp	 QWORD PTR [rax+32], 8
  00024	72 09		 jb	 SHORT $LN3@Large_stri
  00026	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv66[rbp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  0002f	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  00036	0f b6 45 40	 movzx	 eax, BYTE PTR tv66[rbp]

; 2244 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2234 :         const value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2235 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2236 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2237 :         }
; 2238 : 
; 2239 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2240 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2225 :         value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2226 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2227 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2228 :         }
; 2229 : 
; 2230 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2231 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty

; 2214 : 
; 2215 :     // length of internal buffer, [1, 16]:
; 2216 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2217 :     // roundup mask for allocated buffers, [0, 15]:
; 2218 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2219 :                                            : sizeof(value_type) <= 2 ? 7
; 2220 :                                            : sizeof(value_type) <= 4 ? 3
; 2221 :                                            : sizeof(value_type) <= 8 ? 1
; 2222 :                                                                      : 0;
; 2223 : 
; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2225 :         value_type* _Result = _Bx._Buf;
; 2226 :         if (_Large_string_engaged()) {
; 2227 :             _Result = _Unfancy(_Bx._Ptr);
; 2228 :         }
; 2229 : 
; 2230 :         return _Result;
; 2231 :     }
; 2232 : 
; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2234 :         const value_type* _Result = _Bx._Buf;
; 2235 :         if (_Large_string_engaged()) {
; 2236 :             _Result = _Unfancy(_Bx._Ptr);
; 2237 :         }
; 2238 : 
; 2239 :         return _Result;
; 2240 :     }
; 2241 : 
; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2243 :         return _BUF_SIZE <= _Myres;
; 2244 :     }
; 2245 : 
; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {
; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {
; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2251 :                 _Bx._Buf[_Idx] = value_type();
; 2252 :             }
; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }
; 2256 : 
; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {
; 2260 :             _Xran();
; 2261 :         }
; 2262 :     }
; 2263 : 
; 2264 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2265 :         // checks whether _Off is in the bounds of [0, size())
; 2266 :         if (_Mysize <= _Off) {
; 2267 :             _Xran();
; 2268 :         }
; 2269 :     }
; 2270 : 
; 2271 :     [[noreturn]] static void _Xran() {
; 2272 :         _Xout_of_range("invalid string position");
; 2273 :     }
; 2274 : 
; 2275 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2276 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2277 :         return (_STD min)(_Size, _Mysize - _Off);
; 2278 :     }
; 2279 : 
; 2280 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2281 :         // This constructor previously initialized _Ptr. Don't rely on the new behavior without
; 2282 :         // renaming `_String_val` (and fixing the visualizer).
; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers
; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2285 : 
; 2286 :         value_type _Buf[_BUF_SIZE];
; 2287 :         pointer _Ptr;
; 2288 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2289 :     };
; 2290 :     _Bxty _Bx;
; 2291 : 
; 2292 :     size_type _Mysize = 0; // current length of string

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2293 :     size_type _Myres  = 0; // current storage reserved for string

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

  0004c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 738  :     }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$01@std@@YA_K_K@Z ; std::_Get_size_of_n<2>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 d1 e0	 shl	 rax, 1
  000b1	48 8b d0	 mov	 rdx, rax
  000b4	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b8	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bd	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 8b c8	 mov	 rcx, rax
  00016	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1530 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1531 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1532 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4878 :     _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4879 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4880 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4874 :     _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4875 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4876 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
tv79 = 64
this$ = 96
_Right$ = 104
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4870 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4871 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 40	 mov	 QWORD PTR tv79[rbp], rax
  00028	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	48 8b 4d 40	 mov	 rcx, QWORD PTR tv79[rbp]
  00033	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4872 :     }

  00038	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
_Ptr$1 = 8
_Al$2 = 16
$T3 = 88
this$ = 112
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4846 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4847 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4848 :         _My_data._Orphan_all();

  00026	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0002a	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4849 :         if (_My_data._Large_string_engaged()) {

  0002f	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00033	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 4d		 je	 SHORT $LN2@Tidy_deall

; 4850 :             _ASAN_STRING_REMOVE(*this);
; 4851 :             const pointer _Ptr = _My_data._Bx._Ptr;

  0003f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4852 :             auto& _Al          = _Getal();

  0004b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	48 89 45 10	 mov	 QWORD PTR _Al$2[rbp], rax

; 4853 :             _Destroy_in_place(_My_data._Bx._Ptr);

  00058	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 83 c0 08	 add	 rax, 8
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4854 :             _My_data._Activate_SSO_buffer();

  00068	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer

; 4855 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

  00071	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00075	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00079	48 ff c0	 inc	 rax
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  00083	48 8b 4d 10	 mov	 rcx, QWORD PTR _Al$2[rbp]
  00087	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4856 :         }
; 4857 : 
; 4858 :         _My_data._Mysize = 0;

  0008c	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00090	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4859 :         _My_data._Myres  = _BUF_SIZE - 1;

  00098	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009c	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4860 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4861 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000a4	c6 45 58 00	 mov	 BYTE PTR $T3[rbp], 0
  000a8	b8 01 00 00 00	 mov	 eax, 1
  000ad	48 6b c0 00	 imul	 rax, rax, 0
  000b1	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000b5	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000ba	48 8d 55 58	 lea	 rdx, QWORD PTR $T3[rbp]
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000c6	90		 npad	 1

; 4862 :     }

  000c7	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  000cb	5d		 pop	 rbp
  000cc	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 0
$T1 = 72
this$ = 96
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4835 :     _CONSTEXPR20 void _Tidy_init() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4836 :         // initialize basic_string data members
; 4837 :         auto& _My_data   = _Mypair._Myval2;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 4838 :         _My_data._Mysize = 0;

  00023	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00027	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4839 :         _My_data._Myres  = _BUF_SIZE - 1;

  0002f	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  00033	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4840 :         _My_data._Activate_SSO_buffer();

  0003b	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0003f	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer

; 4841 : 
; 4842 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4843 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00044	c6 45 48 00	 mov	 BYTE PTR $T1[rbp], 0
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	48 6b c0 00	 imul	 rax, rax, 0
  00051	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00055	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  0005a	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4844 :     }

  00066	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 64
tv74 = 72
this$ = 96
_Requested$ = 104
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4739 :     _NODISCARD _CONSTEXPR20 size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4740 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00020	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00024	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00029	48 89 45 40	 mov	 QWORD PTR tv76[rbp], rax
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00035	48 89 45 48	 mov	 QWORD PTR tv74[rbp], rax
  00039	4c 8b 45 40	 mov	 r8, QWORD PTR tv76[rbp]
  0003d	48 8b 55 48	 mov	 rdx, QWORD PTR tv74[rbp]
  00041	48 8b 4d 68	 mov	 rcx, QWORD PTR _Requested$[rbp]
  00045	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4741 :     }

  0004a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 0
$T1 = 72
_Requested$ = 96
_Old$ = 104
_Max$ = 112
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4726 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4727 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _Requested$[rbp]
  00029	48 83 c8 0f	 or	 rax, 15
  0002d	48 89 45 00	 mov	 QWORD PTR _Masked$[rbp], rax

; 4728 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00035	48 39 45 00	 cmp	 QWORD PTR _Masked$[rbp], rax
  00039	76 06		 jbe	 SHORT $LN2@Calculate_

; 4729 :             return _Max;

  0003b	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  0003f	eb 50		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4730 :         }
; 4731 : 
; 4732 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00041	33 d2		 xor	 edx, edx
  00043	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  00047	b9 02 00 00 00	 mov	 ecx, 2
  0004c	48 f7 f1	 div	 rcx
  0004f	48 8b 4d 70	 mov	 rcx, QWORD PTR _Max$[rbp]
  00053	48 2b c8	 sub	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 39 45 68	 cmp	 QWORD PTR _Old$[rbp], rax
  0005d	76 06		 jbe	 SHORT $LN3@Calculate_

; 4733 :             return _Max;

  0005f	48 8b 45 70	 mov	 rax, QWORD PTR _Max$[rbp]
  00063	eb 2c		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4734 :         }
; 4735 : 
; 4736 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00065	33 d2		 xor	 edx, edx
  00067	48 8b 45 68	 mov	 rax, QWORD PTR _Old$[rbp]
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	48 f7 f1	 div	 rcx
  00073	48 8b 4d 68	 mov	 rcx, QWORD PTR _Old$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00081	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00085	48 8d 4d 00	 lea	 rcx, QWORD PTR _Masked$[rbp]
  00089	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4737 :     }

  00091	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00095	5d		 pop	 rbp
  00096	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 0
_Storage_max$ = 8
$T1 = 80
$T2 = 88
$T3 = 96
this$ = 128
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 4141 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4142 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002a	48 8b c8	 mov	 rcx, rax
  0002d	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00032	48 89 45 00	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 4143 :         const size_type _Storage_max = // can always store small string

  00036	48 c7 45 50 10
	00 00 00	 mov	 QWORD PTR $T1[rbp], 16
  0003e	48 8d 55 50	 lea	 rdx, QWORD PTR $T1[rbp]
  00042	48 8d 4d 00	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00046	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 45 08	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 4144 :             (_STD max)(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 4145 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00056	48 ff c8	 dec	 rax
  00059	48 89 45 58	 mov	 QWORD PTR $T2[rbp], rax
  0005d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00062	48 89 45 60	 mov	 QWORD PTR $T3[rbp], rax
  00066	48 8d 55 58	 lea	 rdx, QWORD PTR $T2[rbp]
  0006a	48 8d 4d 60	 lea	 rcx, QWORD PTR $T3[rbp]
  0006e	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00073	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 4146 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 4147 :         );
; 4148 :     }

  00076	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 80
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 4137 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4138 :         return _Mypair._Myval2._Mysize;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 4139 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 80
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 4119 :     _NODISCARD _CONSTEXPR20 _Ret_z_ const _Elem* c_str() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4120 :         return _Mypair._Myval2._Myptr();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 4121 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv89 = 64
tv87 = 72
this$ = 96
__$ReturnUdt$ = 104
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT

; 3937 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3938 :         return iterator(

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0002c	48 89 45 40	 mov	 QWORD PTR tv89[rbp], rax
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ; std::_Refancy<char *,0>
  00044	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00048	48 03 41 18	 add	 rax, QWORD PTR [rcx+24]
  0004c	48 89 45 48	 mov	 QWORD PTR tv87[rbp], rax
  00050	4c 8b 45 40	 mov	 r8, QWORD PTR tv89[rbp]
  00054	48 8b 55 48	 mov	 rdx, QWORD PTR tv87[rbp]
  00058	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0005c	e8 00 00 00 00	 call	 ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
  00061	48 8b 45 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3939 :             _Refancy<pointer>(_Mypair._Myval2._Myptr()) + static_cast<difference_type>(_Mypair._Myval2._Mysize),
; 3940 :             _STD addressof(_Mypair._Myval2));
; 3941 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ
_TEXT	SEGMENT
tv85 = 64
tv83 = 72
this$ = 96
__$ReturnUdt$ = 104
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT

; 3929 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3930 :         return iterator(_Refancy<pointer>(_Mypair._Myval2._Myptr()), _STD addressof(_Mypair._Myval2));

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0002c	48 89 45 40	 mov	 QWORD PTR tv85[rbp], rax
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Refancy@PEAD$0A@@std@@YAPEADPEAD@Z ; std::_Refancy<char *,0>
  00044	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00048	4c 8b 45 40	 mov	 r8, QWORD PTR tv85[rbp]
  0004c	48 8b 55 48	 mov	 rdx, QWORD PTR tv83[rbp]
  00050	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00054	e8 00 00 00 00	 call	 ??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAA@PEBDPEBU_Container_base12@1@@Z
  00059	48 8b 45 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3931 :     }

  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z
_TEXT	SEGMENT
_Old_size$ = 0
_Check_overlap$ = 8
_Old_ptr$1 = 16
_Insert_at$2 = 24
_Ptr_shifted_after$3 = 32
$T4 = 104
tv81 = 105
tv146 = 112
tv69 = 112
this$ = 144
_Off$ = 152
_Ptr$ = 160
_Count$ = 168
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 3499 :         const size_type _Off, _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0001c	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00028	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3500 :         // insert [_Ptr, _Ptr + _Count) at _Off
; 3501 :         _Mypair._Myval2._Check_offset(_Off);

  0002d	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 70	 mov	 QWORD PTR tv69[rbp], rax
  00038	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Off$[rbp]
  0003f	48 8b 4d 70	 mov	 rcx, QWORD PTR tv69[rbp]
  00043	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3502 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00048	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00053	48 89 45 00	 mov	 QWORD PTR _Old_size$[rbp], rax

; 3503 : 
; 3504 :         // We can't check for overlapping ranges when constant evaluated since comparison of pointers into string
; 3505 :         // literals is unspecified, so always reallocate and copy to the new buffer if constant evaluated.
; 3506 : #if _HAS_CXX20
; 3507 :         const bool _Check_overlap = _Count <= _Mypair._Myval2._Myres - _Old_size && !_STD is_constant_evaluated();

  00057	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  00062	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00066	48 2b c1	 sub	 rax, rcx
  00069	48 39 85 a8 00
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00070	77 12		 ja	 SHORT $LN9@insert
  00072	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00077	0f b6 c0	 movzx	 eax, al
  0007a	85 c0		 test	 eax, eax
  0007c	75 06		 jne	 SHORT $LN9@insert
  0007e	c6 45 69 01	 mov	 BYTE PTR tv81[rbp], 1
  00082	eb 04		 jmp	 SHORT $LN10@insert
$LN9@insert:
  00084	c6 45 69 00	 mov	 BYTE PTR tv81[rbp], 0
$LN10@insert:
  00088	0f b6 45 69	 movzx	 eax, BYTE PTR tv81[rbp]
  0008c	88 45 08	 mov	 BYTE PTR _Check_overlap$[rbp], al

; 3508 : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 3509 :         const bool _Check_overlap = _Count <= _Mypair._Myval2._Myres - _Old_size;
; 3510 : #endif // _HAS_CXX20
; 3511 : 
; 3512 :         if (_Check_overlap) {

  0008f	0f b6 45 08	 movzx	 eax, BYTE PTR _Check_overlap$[rbp]
  00093	85 c0		 test	 eax, eax
  00095	0f 84 49 01 00
	00		 je	 $LN2@insert

; 3513 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3514 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  0009b	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  000a2	48 8b 4d 00	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  000a6	48 03 c8	 add	 rcx, rax
  000a9	48 8b c1	 mov	 rax, rcx
  000ac	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b3	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3515 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  000b7	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000c6	48 89 45 10	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 3516 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  000ca	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Off$[rbp]
  000d1	48 8b 4d 10	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  000d5	48 03 c8	 add	 rcx, rax
  000d8	48 8b c1	 mov	 rax, rcx
  000db	48 89 45 18	 mov	 QWORD PTR _Insert_at$2[rbp], rax

; 3517 :             // the range [_Ptr, _Ptr + _Ptr_shifted_after) is left alone by moving the suffix out,
; 3518 :             // while the range [_Ptr + _Ptr_shifted_after, _Ptr + _Count) shifts down by _Count
; 3519 :             size_type _Ptr_shifted_after;
; 3520 :             if (_Ptr + _Count <= _Insert_at || _Ptr > _Old_ptr + _Old_size) {

  000df	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  000e6	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000ed	48 03 c8	 add	 rcx, rax
  000f0	48 8b c1	 mov	 rax, rcx
  000f3	48 3b 45 18	 cmp	 rax, QWORD PTR _Insert_at$2[rbp]
  000f7	76 17		 jbe	 SHORT $LN5@insert
  000f9	48 8b 45 00	 mov	 rax, QWORD PTR _Old_size$[rbp]
  000fd	48 8b 4d 10	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  00101	48 03 c8	 add	 rcx, rax
  00104	48 8b c1	 mov	 rax, rcx
  00107	48 39 85 a0 00
	00 00		 cmp	 QWORD PTR _Ptr$[rbp], rax
  0010e	76 0d		 jbe	 SHORT $LN3@insert
$LN5@insert:

; 3521 :                 // inserted content is before the shifted region, or does not alias
; 3522 :                 _Ptr_shifted_after = _Count; // none of _Ptr's data shifts

  00110	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00117	48 89 45 20	 mov	 QWORD PTR _Ptr_shifted_after$3[rbp], rax
  0011b	eb 2c		 jmp	 SHORT $LN4@insert
$LN3@insert:

; 3523 :             } else if (_Insert_at <= _Ptr) { // all of [_Ptr, _Ptr + _Count) shifts

  0011d	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00124	48 39 45 18	 cmp	 QWORD PTR _Insert_at$2[rbp], rax
  00128	77 0a		 ja	 SHORT $LN6@insert

; 3524 :                 _Ptr_shifted_after = 0;

  0012a	48 c7 45 20 00
	00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$3[rbp], 0

; 3525 :             } else { // [_Ptr, _Ptr + _Count) contains _Insert_at, so only the part after _Insert_at shifts

  00132	eb 15		 jmp	 SHORT $LN7@insert
$LN6@insert:

; 3526 :                 _Ptr_shifted_after = static_cast<size_type>(_Insert_at - _Ptr);

  00134	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  0013b	48 8b 4d 18	 mov	 rcx, QWORD PTR _Insert_at$2[rbp]
  0013f	48 2b c8	 sub	 rcx, rax
  00142	48 8b c1	 mov	 rax, rcx
  00145	48 89 45 20	 mov	 QWORD PTR _Ptr_shifted_after$3[rbp], rax
$LN7@insert:
$LN4@insert:

; 3527 :             }
; 3528 : 
; 3529 :             _Traits::move(_Insert_at + _Count, _Insert_at, _Old_size - _Off + 1); // move suffix + null down

  00149	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Off$[rbp]
  00150	48 8b 4d 00	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  00154	48 2b c8	 sub	 rcx, rax
  00157	48 8b c1	 mov	 rax, rcx
  0015a	48 ff c0	 inc	 rax
  0015d	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00164	48 8b 55 18	 mov	 rdx, QWORD PTR _Insert_at$2[rbp]
  00168	48 03 d1	 add	 rdx, rcx
  0016b	48 8b ca	 mov	 rcx, rdx
  0016e	4c 8b c0	 mov	 r8, rax
  00171	48 8b 55 18	 mov	 rdx, QWORD PTR _Insert_at$2[rbp]
  00175	e8 00 00 00 00	 call	 ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::move

; 3530 :             _Traits::copy(_Insert_at, _Ptr, _Ptr_shifted_after);

  0017a	4c 8b 45 20	 mov	 r8, QWORD PTR _Ptr_shifted_after$3[rbp]
  0017e	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00185	48 8b 4d 18	 mov	 rcx, QWORD PTR _Insert_at$2[rbp]
  00189	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3531 :             _Traits::copy(

  0018e	48 8b 45 20	 mov	 rax, QWORD PTR _Ptr_shifted_after$3[rbp]
  00192	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00199	48 2b c8	 sub	 rcx, rax
  0019c	48 8b c1	 mov	 rax, rcx
  0019f	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  001a6	48 8b 95 a0 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  001ad	48 03 d1	 add	 rdx, rcx
  001b0	48 8b ca	 mov	 rcx, rdx
  001b3	48 03 4d 20	 add	 rcx, QWORD PTR _Ptr_shifted_after$3[rbp]
  001b7	48 8b 55 20	 mov	 rdx, QWORD PTR _Ptr_shifted_after$3[rbp]
  001bb	4c 8b 45 18	 mov	 r8, QWORD PTR _Insert_at$2[rbp]
  001bf	4c 03 c2	 add	 r8, rdx
  001c2	49 8b d0	 mov	 rdx, r8
  001c5	48 89 55 70	 mov	 QWORD PTR tv146[rbp], rdx
  001c9	4c 8b c0	 mov	 r8, rax
  001cc	48 8b d1	 mov	 rdx, rcx
  001cf	48 8b 45 70	 mov	 rax, QWORD PTR tv146[rbp]
  001d3	48 8b c8	 mov	 rcx, rax
  001d6	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3532 :                 _Insert_at + _Ptr_shifted_after, _Ptr + _Count + _Ptr_shifted_after, _Count - _Ptr_shifted_after);
; 3533 :             return *this;

  001db	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001e2	eb 37		 jmp	 SHORT $LN1@insert
$LN2@insert:

; 3534 :         }
; 3535 : 
; 3536 :         return _Reallocate_grow_by(

  001e4	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  001eb	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001f0	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  001f7	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001fc	4c 8b 8d 98 00
	00 00		 mov	 r9, QWORD PTR _Off$[rbp]
  00203	44 0f b6 45 68	 movzx	 r8d, BYTE PTR $T4[rbp]
  00208	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  0020f	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00216	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert'::`2'::<lambda_1>,unsigned __int64,char const *,unsigned __int64>
$LN1@insert:

; 3537 :             _Count,
; 3538 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 3539 :                 const _Elem* const _Ptr, const size_type _Count) {
; 3540 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3541 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 3542 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);
; 3543 :             },
; 3544 :             _Off, _Ptr, _Count);
; 3545 :     }

  0021b	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00222	5d		 pop	 rbp
  00223	c3		 ret	 0
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z
_TEXT	SEGMENT
tv79 = 64
tv77 = 72
this$ = 96
_Off$ = 104
_Right$ = 112
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 3468 :     _CONSTEXPR20 basic_string& insert(const size_type _Off, const basic_string& _Right) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3469 :         // insert _Right at _Off
; 3470 :         return insert(_Off, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00025	48 8b 45 70	 mov	 rax, QWORD PTR _Right$[rbp]
  00029	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002d	48 89 45 40	 mov	 QWORD PTR tv79[rbp], rax
  00031	48 8b 45 70	 mov	 rax, QWORD PTR _Right$[rbp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003d	48 89 45 48	 mov	 QWORD PTR tv77[rbp], rax
  00041	4c 8b 4d 40	 mov	 r9, QWORD PTR tv79[rbp]
  00045	4c 8b 45 48	 mov	 r8, QWORD PTR tv77[rbp]
  00049	48 8b 55 68	 mov	 rdx, QWORD PTR _Off$[rbp]
  0004d	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00051	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 3471 :     }

  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S18$ = 8
_To_delete$ = 16
this$ = 112
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3128 :     _CONSTEXPR20 ~basic_string() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3129 :         _Tidy_deallocate();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 3130 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3131 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S18$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S18$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 3132 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00044	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 45 10	 mov	 QWORD PTR _To_delete$[rbp], rax

; 3133 :         _Mypair._Myval2._Myproxy = nullptr;

  0004f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 3134 :         _Delete_plain_internal(_Alproxy, _To_delete);

  0005a	48 8b 55 10	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00062	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 3135 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3136 :     }

  00067	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b c8	 mov	 rcx, rax
  0006e	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
_My_data$ = 0
_Right_data$ = 8
tv140 = 80
this$ = 112
_Right$ = 120
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 3012 :     _CONSTEXPR20 void _Take_contents(basic_string& _Right) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3013 :         // assign by stealing _Right's buffer
; 3014 :         // pre: this != &_Right
; 3015 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 3016 :         // pre: *this owns no memory, iterators orphaned
; 3017 :         // (note: _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 3018 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 00	 mov	 QWORD PTR _My_data$[rbp], rax

; 3019 :         auto& _Right_data = _Right._Mypair._Myval2;

  0002b	48 8b 45 78	 mov	 rax, QWORD PTR _Right$[rbp]
  0002f	48 89 45 08	 mov	 QWORD PTR _Right_data$[rbp], rax

; 3020 : 
; 3021 : #if !defined(_INSERT_STRING_ANNOTATION)
; 3022 :         if constexpr (_Can_memcpy_val) {
; 3023 : #if _HAS_CXX20
; 3024 :             if (!_STD is_constant_evaluated())

  00033	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 43		 jne	 SHORT $LN2@Take_conte

; 3025 : #endif // _HAS_CXX20
; 3026 :             {
; 3027 : #if _ITERATOR_DEBUG_LEVEL != 0
; 3028 :                 if (_Right_data._Large_string_engaged()) {

  0003f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00048	0f b6 c0	 movzx	 eax, al
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN3@Take_conte

; 3029 :                     // take ownership of _Right's iterators along with its buffer
; 3030 :                     _Swap_proxy_and_iterators(_Right);

  0004f	48 8b 55 78	 mov	 rdx, QWORD PTR _Right$[rbp]
  00053	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 3031 :                 } else {

  0005c	eb 09		 jmp	 SHORT $LN4@Take_conte
$LN3@Take_conte:

; 3032 :                     _Right_data._Orphan_all();

  0005e	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN4@Take_conte:

; 3033 :                 }
; 3034 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 3035 : 
; 3036 :                 _Memcpy_val_from(_Right);

  00067	48 8b 55 78	 mov	 rdx, QWORD PTR _Right$[rbp]
  0006b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0006f	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from

; 3037 :                 _Right._Tidy_init();

  00074	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  00078	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 3038 :                 return;

  0007d	e9 af 00 00 00	 jmp	 $LN1@Take_conte
$LN2@Take_conte:

; 3039 :             }
; 3040 :         }
; 3041 : #endif // !defined(_INSERT_STRING_ANNOTATION)
; 3042 : 
; 3043 :         if (_Right_data._Large_string_engaged()) { // steal buffer

  00082	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00086	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  0008b	0f b6 c0	 movzx	 eax, al
  0008e	85 c0		 test	 eax, eax
  00090	74 33		 je	 SHORT $LN5@Take_conte

; 3044 :             _Construct_in_place(_My_data._Bx._Ptr, _Right_data._Bx._Ptr);

  00092	48 8b 45 08	 mov	 rax, QWORD PTR _Right_data$[rbp]
  00096	48 83 c0 08	 add	 rax, 8
  0009a	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0009e	48 83 c1 08	 add	 rcx, 8
  000a2	48 8b d0	 mov	 rdx, rax
  000a5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEAPEAD@std@@YAXAEAPEAD0@Z ; std::_Construct_in_place<char *,char * &>

; 3045 :             _Right_data._Bx._Ptr = nullptr;

  000aa	48 8b 45 08	 mov	 rax, QWORD PTR _Right_data$[rbp]
  000ae	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 3046 :             _Swap_proxy_and_iterators(_Right);

  000b6	48 8b 55 78	 mov	 rdx, QWORD PTR _Right$[rbp]
  000ba	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000be	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators

; 3047 :         } else { // copy small string buffer

  000c3	eb 43		 jmp	 SHORT $LN6@Take_conte
$LN5@Take_conte:

; 3048 :             _My_data._Activate_SSO_buffer();

  000c5	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000c9	e8 00 00 00 00	 call	 ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer

; 3049 :             _Traits::copy(_My_data._Bx._Buf, _Right_data._Bx._Buf, _Right_data._Mysize + 1);

  000ce	48 8b 45 08	 mov	 rax, QWORD PTR _Right_data$[rbp]
  000d2	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000d6	48 ff c0	 inc	 rax
  000d9	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  000dd	48 83 c1 08	 add	 rcx, 8
  000e1	48 8b 55 00	 mov	 rdx, QWORD PTR _My_data$[rbp]
  000e5	48 83 c2 08	 add	 rdx, 8
  000e9	48 89 55 50	 mov	 QWORD PTR tv140[rbp], rdx
  000ed	4c 8b c0	 mov	 r8, rax
  000f0	48 8b d1	 mov	 rdx, rcx
  000f3	48 8b 45 50	 mov	 rax, QWORD PTR tv140[rbp]
  000f7	48 8b c8	 mov	 rcx, rax
  000fa	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 3050 :             _Right_data._Orphan_all();

  000ff	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00103	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
$LN6@Take_conte:

; 3051 :         }
; 3052 : 
; 3053 :         _My_data._Myres  = _Right_data._Myres;

  00108	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0010c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00110	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  00114	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 3054 :         _My_data._Mysize = _Right_data._Mysize;

  00118	48 8b 45 00	 mov	 rax, QWORD PTR _My_data$[rbp]
  0011c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00120	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00124	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3055 : 
; 3056 :         _Right._Tidy_init();

  00128	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  0012c	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
$LN1@Take_conte:

; 3057 :     }

  00131	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00135	5d		 pop	 rbp
  00136	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 0
_Right_data_mem$ = 8
this$ = 96
_Right$ = 104
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 3003 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3004 :         _STL_INTERNAL_CHECK(_Can_memcpy_val);
; 3005 :         const auto _My_data_mem =

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0002c	48 83 c0 08	 add	 rax, 8
  00030	48 89 45 00	 mov	 QWORD PTR _My_data_mem$[rbp], rax

; 3006 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 3007 :         const auto _Right_data_mem =

  00034	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00040	48 83 c0 08	 add	 rax, 8
  00044	48 89 45 08	 mov	 QWORD PTR _Right_data_mem$[rbp], rax

; 3008 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 3009 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00048	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  0004e	48 8b 55 08	 mov	 rdx, QWORD PTR _Right_data_mem$[rbp]
  00052	48 8b 4d 00	 mov	 rcx, QWORD PTR _My_data_mem$[rbp]
  00056	e8 00 00 00 00	 call	 memcpy

; 3010 :     }

  0005b	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z
_TEXT	SEGMENT
_New_size$ = 0
_New_capacity$ = 8
_My_data$ = 16
_Ptr$ = 24
_Alproxy$ = 32
$S38$ = 40
_Proxy$ = 48
_Fancyptr$1 = 64
$T2 = 136
$T3 = 137
$T4 = 138
$T5 = 139
tv78 = 144
tv76 = 152
this$ = 176
__formal$ = 184
_Source_of_al$ = 192
_Left_ptr$ = 200
_Left_size$ = 208
_Right_ptr$ = 216
_Right_size$ = 224
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2788 :             _One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Source_of_al._Getal())) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2787 :         : _Mypair(

  0002c	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00033	48 89 85 90 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Source_of_al$[rbp]
  00041	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00050	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00055	48 89 85 98 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0005c	0f b6 85 89 00
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  00063	88 85 8a 00 00
	00		 mov	 BYTE PTR $T4[rbp], al
  00069	4c 8b 85 98 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00070	0f b6 95 8a 00
	00 00		 movzx	 edx, BYTE PTR $T4[rbp]
  00077	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0007e	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00083	90		 npad	 1

; 2789 :         _STL_INTERNAL_CHECK(_Left_size <= max_size());
; 2790 :         _STL_INTERNAL_CHECK(_Right_size <= max_size());
; 2791 :         _STL_INTERNAL_CHECK(_Right_size <= max_size() - _Left_size);
; 2792 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  00084	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Right_size$[rbp]
  0008b	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR _Left_size$[rbp]
  00092	48 03 c8	 add	 rcx, rax
  00095	48 8b c1	 mov	 rax, rcx
  00098	48 89 45 00	 mov	 QWORD PTR _New_size$[rbp], rax

; 2793 :         size_type _New_capacity = _BUF_SIZE - 1;

  0009c	48 c7 45 08 0f
	00 00 00	 mov	 QWORD PTR _New_capacity$[rbp], 15

; 2794 :         auto& _My_data          = _Mypair._Myval2;

  000a4	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ab	48 89 45 10	 mov	 QWORD PTR _My_data$[rbp], rax

; 2795 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _My_data$[rbp]
  000b3	48 83 c0 08	 add	 rax, 8
  000b7	48 89 45 18	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2796 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  000bb	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c2	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000c7	48 8b d0	 mov	 rdx, rax
  000ca	48 8d 4d 28	 lea	 rcx, QWORD PTR $S38$[rbp]
  000ce	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  000d3	48 8d 45 28	 lea	 rax, QWORD PTR $S38$[rbp]
  000d7	48 89 45 20	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2797 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws

  000db	4c 8b 45 10	 mov	 r8, QWORD PTR _My_data$[rbp]
  000df	48 8b 55 20	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  000e3	48 8d 4d 30	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000e7	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000ec	90		 npad	 1

; 2798 : 
; 2799 :         if (_New_capacity < _New_size) {

  000ed	48 8b 45 00	 mov	 rax, QWORD PTR _New_size$[rbp]
  000f1	48 39 45 08	 cmp	 QWORD PTR _New_capacity$[rbp], rax
  000f5	0f 83 87 00 00
	00		 jae	 $LN2@basic_stri

; 2800 :             _New_capacity = _Calculate_growth(_New_size, _BUF_SIZE - 1, max_size());

  000fb	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00102	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00107	4c 8b c0	 mov	 r8, rax
  0010a	ba 0f 00 00 00	 mov	 edx, 15
  0010f	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_size$[rbp]
  00113	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00118	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2801 :             ++_New_capacity;

  0011c	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00120	48 ff c0	 inc	 rax
  00123	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2802 :             const pointer _Fancyptr = _Allocate_at_least_helper(_Getal(), _New_capacity); // throws

  00127	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0012e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00133	48 8d 55 08	 lea	 rdx, QWORD PTR _New_capacity$[rbp]
  00137	48 8b c8	 mov	 rcx, rax
  0013a	e8 00 00 00 00	 call	 ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char> >
  0013f	48 89 45 40	 mov	 QWORD PTR _Fancyptr$1[rbp], rax

; 2803 :             --_New_capacity;

  00143	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00147	48 ff c8	 dec	 rax
  0014a	48 89 45 08	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2804 :             _Ptr = _Unfancy(_Fancyptr);

  0014e	48 8b 4d 40	 mov	 rcx, QWORD PTR _Fancyptr$1[rbp]
  00152	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00157	48 89 45 18	 mov	 QWORD PTR _Ptr$[rbp], rax

; 2805 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  0015b	48 8b 45 10	 mov	 rax, QWORD PTR _My_data$[rbp]
  0015f	48 83 c0 08	 add	 rax, 8
  00163	48 8d 55 40	 lea	 rdx, QWORD PTR _Fancyptr$1[rbp]
  00167	48 8b c8	 mov	 rcx, rax
  0016a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2806 : 
; 2807 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);

  0016f	48 8b 45 08	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00173	48 ff c0	 inc	 rax
  00176	48 8b d0	 mov	 rdx, rax
  00179	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0017d	e8 00 00 00 00	 call	 ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
$LN2@basic_stri:

; 2808 :         }
; 2809 : 
; 2810 :         _My_data._Mysize = _New_size;

  00182	48 8b 45 10	 mov	 rax, QWORD PTR _My_data$[rbp]
  00186	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_size$[rbp]
  0018a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2811 :         _My_data._Myres  = _New_capacity;

  0018e	48 8b 45 10	 mov	 rax, QWORD PTR _My_data$[rbp]
  00192	48 8b 4d 08	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  00196	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 2812 :         _Traits::copy(_Ptr, _Left_ptr, _Left_size);

  0019a	4c 8b 85 d0 00
	00 00		 mov	 r8, QWORD PTR _Left_size$[rbp]
  001a1	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Left_ptr$[rbp]
  001a8	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  001ac	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2813 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  001b1	48 8b 85 d0 00
	00 00		 mov	 rax, QWORD PTR _Left_size$[rbp]
  001b8	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  001bc	48 03 c8	 add	 rcx, rax
  001bf	48 8b c1	 mov	 rax, rcx
  001c2	4c 8b 85 e0 00
	00 00		 mov	 r8, QWORD PTR _Right_size$[rbp]
  001c9	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR _Right_ptr$[rbp]
  001d0	48 8b c8	 mov	 rcx, rax
  001d3	e8 00 00 00 00	 call	 ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Char_traits<char,int>::copy

; 2814 :         _Traits::assign(_Ptr[_New_size], _Elem());

  001d8	c6 85 8b 00 00
	00 00		 mov	 BYTE PTR $T5[rbp], 0
  001df	48 8b 45 00	 mov	 rax, QWORD PTR _New_size$[rbp]
  001e3	48 8b 4d 18	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  001e7	48 03 c8	 add	 rcx, rax
  001ea	48 8b c1	 mov	 rax, rcx
  001ed	48 8d 95 8b 00
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  001f4	48 8b c8	 mov	 rcx, rax
  001f7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2815 :         _ASAN_STRING_CREATE(*this);
; 2816 :         _Proxy._Release();

  001fc	48 8d 4d 30	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00200	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  00205	90		 npad	 1

; 2817 :     }

  00206	48 8d 4d 30	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0020a	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0020f	90		 npad	 1
  00210	48 8b 85 b0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00217	48 8d a5 a0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+160]
  0021e	5d		 pop	 rbp
  0021f	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 0
_New_capacity$ = 8
_My_data$ = 16
_Ptr$ = 24
_Alproxy$ = 32
$S38$ = 40
_Proxy$ = 48
_Fancyptr$1 = 64
$T2 = 136
$T3 = 137
$T4 = 138
$T5 = 139
tv78 = 144
tv76 = 152
this$ = 176
__formal$ = 184
_Source_of_al$ = 192
_Left_ptr$ = 200
_Left_size$ = 208
_Right_ptr$ = 216
_Right_size$ = 224
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00016	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001a	5d		 pop	 rbp
  0001b	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
_New_size$ = 0
_New_capacity$ = 8
_My_data$ = 16
_Ptr$ = 24
_Alproxy$ = 32
$S38$ = 40
_Proxy$ = 48
_Fancyptr$1 = 64
$T2 = 136
$T3 = 137
$T4 = 138
$T5 = 139
tv78 = 144
tv76 = 152
this$ = 176
__formal$ = 184
_Source_of_al$ = 192
_Left_ptr$ = 200
_Left_size$ = 208
_Right_ptr$ = 216
_Right_size$ = 224
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8d 4d 30	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
$T3 = 66
tv92 = 72
tv75 = 72
tv73 = 80
this$ = 112
_Right$ = 120
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2764 :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00023	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 89 45 48	 mov	 QWORD PTR tv75[rbp], rax
  0002b	48 8b 4d 78	 mov	 rcx, QWORD PTR _Right$[rbp]
  0002f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00034	48 89 45 50	 mov	 QWORD PTR tv73[rbp], rax
  00038	0f b6 45 40	 movzx	 eax, BYTE PTR $T1[rbp]
  0003c	88 45 41	 mov	 BYTE PTR $T2[rbp], al
  0003f	4c 8b 45 50	 mov	 r8, QWORD PTR tv73[rbp]
  00043	0f b6 55 41	 movzx	 edx, BYTE PTR $T2[rbp]
  00047	48 8b 4d 48	 mov	 rcx, QWORD PTR tv75[rbp]
  0004b	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >

; 2765 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00050	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00054	48 89 45 48	 mov	 QWORD PTR tv92[rbp], rax
  00058	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00061	48 8b d0	 mov	 rdx, rax
  00064	48 8d 4d 42	 lea	 rcx, QWORD PTR $T3[rbp]
  00068	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006d	48 8b d0	 mov	 rdx, rax
  00070	48 8b 4d 48	 mov	 rcx, QWORD PTR tv92[rbp]
  00074	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2766 :         _Take_contents(_Right);

  00079	48 8b 55 78	 mov	 rdx, QWORD PTR _Right$[rbp]
  0007d	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00081	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2767 :     }

  00086	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0008a	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_Ptr$ = 96
_Size$ = 104
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes, COMDAT

; 2591 :     static constexpr void _Start_element_lifetimes(_Elem* const _Ptr, const size_type _Size) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2592 :         // Start element lifetimes to avoid UB. This is a more general mechanism than _String_val::_Activate_SSO_buffer,
; 2593 :         // but likely more impactful to throughput.
; 2594 : #if _HAS_CXX20
; 2595 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 37		 je	 SHORT $LN5@Start_elem

; 2596 :             for (size_type _Idx = 0; _Idx < _Size; ++_Idx) {

  0002c	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00034	eb 0b		 jmp	 SHORT $LN4@Start_elem
$LN2@Start_elem:
  00036	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Start_elem:
  00041	48 8b 45 68	 mov	 rax, QWORD PTR _Size$[rbp]
  00045	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  00049	73 18		 jae	 SHORT $LN3@Start_elem

; 2597 :                 _STD construct_at(_Ptr + _Idx);

  0004b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0004f	48 8b 4d 60	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00053	48 03 c8	 add	 rcx, rax
  00056	48 8b c1	 mov	 rax, rcx
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??$construct_at@D$$V$0A@@std@@YAPEADQEAD@Z ; std::construct_at<char,0>

; 2598 :             }

  00061	eb d3		 jmp	 SHORT $LN2@Start_elem
$LN3@Start_elem:
$LN5@Start_elem:

; 2599 :         }
; 2600 : #else // ^^^ C++20-or-later / pre-C++20 vvv
; 2601 :         (void) _Ptr;
; 2602 :         (void) _Size;
; 2603 : #endif // _HAS_CXX20
; 2604 :     }

  00063	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Start_element_lifetimes@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXQEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Start_element_lifetimes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv86 = 72
tv69 = 72
this$ = 96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2479 :     basic_string() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>

; 2480 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv86[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv86[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 2481 :         _Tidy_init();

  00059	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2482 :     }

  00062	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00066	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00013	48 83 c0 08	 add	 rax, 8
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 96
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00010	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00017	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001c	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00020	48 8b 7d 60	 mov	 rdi, QWORD PTR this$[rbp]
  00024	33 c0		 xor	 eax, eax
  00026	b9 10 00 00 00	 mov	 ecx, 16
  0002b	f3 aa		 rep stosb
  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00035	5f		 pop	 rdi
  00036	5d		 pop	 rbp
  00037	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2271 :     [[noreturn]] static void _Xran() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2272 :         _Xout_of_range("invalid string position");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001e	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2273 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 80
_Off$ = 88
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Off$[rbp]
  00028	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  0002c	73 05		 jae	 SHORT $LN2@Check_offs

; 2260 :             _Xran();

  0002e	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2261 :         }
; 2262 :     }

  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Idx$1 = 0
this$ = 96
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer, COMDAT

; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 30		 je	 SHORT $LN5@Activate_S

; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {

  00027	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  0002f	eb 0b		 jmp	 SHORT $LN4@Activate_S
$LN2@Activate_S:
  00031	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00035	48 ff c0	 inc	 rax
  00038	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@Activate_S:
  0003c	48 83 7d 00 10	 cmp	 QWORD PTR _Idx$1[rbp], 16
  00041	73 14		 jae	 SHORT $LN5@Activate_S

; 2251 :                 _Bx._Buf[_Idx] = value_type();

  00043	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00047	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 2252 :             }

  00055	eb da		 jmp	 SHORT $LN2@Activate_S
$LN5@Activate_S:

; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }

  00057	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 64
this$ = 96
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2243 :         return _BUF_SIZE <= _Myres;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00024	72 09		 jb	 SHORT $LN3@Large_stri
  00026	c7 45 40 01 00
	00 00		 mov	 DWORD PTR tv66[rbp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  0002f	c7 45 40 00 00
	00 00		 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  00036	0f b6 45 40	 movzx	 eax, BYTE PTR tv66[rbp]

; 2244 :     }

  0003a	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2234 :         const value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2235 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2236 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2237 :         }
; 2238 : 
; 2239 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2240 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 0
this$ = 96
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2225 :         value_type* _Result = _Bx._Buf;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 c0 08	 add	 rax, 8
  00023	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax

; 2226 :         if (_Large_string_engaged()) {

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 11		 je	 SHORT $LN2@Myptr

; 2227 :             _Result = _Unfancy(_Bx._Ptr);

  00037	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00044	48 89 45 00	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2228 :         }
; 2229 : 
; 2230 :         return _Result;

  00048	48 8b 45 00	 mov	 rax, QWORD PTR _Result$[rbp]

; 2231 :     }

  0004c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 2214 : 
; 2215 :     // length of internal buffer, [1, 16]:
; 2216 :     static constexpr size_type _BUF_SIZE = 16 / sizeof(value_type) < 1 ? 1 : 16 / sizeof(value_type);
; 2217 :     // roundup mask for allocated buffers, [0, 15]:
; 2218 :     static constexpr size_type _ALLOC_MASK = sizeof(value_type) <= 1 ? 15
; 2219 :                                            : sizeof(value_type) <= 2 ? 7
; 2220 :                                            : sizeof(value_type) <= 4 ? 3
; 2221 :                                            : sizeof(value_type) <= 8 ? 1
; 2222 :                                                                      : 0;
; 2223 : 
; 2224 :     _CONSTEXPR20 value_type* _Myptr() noexcept {
; 2225 :         value_type* _Result = _Bx._Buf;
; 2226 :         if (_Large_string_engaged()) {
; 2227 :             _Result = _Unfancy(_Bx._Ptr);
; 2228 :         }
; 2229 : 
; 2230 :         return _Result;
; 2231 :     }
; 2232 : 
; 2233 :     _CONSTEXPR20 const value_type* _Myptr() const noexcept {
; 2234 :         const value_type* _Result = _Bx._Buf;
; 2235 :         if (_Large_string_engaged()) {
; 2236 :             _Result = _Unfancy(_Bx._Ptr);
; 2237 :         }
; 2238 : 
; 2239 :         return _Result;
; 2240 :     }
; 2241 : 
; 2242 :     _CONSTEXPR20 bool _Large_string_engaged() const noexcept {
; 2243 :         return _BUF_SIZE <= _Myres;
; 2244 :     }
; 2245 : 
; 2246 :     constexpr void _Activate_SSO_buffer() noexcept {
; 2247 :         // start the lifetime of the array elements
; 2248 : #if _HAS_CXX20
; 2249 :         if (_STD is_constant_evaluated()) {
; 2250 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2251 :                 _Bx._Buf[_Idx] = value_type();
; 2252 :             }
; 2253 :         }
; 2254 : #endif // _HAS_CXX20
; 2255 :     }
; 2256 : 
; 2257 :     _CONSTEXPR20 void _Check_offset(const size_type _Off) const {
; 2258 :         // checks whether _Off is in the bounds of [0, size()]
; 2259 :         if (_Mysize < _Off) {
; 2260 :             _Xran();
; 2261 :         }
; 2262 :     }
; 2263 : 
; 2264 :     _CONSTEXPR20 void _Check_offset_exclusive(const size_type _Off) const {
; 2265 :         // checks whether _Off is in the bounds of [0, size())
; 2266 :         if (_Mysize <= _Off) {
; 2267 :             _Xran();
; 2268 :         }
; 2269 :     }
; 2270 : 
; 2271 :     [[noreturn]] static void _Xran() {
; 2272 :         _Xout_of_range("invalid string position");
; 2273 :     }
; 2274 : 
; 2275 :     _CONSTEXPR20 size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {
; 2276 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2277 :         return (_STD min)(_Size, _Mysize - _Off);
; 2278 :     }
; 2279 : 
; 2280 :     union _Bxty { // storage for small buffer or pointer to larger one
; 2281 :         // This constructor previously initialized _Ptr. Don't rely on the new behavior without
; 2282 :         // renaming `_String_val` (and fixing the visualizer).
; 2283 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers
; 2284 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers
; 2285 : 
; 2286 :         value_type _Buf[_BUF_SIZE];
; 2287 :         pointer _Ptr;
; 2288 :         char _Alias[_BUF_SIZE]; // TRANSITION, ABI: _Alias is preserved for binary compatibility (especially /clr)
; 2289 :     };
; 2290 :     _Bxty _Bx;
; 2291 : 
; 2292 :     size_type _Mysize = 0; // current length of string

  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 2293 :     size_type _Myres  = 0; // current storage reserved for string

  00040	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00044	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0

; 2213 :     _CONSTEXPR20 _String_val() noexcept : _Bx() {}

  0004c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 80
_Al$ = 88
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 740  :     _NODISCARD static _CONSTEXPR20 _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 741  :         return _Al;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 742  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 80
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 736  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 737  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0001b	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 738  :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 55 60	 mov	 rdx, QWORD PTR _Count$[rbp]
  000ae	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000b7	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2310 : [[noreturn]] inline void _Xlen_string() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2311 :     _Xlength_error("string too long");

  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen_strin:

; 2312 : }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 439  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 440  : #if _HAS_CXX20
; 441  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@assign

; 442  :             return _Primary_char_traits::assign(_Left, _Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00034	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Char_traits<char,int>::assign
  00039	eb 0d		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 443  :         }
; 444  : #endif // _HAS_CXX20
; 445  :         _Left = _Right;

  0003b	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  0003f	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00046	88 08		 mov	 BYTE PTR [rax], cl
$LN1@assign:

; 446  :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 64
tv69 = 72
_First$ = 96
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 386  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 387  :         // find length of null-terminated string
; 388  : #if _HAS_CXX17
; 389  : #ifdef __cpp_char8_t
; 390  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 391  : #if _HAS_U8_INTRINSICS
; 392  :             return __builtin_u8strlen(_First);
; 393  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 394  :             return _Primary_char_traits::length(_First);
; 395  : #endif // _HAS_U8_INTRINSICS
; 396  :         } else
; 397  : #endif // __cpp_char8_t
; 398  :         {
; 399  :             return __builtin_strlen(_First);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  0001f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00023	48 c7 45 48 ff
	ff ff ff	 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  0002b	48 ff 45 48	 inc	 QWORD PTR tv69[rbp]
  0002f	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]
  00033	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00037	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  0003b	75 ee		 jne	 SHORT $LL3@length
  0003d	48 8b 45 48	 mov	 rax, QWORD PTR tv69[rbp]

; 400  :         }
; 401  : #else // _HAS_CXX17
; 402  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 403  : #endif // _HAS_CXX17
; 404  :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z PROC	; std::_Char_traits<char,int>::assign, COMDAT

; 181  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 182  : #if _HAS_CXX20
; 183  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@assign

; 184  :             _STD construct_at(_STD addressof(_Left), _Right);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPEADAEAD@Z ; std::addressof<char>
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ; std::construct_at<char,char const &,0>

; 185  :         } else

  00041	eb 0d		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 186  : #endif // _HAS_CXX20
; 187  :         {
; 188  :             _Left = _Right;

  00043	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0004e	88 08		 mov	 BYTE PTR [rax], cl
$LN3@assign:

; 189  :         }
; 190  :     }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ENDP	; std::_Char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_Loop_forward$1 = 0
_Src$2 = 8
_Idx$3 = 16
_Idx$4 = 24
_First1$ = 112
_First2$ = 120
_Count$ = 128
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 80   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN16:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 81   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 82   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 83   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 84   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 85   : #if _HAS_CXX20
; 86   :         if (_STD is_constant_evaluated()) {

  00028	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	0f 84 db 00 00
	00		 je	 $LN11@move

; 87   :             // dest: [_First1, _First1 + _Count)
; 88   :             // src: [_First2, _First2 + _Count)
; 89   :             // We need to handle overlapping ranges.
; 90   :             // If _First1 is in the src range, we need a backward loop.
; 91   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 92   : 
; 93   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 94   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 95   :             bool _Loop_forward = true;

  00038	c6 45 00 01	 mov	 BYTE PTR _Loop_forward$1[rbp], 1

; 96   : 
; 97   :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {

  0003c	48 8b 45 78	 mov	 rax, QWORD PTR _First2$[rbp]
  00040	48 89 45 08	 mov	 QWORD PTR _Src$2[rbp], rax
  00044	eb 0b		 jmp	 SHORT $LN4@move
$LN2@move:
  00046	48 8b 45 08	 mov	 rax, QWORD PTR _Src$2[rbp]
  0004a	48 ff c0	 inc	 rax
  0004d	48 89 45 08	 mov	 QWORD PTR _Src$2[rbp], rax
$LN4@move:
  00051	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00058	48 8b 4d 78	 mov	 rcx, QWORD PTR _First2$[rbp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 39 45 08	 cmp	 QWORD PTR _Src$2[rbp], rax
  00066	74 12		 je	 SHORT $LN3@move

; 98   :                 if (_First1 == _Src) {

  00068	48 8b 45 08	 mov	 rax, QWORD PTR _Src$2[rbp]
  0006c	48 39 45 70	 cmp	 QWORD PTR _First1$[rbp], rax
  00070	75 06		 jne	 SHORT $LN12@move

; 99   :                     _Loop_forward = false;

  00072	c6 45 00 00	 mov	 BYTE PTR _Loop_forward$1[rbp], 0

; 100  :                     break;

  00076	eb 02		 jmp	 SHORT $LN3@move
$LN12@move:

; 101  :                 }
; 102  :             }

  00078	eb cc		 jmp	 SHORT $LN2@move
$LN3@move:

; 103  : 
; 104  :             if (_Loop_forward) {

  0007a	0f b6 45 00	 movzx	 eax, BYTE PTR _Loop_forward$1[rbp]
  0007e	85 c0		 test	 eax, eax
  00080	74 47		 je	 SHORT $LN13@move

; 105  :                 for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00082	48 c7 45 10 00
	00 00 00	 mov	 QWORD PTR _Idx$3[rbp], 0
  0008a	eb 0b		 jmp	 SHORT $LN7@move
$LN5@move:
  0008c	48 8b 45 10	 mov	 rax, QWORD PTR _Idx$3[rbp]
  00090	48 ff c0	 inc	 rax
  00093	48 89 45 10	 mov	 QWORD PTR _Idx$3[rbp], rax
$LN7@move:
  00097	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0009e	48 39 45 10	 cmp	 QWORD PTR _Idx$3[rbp], rax
  000a2	74 23		 je	 SHORT $LN6@move

; 106  :                     _First1[_Idx] = _First2[_Idx];

  000a4	48 8b 45 10	 mov	 rax, QWORD PTR _Idx$3[rbp]
  000a8	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  000ac	48 03 c8	 add	 rcx, rax
  000af	48 8b c1	 mov	 rax, rcx
  000b2	48 8b 4d 10	 mov	 rcx, QWORD PTR _Idx$3[rbp]
  000b6	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  000ba	48 03 d1	 add	 rdx, rcx
  000bd	48 8b ca	 mov	 rcx, rdx
  000c0	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  000c3	88 08		 mov	 BYTE PTR [rax], cl

; 107  :                 }

  000c5	eb c5		 jmp	 SHORT $LN5@move
$LN6@move:

; 108  :             } else {

  000c7	eb 44		 jmp	 SHORT $LN14@move
$LN13@move:

; 109  :                 for (size_t _Idx = _Count; _Idx != 0; --_Idx) {

  000c9	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  000d0	48 89 45 18	 mov	 QWORD PTR _Idx$4[rbp], rax
  000d4	eb 0b		 jmp	 SHORT $LN10@move
$LN8@move:
  000d6	48 8b 45 18	 mov	 rax, QWORD PTR _Idx$4[rbp]
  000da	48 ff c8	 dec	 rax
  000dd	48 89 45 18	 mov	 QWORD PTR _Idx$4[rbp], rax
$LN10@move:
  000e1	48 83 7d 18 00	 cmp	 QWORD PTR _Idx$4[rbp], 0
  000e6	74 25		 je	 SHORT $LN14@move

; 110  :                     _First1[_Idx - 1] = _First2[_Idx - 1];

  000e8	48 8b 45 18	 mov	 rax, QWORD PTR _Idx$4[rbp]
  000ec	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  000f0	48 03 c8	 add	 rcx, rax
  000f3	48 8b c1	 mov	 rax, rcx
  000f6	48 8b 4d 18	 mov	 rcx, QWORD PTR _Idx$4[rbp]
  000fa	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  000fe	48 03 d1	 add	 rdx, rcx
  00101	48 8b ca	 mov	 rcx, rdx
  00104	0f b6 49 ff	 movzx	 ecx, BYTE PTR [rcx-1]
  00108	88 48 ff	 mov	 BYTE PTR [rax-1], cl

; 111  :                 }

  0010b	eb c9		 jmp	 SHORT $LN8@move
$LN14@move:

; 112  :             }
; 113  : 
; 114  :             return _First1;

  0010d	48 8b 45 70	 mov	 rax, QWORD PTR _First1$[rbp]
  00111	eb 18		 jmp	 SHORT $LN1@move
$LN11@move:

; 115  :         }
; 116  : #endif // _HAS_CXX20
; 117  : 
; 118  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00113	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  0011a	48 8b 55 78	 mov	 rdx, QWORD PTR _First2$[rbp]
  0011e	48 8b 4d 70	 mov	 rcx, QWORD PTR _First1$[rbp]
  00122	e8 00 00 00 00	 call	 memmove

; 119  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 120  : 
; 121  :         return _First1;

  00127	48 8b 45 70	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@move:

; 122  :     }

  0012b	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0012f	5d		 pop	 rbp
  00130	c3		 ret	 0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_First1$ = 96
_First2$ = 104
_Count$ = 112
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #if _HAS_CXX20
; 55   :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 48		 je	 SHORT $LN5@copy

; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap
; 57   :             for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00031	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00039	eb 0b		 jmp	 SHORT $LN4@copy
$LN2@copy:
  0003b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003f	48 ff c0	 inc	 rax
  00042	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@copy:
  00046	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  0004a	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  0004e	74 23		 je	 SHORT $LN3@copy

; 58   :                 _First1[_Idx] = _First2[_Idx];

  00050	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00058	48 03 c8	 add	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00062	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00066	48 03 d1	 add	 rdx, rcx
  00069	48 8b ca	 mov	 rcx, rdx
  0006c	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0006f	88 08		 mov	 BYTE PTR [rax], cl

; 59   :             }

  00071	eb c8		 jmp	 SHORT $LN2@copy
$LN3@copy:

; 60   : 
; 61   :             return _First1;

  00073	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
  00077	eb 15		 jmp	 SHORT $LN1@copy
$LN5@copy:

; 62   :         }
; 63   : #endif // _HAS_CXX20
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00079	4c 8b 45 70	 mov	 r8, QWORD PTR _Count$[rbp]
  0007d	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  00081	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00085	e8 00 00 00 00	 call	 memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

  0008a	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@copy:

; 69   :     }

  0008e	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT

; 295  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 296  : #if _HAS_CXX20
; 297  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@assign

; 298  :             return _Primary_char_traits::assign(_Left, _Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00034	e8 00 00 00 00	 call	 ?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z ; std::_Char_traits<wchar_t,unsigned short>::assign
  00039	eb 0e		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 299  :         }
; 300  : #endif // _HAS_CXX20
; 301  :         _Left = _Right;

  0003b	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  0003f	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00046	66 89 08	 mov	 WORD PTR [rax], cx
$LN1@assign:

; 302  :     }

  00049	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
_TEXT	SEGMENT
tv68 = 64
tv69 = 72
_First$ = 96
?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z PROC	; std::_WChar_traits<wchar_t>::length, COMDAT

; 256  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* _First) noexcept /* strengthened */ {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 257  :         // find length of null-terminated sequence
; 258  : #if _HAS_CXX17
; 259  :         if constexpr (is_same_v<_Elem, wchar_t>) {
; 260  :             return __builtin_wcslen(_First);

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR _First$[rbp]
  0001f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00023	48 c7 45 48 ff
	ff ff ff	 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  0002b	48 ff 45 48	 inc	 QWORD PTR tv69[rbp]
  0002f	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]
  00033	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  00037	66 83 3c 48 00	 cmp	 WORD PTR [rax+rcx*2], 0
  0003c	75 ed		 jne	 SHORT $LL3@length
  0003e	48 8b 45 48	 mov	 rax, QWORD PTR tv69[rbp]

; 261  :         } else {
; 262  :             return _Primary_char_traits::length(_First);
; 263  :         }
; 264  : #else // _HAS_CXX17
; 265  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));
; 266  : #endif // _HAS_CXX17
; 267  :     }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 80
_Right$ = 88
?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z PROC	; std::_Char_traits<wchar_t,unsigned short>::assign, COMDAT

; 181  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 182  : #if _HAS_CXX20
; 183  :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@assign

; 184  :             _STD construct_at(_STD addressof(_Left), _Right);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Left$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@_W@std@@YAPEA_WAEA_W@Z ; std::addressof<wchar_t>
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@_WAEB_W$0A@@std@@YAPEA_WQEA_WAEB_W@Z ; std::construct_at<wchar_t,wchar_t const &,0>

; 185  :         } else

  00041	eb 0e		 jmp	 SHORT $LN3@assign
$LN2@assign:

; 186  : #endif // _HAS_CXX20
; 187  :         {
; 188  :             _Left = _Right;

  00043	48 8b 45 50	 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  0004b	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0004e	66 89 08	 mov	 WORD PTR [rax], cx
$LN3@assign:

; 189  :         }
; 190  :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?assign@?$_Char_traits@_WG@std@@SAXAEA_WAEB_W@Z ENDP	; std::_Char_traits<wchar_t,unsigned short>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xstring
;	COMDAT ?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z
_TEXT	SEGMENT
_Idx$1 = 0
_First1$ = 96
_First2$ = 104
_Count$ = 112
?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z PROC ; std::_Char_traits<wchar_t,unsigned short>::copy, COMDAT

; 49   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1326DD76_xstring
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 51   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 52   :         __builtin_memcpy(_First1, _First2, _Count * sizeof(_Elem));
; 53   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 54   : #if _HAS_CXX20
; 55   :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 40		 je	 SHORT $LN5@copy

; 56   :             // pre: [_First1, _First1 + _Count) and [_First2, _First2 + _Count) do not overlap
; 57   :             for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {

  00031	48 c7 45 00 00
	00 00 00	 mov	 QWORD PTR _Idx$1[rbp], 0
  00039	eb 0b		 jmp	 SHORT $LN4@copy
$LN2@copy:
  0003b	48 8b 45 00	 mov	 rax, QWORD PTR _Idx$1[rbp]
  0003f	48 ff c0	 inc	 rax
  00042	48 89 45 00	 mov	 QWORD PTR _Idx$1[rbp], rax
$LN4@copy:
  00046	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  0004a	48 39 45 00	 cmp	 QWORD PTR _Idx$1[rbp], rax
  0004e	74 1b		 je	 SHORT $LN3@copy

; 58   :                 _First1[_Idx] = _First2[_Idx];

  00050	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
  00054	48 8b 4d 00	 mov	 rcx, QWORD PTR _Idx$1[rbp]
  00058	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  0005c	4c 8b 45 00	 mov	 r8, QWORD PTR _Idx$1[rbp]
  00060	42 0f b7 14 42	 movzx	 edx, WORD PTR [rdx+r8*2]
  00065	66 89 14 48	 mov	 WORD PTR [rax+rcx*2], dx

; 59   :             }

  00069	eb d0		 jmp	 SHORT $LN2@copy
$LN3@copy:

; 60   : 
; 61   :             return _First1;

  0006b	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
  0006f	eb 1b		 jmp	 SHORT $LN1@copy
$LN5@copy:

; 62   :         }
; 63   : #endif // _HAS_CXX20
; 64   : 
; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00071	48 8b 45 70	 mov	 rax, QWORD PTR _Count$[rbp]
  00075	48 d1 e0	 shl	 rax, 1
  00078	4c 8b c0	 mov	 r8, rax
  0007b	48 8b 55 68	 mov	 rdx, QWORD PTR _First2$[rbp]
  0007f	48 8b 4d 60	 mov	 rcx, QWORD PTR _First1$[rbp]
  00083	e8 00 00 00 00	 call	 memcpy

; 66   : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 67   : 
; 68   :         return _First1;

  00088	48 8b 45 60	 mov	 rax, QWORD PTR _First1$[rbp]
$LN1@copy:

; 69   :     }

  0008c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?copy@?$_Char_traits@_WG@std@@SAPEA_WQEA_WQEB_W_K@Z ENDP ; std::_Char_traits<wchar_t,unsigned short>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>

; 252  :     } else

  00041	eb 2a		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00061	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00064	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     _Container_proxy* _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1453 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1448 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1449 :         _Ptr = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1450 :     }

  00026	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT

; 1362 :     void _Orphan_me_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1363 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1364 :         _Orphan_me_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1365 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$ = 0
this$ = 96
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT

; 1346 :     _CONSTEXPR20 void _Orphan_me_unlocked_v3() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1347 :         if (!_Myproxy) { // already orphaned

  0001e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN10@Orphan_me_

; 1348 :             return;

  00028	e9 ce 00 00 00	 jmp	 $LN1@Orphan_me_
$LN10@Orphan_me_:

; 1349 :         }
; 1350 : 
; 1351 :         // adopted, remove self from list
; 1352 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_me_:

; 1353 :         while (*_Pnext && *_Pnext != this) {

  0003c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00040	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00044	74 1e		 je	 SHORT $LN6@Orphan_me_
  00046	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0004a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00051	74 11		 je	 SHORT $LN6@Orphan_me_

; 1354 :             _Pnext = &(*_Pnext)->_Mynextiter;

  00053	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00057	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 89 45 00	 mov	 QWORD PTR _Pnext$[rbp], rax

; 1355 :         }

  00062	eb d8		 jmp	 SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1356 : 
; 1357 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00064	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00068	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006c	74 02		 je	 SHORT $LN9@Orphan_me_
  0006e	eb 6b		 jmp	 SHORT $LN12@Orphan_me_
$LN9@Orphan_me_:
  00070	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00077	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0007c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00083	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00088	45 33 c9	 xor	 r9d, r9d
  0008b	41 b8 4d 05 00
	00		 mov	 r8d, 1357		; 0000054dH
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00098	b9 02 00 00 00	 mov	 ecx, 2
  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a3	83 f8 01	 cmp	 eax, 1
  000a6	75 03		 jne	 SHORT $LN14@Orphan_me_
  000a8	cc		 int	 3
  000a9	33 c0		 xor	 eax, eax
$LN14@Orphan_me_:
  000ab	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b4	41 b9 4d 05 00
	00		 mov	 r9d, 1357		; 0000054dH
  000ba	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d5	33 c0		 xor	 eax, eax
  000d7	85 c0		 test	 eax, eax
  000d9	75 95		 jne	 SHORT $LN9@Orphan_me_
$LN12@Orphan_me_:
  000db	33 c0		 xor	 eax, eax
  000dd	85 c0		 test	 eax, eax
  000df	75 83		 jne	 SHORT $LN6@Orphan_me_

; 1358 :         *_Pnext  = _Mynextiter;

  000e1	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000e5	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  000e9	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000ed	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1359 :         _Myproxy = nullptr;

  000f0	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  000f4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN1@Orphan_me_:

; 1360 :     }

  000fb	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  000ff	5d		 pop	 rbp
  00100	c3		 ret	 0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT

; 1341 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1342 :         _Lockit _Lock(_LOCK_DEBUG);

  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1343 :         _Adopt_unlocked(_Parent);

  0002f	48 8b 55 68	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00033	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00037	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1344 :     }

  0003c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00046	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$ = 0
this$ = 96
_Parent$ = 104
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT

; 1324 :     _CONSTEXPR20 void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1325 :         if (!_Parent) {

  00020	48 83 7d 68 00	 cmp	 QWORD PTR _Parent$[rbp], 0
  00025	75 0b		 jne	 SHORT $LN2@Adopt_unlo

; 1326 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1327 :             return;

  00030	eb 52		 jmp	 SHORT $LN1@Adopt_unlo
$LN2@Adopt_unlo:

; 1328 :         }
; 1329 : 
; 1330 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00032	48 8b 45 68	 mov	 rax, QWORD PTR _Parent$[rbp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 45 00	 mov	 QWORD PTR _Parent_proxy$[rbp], rax

; 1331 :         if (_Myproxy != _Parent_proxy) { // change parentage

  0003d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00041	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00045	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00048	74 3a		 je	 SHORT $LN1@Adopt_unlo

; 1332 :             if (_Myproxy) { // adopted, remove self from list

  0004a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00052	74 09		 je	 SHORT $LN4@Adopt_unlo

; 1333 :                 _Orphan_me_unlocked_v3();

  00054	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1334 :             }
; 1335 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  0005d	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00065	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00069	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1336 :             _Parent_proxy->_Myfirstiter = this;

  0006d	48 8b 45 00	 mov	 rax, QWORD PTR _Parent_proxy$[rbp]
  00071	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00075	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1337 :             _Myproxy                    = _Parent_proxy;

  00079	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Parent_proxy$[rbp]
  00081	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@Adopt_unlo:

; 1338 :         }
; 1339 :     }

  00084	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_Right$ = 104
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z PROC ; std::_Iterator_base12::_Assign_locked, COMDAT

; 1319 :     void _Assign_locked(const _Iterator_base12& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1320 :         _Lockit _Lock(_LOCK_DEBUG);

  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1321 :         _Assign_unlocked(_Right);

  0002f	48 8b 55 68	 mov	 rdx, QWORD PTR _Right$[rbp]
  00033	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00037	e8 00 00 00 00	 call	 ?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1322 :     }

  0003c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00046	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ENDP ; std::_Iterator_base12::_Assign_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z PROC ; std::_Iterator_base12::_Assign_unlocked, COMDAT

; 1307 :     _CONSTEXPR20 void _Assign_unlocked(const _Iterator_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1308 :         if (_Myproxy == _Right._Myproxy) {

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00028	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002b	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0002e	75 02		 jne	 SHORT $LN2@Assign_unl

; 1309 :             return;

  00030	eb 28		 jmp	 SHORT $LN1@Assign_unl
$LN2@Assign_unl:

; 1310 :         }
; 1311 : 
; 1312 :         if (_Right._Myproxy) {

  00032	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00036	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003a	74 15		 je	 SHORT $LN3@Assign_unl

; 1313 :             _Adopt_unlocked(_Right._Myproxy->_Mycont);

  0003c	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00040	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00043	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00046	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1314 :         } else { // becoming invalid, disown current parent

  0004f	eb 09		 jmp	 SHORT $LN1@Assign_unl
$LN3@Assign_unl:

; 1315 :             _Orphan_me_unlocked_v3();

  00051	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN1@Assign_unl:

; 1316 :         }
; 1317 :     }

  0005a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ENDP ; std::_Iterator_base12::_Assign_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 64
this$ = 96
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 10		 je	 SHORT $LN3@Getcont
  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002f	48 89 45 40	 mov	 QWORD PTR tv68[rbp], rax
  00033	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  00035	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR tv68[rbp], 0
$LN4@Getcont:
  0003d	48 8b 45 40	 mov	 rax, QWORD PTR tv68[rbp]

; 1298 :     }

  00041	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
this$ = 80
_Parent$ = 88
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@Adopt

; 1279 :             _Adopt_unlocked(_Parent);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Adopt_unlocked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1280 :         } else

  00039	eb 0d		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);

  0003b	48 8b 55 58	 mov	 rdx, QWORD PTR _Parent$[rbp]
  0003f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Adopt_locked@_Iterator_base12@std@@AEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
$LN3@Adopt:

; 1284 :         }
; 1285 :     }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Iterator_b

; 1268 :             _Orphan_me_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1269 :         } else

  00030	eb 09		 jmp	 SHORT $LN3@Iterator_b
$LN2@Iterator_b:

; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_me_locked_v3@_Iterator_base12@std@@AEAAXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
$LN3@Iterator_b:

; 1273 :         }
; 1274 :     }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1248 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1249 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1250 : #if _HAS_CXX20
; 1251 :         if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@operator

; 1252 :             _Assign_unlocked(_Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Assign_unlocked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1253 :         } else

  00039	eb 0d		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 1254 : #endif // _HAS_CXX20
; 1255 :         {
; 1256 :             _Assign_locked(_Right);

  0003b	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  0003f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Assign_locked@_Iterator_base12@std@@AEAAXAEBU12@@Z ; std::_Iterator_base12::_Assign_locked
$LN3@operator:

; 1257 :         }
; 1258 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1259 :         _Myproxy = _Right._Myproxy;
; 1260 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1261 :         return *this;

  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1262 :     }

  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1244 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1247 : 
; 1248 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1249 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1250 : #if _HAS_CXX20
; 1251 :         if (_STD is_constant_evaluated()) {
; 1252 :             _Assign_unlocked(_Right);
; 1253 :         } else
; 1254 : #endif // _HAS_CXX20
; 1255 :         {
; 1256 :             _Assign_locked(_Right);
; 1257 :         }
; 1258 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1259 :         _Myproxy = _Right._Myproxy;
; 1260 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1261 :         return *this;
; 1262 :     }
; 1263 : 
; 1264 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {
; 1268 :             _Orphan_me_unlocked_v3();
; 1269 :         } else
; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();
; 1273 :         }
; 1274 :     }
; 1275 : 
; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {
; 1279 :             _Adopt_unlocked(_Parent);
; 1280 :         } else
; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);
; 1284 :         }
; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1288 :         if (_Parent) { // have a parent, do adoption
; 1289 :             _Myproxy = _Parent->_Myproxy;
; 1290 :         } else { // no future parent, just disown current parent
; 1291 :             _Myproxy = nullptr;
; 1292 :         }
; 1293 :     }
; 1294 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1295 : 
; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1298 :     }
; 1299 : 
; 1300 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1301 : 
; 1302 :     mutable _Container_proxy* _Myproxy    = nullptr;

  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1303 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1245 :         *this = _Right;

  00037	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  0003b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0003f	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1246 :     }

  00044	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1243 : 
; 1244 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1245 :         *this = _Right;
; 1246 :     }
; 1247 : 
; 1248 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1249 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1250 : #if _HAS_CXX20
; 1251 :         if (_STD is_constant_evaluated()) {
; 1252 :             _Assign_unlocked(_Right);
; 1253 :         } else
; 1254 : #endif // _HAS_CXX20
; 1255 :         {
; 1256 :             _Assign_locked(_Right);
; 1257 :         }
; 1258 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1259 :         _Myproxy = _Right._Myproxy;
; 1260 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1261 :         return *this;
; 1262 :     }
; 1263 : 
; 1264 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1266 : #if _HAS_CXX20
; 1267 :         if (_STD is_constant_evaluated()) {
; 1268 :             _Orphan_me_unlocked_v3();
; 1269 :         } else
; 1270 : #endif // _HAS_CXX20
; 1271 :         {
; 1272 :             _Orphan_me_locked_v3();
; 1273 :         }
; 1274 :     }
; 1275 : 
; 1276 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1277 : #if _HAS_CXX20
; 1278 :         if (_STD is_constant_evaluated()) {
; 1279 :             _Adopt_unlocked(_Parent);
; 1280 :         } else
; 1281 : #endif // _HAS_CXX20
; 1282 :         {
; 1283 :             _Adopt_locked(_Parent);
; 1284 :         }
; 1285 :     }
; 1286 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1287 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1288 :         if (_Parent) { // have a parent, do adoption
; 1289 :             _Myproxy = _Parent->_Myproxy;
; 1290 :         } else { // no future parent, just disown current parent
; 1291 :             _Myproxy = nullptr;
; 1292 :         }
; 1293 :     }
; 1294 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1295 : 
; 1296 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1297 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1298 :     }
; 1299 : 
; 1300 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1301 : 
; 1302 :     mutable _Container_proxy* _Myproxy    = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1303 :     mutable _Iterator_base12* _Mynextiter = nullptr;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1242 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
_Right$ = 104
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_locked, COMDAT

; 1234 :     void _Swap_proxy_and_iterators_locked(_Container_base12& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1235 :         _Lockit _Lock(_LOCK_DEBUG);

  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1236 :         _Swap_proxy_and_iterators_unlocked(_Right);

  0002f	48 8b 55 68	 mov	 rdx, QWORD PTR _Right$[rbp]
  00033	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00037	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1237 :     }

  0003c	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00046	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_locked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1229 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1230 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1231 :         _Orphan_all_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1232 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z
_TEXT	SEGMENT
_Temp$ = 0
this$ = 96
_Right$ = 104
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked, COMDAT

; 1393 : _CONSTEXPR20 void _Container_base12::_Swap_proxy_and_iterators_unlocked(_Container_base12& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1394 :     _Container_proxy* _Temp = _Myproxy;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Temp$[rbp], rax

; 1395 :     _Myproxy                = _Right._Myproxy;

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _Right$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1396 :     _Right._Myproxy         = _Temp;

  00039	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  0003d	48 8b 4d 00	 mov	 rcx, QWORD PTR _Temp$[rbp]
  00041	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1397 : 
; 1398 :     if (_Myproxy) {

  00044	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00048	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0004c	74 0e		 je	 SHORT $LN2@Swap_proxy

; 1399 :         _Myproxy->_Mycont = this;

  0004e	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1400 :     }
; 1401 : 
; 1402 :     if (_Right._Myproxy) {

  0005c	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  00060	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00064	74 0e		 je	 SHORT $LN3@Swap_proxy

; 1403 :         _Right._Myproxy->_Mycont = &_Right;

  00066	48 8b 45 68	 mov	 rax, QWORD PTR _Right$[rbp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 8b 4d 68	 mov	 rcx, QWORD PTR _Right$[rbp]
  00071	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1404 :     }
; 1405 : }

  00074	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
$T2 = 72
this$ = 96
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1369 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1370 :     if (!_Myproxy) { // no proxy, already done

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	75 02		 jne	 SHORT $LN5@Orphan_all

; 1371 :         return;

  00025	eb 45		 jmp	 SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1372 :     }
; 1373 : 
; 1374 :     // proxy allocated, drain it
; 1375 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

  00027	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR $T2[rbp], 0
  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
  00046	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
  0004a	eb 0c		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
$LN4@Orphan_all:
  00058	48 83 7d 00 00	 cmp	 QWORD PTR _Pnext$1[rbp], 0
  0005d	74 0d		 je	 SHORT $LN1@Orphan_all

; 1376 :         _Pnext->_Myproxy = nullptr;

  0005f	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00063	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1377 :     }

  0006a	eb e0		 jmp	 SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 1378 : }

  0006c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1407 : _CONSTEXPR20 void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1408 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1409 : #if _HAS_CXX20
; 1410 :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0f		 je	 SHORT $LN2@Swap_proxy

; 1411 :         _Swap_proxy_and_iterators_unlocked(_Right);

  0002c	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  00030	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1412 :     } else

  00039	eb 0d		 jmp	 SHORT $LN3@Swap_proxy
$LN2@Swap_proxy:

; 1413 : #endif // _HAS_CXX20
; 1414 :     {
; 1415 :         _Swap_proxy_and_iterators_locked(_Right);

  0003b	48 8b 55 58	 mov	 rdx, QWORD PTR _Right$[rbp]
  0003f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
$LN3@Swap_proxy:

; 1416 :     }
; 1417 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1418 :     _Swap_proxy_and_iterators_unlocked(_Right);
; 1419 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1420 : }

  00048	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1380 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1381 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1382 : #if _HAS_CXX20
; 1383 :     if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Orphan_all

; 1384 :         _Orphan_all_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1385 :     } else

  00030	eb 09		 jmp	 SHORT $LN3@Orphan_all
$LN2@Orphan_all:

; 1386 : #endif // _HAS_CXX20
; 1387 :     {
; 1388 :         _Orphan_all_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN3@Orphan_all:

; 1389 :     }
; 1390 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1391 : }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1199 : 
; 1200 :     _Container_base12(const _Container_base12&)            = delete;
; 1201 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1202 : 
; 1203 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1204 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1205 : 
; 1206 :     template <class _Alloc>
; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1209 :         _Construct_in_place(*_New_proxy, this);
; 1210 :         _Myproxy            = _New_proxy;
; 1211 :         _New_proxy->_Mycont = this;
; 1212 :     }
; 1213 : 
; 1214 :     template <class _Alloc>
; 1215 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1216 :         // pre: no iterators refer to the existing proxy
; 1217 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1218 :         _Construct_in_place(*_New_proxy, this);
; 1219 :         _New_proxy->_Mycont = this;
; 1220 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1221 :     }
; 1222 : 
; 1223 :     _Container_proxy* _Myproxy = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Mycont_$ = 88
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1191 : 
; 1192 :     const _Container_base12* _Mycont       = nullptr;
; 1193 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 0
_Ptr_container$ = 8
_Min_back_shift$ = 16
_Back_shift$ = 24
_Ptr$ = 112
_Bytes$ = 120
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 154  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 156  :     _Bytes += _Non_user_size;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00027	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002a	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002e	48 8b 4d 78	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 157  : 
; 158  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

  00035	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 00	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 159  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00040	b8 08 00 00 00	 mov	 eax, 8
  00045	48 6b c0 ff	 imul	 rax, rax, -1
  00049	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0004d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00051	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 160  : 
; 161  :     // If the following asserts, it likely means that we are performing
; 162  :     // an aligned delete on memory coming from an unaligned allocation.
; 163  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00055	b8 08 00 00 00	 mov	 eax, 8
  0005a	48 6b c0 fe	 imul	 rax, rax, -2
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00062	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0006c	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00070	75 02		 jne	 SHORT $LN14@Adjust_man
  00072	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00074	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0007a	83 c0 09	 add	 eax, 9
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00084	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00090	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00095	45 33 c9	 xor	 r9d, r9d
  00098	44 8b c0	 mov	 r8d, eax
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  000a2	b9 02 00 00 00	 mov	 ecx, 2
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 03		 jne	 SHORT $LN19@Adjust_man
  000b2	cc		 int	 3
  000b3	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b5	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000bb	83 c0 09	 add	 eax, 9
  000be	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000c7	44 8b c8	 mov	 r9d, eax
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000eb	33 c0		 xor	 eax, eax
  000ed	85 c0		 test	 eax, eax
  000ef	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 164  : 
; 165  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 166  :     // in range [_Min_back_shift, _Non_user_size]
; 167  : #ifdef _DEBUG
; 168  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f5	48 c7 45 10 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 169  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 170  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 171  : #endif // _DEBUG
; 172  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00101	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00105	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00108	48 2b c1	 sub	 rax, rcx
  0010b	48 89 45 18	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 173  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010f	48 83 7d 18 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00114	72 09		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7d 18 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0011b	77 02		 ja	 SHORT $LN16@Adjust_man
  0011d	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  0011f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00125	83 c0 13	 add	 eax, 19
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  0012f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00134	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0013b	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00140	45 33 c9	 xor	 r9d, r9d
  00143	44 8b c0	 mov	 r8d, eax
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0014d	b9 02 00 00 00	 mov	 ecx, 2
  00152	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00158	83 f8 01	 cmp	 eax, 1
  0015b	75 03		 jne	 SHORT $LN20@Adjust_man
  0015d	cc		 int	 3
  0015e	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00160	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00166	83 c0 13	 add	 eax, 19
  00169	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00172	44 8b c8	 mov	 r9d, eax
  00175	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00183	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0018a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00190	33 c0		 xor	 eax, eax
  00192	85 c0		 test	 eax, eax
  00194	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  00196	33 c0		 xor	 eax, eax
  00198	85 c0		 test	 eax, eax
  0019a	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 174  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001a0	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  001a4	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001a8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 175  : }

  001ab	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  001af	5d		 pop	 rbp
  001b0	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 85   :         void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 86   :         return ::operator new(_Bytes);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 87   :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 64
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 330  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2DED1E19_exception
  00015	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 331  :     _THROW(bad_array_new_length{});

  0001a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0001e	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0002a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0002e	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 332  : }

  00033	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 140  :         : bad_alloc("bad array new length")

  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00022	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00026	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc

; 141  :     {

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 142  :     }

  00039	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 129  :         : exception(_Message, 1)

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception

; 130  :     {

  00033	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 131  :     }

  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 64
this$ = 96
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00024	74 0e		 je	 SHORT $LN3@what
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002e	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00032	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0003b	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR tv69[rbp]

; 96   :     }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 __std_exception_destroy

; 91   :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 96
_Other$ = 104
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00010	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         : _Data()

  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 8b f8	 mov	 rdi, rax
  0003a	33 c0		 xor	 eax, eax
  0003c	b9 10 00 00 00	 mov	 ecx, 16
  00041	f3 aa		 rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00043	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 8b 4d 68	 mov	 rcx, QWORD PTR _Other$[rbp]
  0004f	48 83 c1 08	 add	 rcx, 8
  00053	48 8b d0	 mov	 rdx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  0005b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 96
_Message$ = 104
__formal$ = 112
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00015	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00021	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00031	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         : _Data()

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 83 c0 08	 add	 rax, 8
  0003c	48 8b f8	 mov	 rdi, rax
  0003f	33 c0		 xor	 eax, eax
  00041	b9 10 00 00 00	 mov	 ecx, 16
  00046	f3 aa		 rep stosb

; 67   :         _Data._What = _Message;

  00048	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 4d 68	 mov	 rcx, QWORD PTR _Message$[rbp]
  00050	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 68   :     }

  00054	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 80
_Where$ = 88
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__84C50014_vcruntime_new@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 169  :         (void)_Size;
; 170  :         return _Where;

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 635  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__595ABB90_limits
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 636  :         return LLONG_MAX;

  00017	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 637  :     }

  00021	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 80
_S2$ = 88
_N$ = 96
wmemcpy	PROC						; COMDAT

; 234  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3FCAD62E_wchar@h
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 235  :         #pragma warning(suppress: 6386) // Buffer overrun
; 236  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00025	48 8b 45 60	 mov	 rax, QWORD PTR _N$[rbp]
  00029	48 d1 e0	 shl	 rax, 1
  0002c	4c 8b c0	 mov	 r8, rax
  0002f	48 8b 55 58	 mov	 rdx, QWORD PTR _S2$[rbp]
  00033	48 8b 4d 50	 mov	 rcx, QWORD PTR _S1$[rbp]
  00037	e8 00 00 00 00	 call	 memcpy

; 237  :     }

  0003c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00040	5d		 pop	 rbp
  00041	c3		 ret	 0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 178  : _EXPORT_STD _NODISCARD constexpr bool is_constant_evaluated() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9A2CA802_xtr1common
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  :     return __builtin_is_constant_evaluated();

  00017	32 c0		 xor	 al, al

; 180  : }

  00019	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
__formal$ = 96
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 80
__formal$ = 88
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\ApplicationCore\private\Windows\WindowsWindow.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 80
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0EFBA633_WindowsWindow@cpp
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001f	5d		 pop	 rbp
  00020	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
