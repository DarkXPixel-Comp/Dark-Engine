; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33030.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?_inst_@FInputCore@@0PEAV1@EA			; FInputCore::_inst_
_BSS	SEGMENT
?_inst_@FInputCore@@0PEAV1@EA DQ 01H DUP (?)		; FInputCore::_inst_
_BSS	ENDS
msvcjmc	SEGMENT
__B51A3A23_Core@h DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__22E515EB_sdkddkver@h DB 01H
__4A250794_concurrencysal@h DB 01H
__64794009_sal@h DB 01H
__A3E7195B_vadefs@h DB 01H
__978626E5_vcruntime@h DB 01H
__73193115_excpt@h DB 01H
__EF35C9F2_stdarg@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__1B0272D9_corecrt@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__1EC467ED_ctype@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__61CC25A1_errno@h DB 01H
__4CB5F942_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__659C5902_limits@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__735B63F8_xkeycheck@h DB 01H
__142C9C9C_yvals_core@h DB 01H
__84C50014_vcruntime_new@h DB 01H
__7A6EC116_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__E5B2708F_crtdefs@h DB 01H
__61229A4B_use_ansi@h DB 01H
__8C2D0B1D_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__3A6DBDA2_cstdlib DB 01H
__9A2CA802_xtr1common DB 01H
__9FA6670F_cstddef DB 01H
__DBEA773D_stdint@h DB 01H
__87335CDF_cstdint DB 01H
__3DF2A533_type_traits DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__35BB339F_eh@h DB 01H
__7280C444_vcruntime_exception@h DB 01H
__2DED1E19_exception DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4CF83D73_cstdio DB 01H
__76FF1542_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D673EB20_cwchar DB 01H
__95B36E16_iosfwd DB 01H
__93AC6E75_vcruntime_typeinfo@h DB 01H
__C7EDFCD9_typeinfo DB 01H
__B9985323_float@h DB 01H
__3FBCF6F4_cfloat DB 01H
__BE829F50_climits DB 01H
__51ADDFC3_intrin0@inl@h DB 01H
__FC9FC984_intrin0@h DB 01H
__595ABB90_limits DB 01H
__A5D71DBC_new DB 01H
__27E192CF_xatomic@h DB 01H
__50E371A7_initializer_list DB 01H
__339AE60A_concepts DB 01H
__C3788713_compare DB 01H
__0D603829_utility DB 01H
__874288EA___msvc_iter_core@hpp DB 01H
__B7320FC0_xutility DB 01H
__A0E057FF_tuple DB 01H
__67F55BEA_xmemory DB 01H
__4F9CF3B8_xatomic_wait@h DB 01H
__0A9237D2_time@h DB 01H
__C070D2B6_ctime DB 01H
__01F6EC81_xtimec@h DB 01H
__006CADF8_xthreads@h DB 01H
__326FE752_atomic DB 01H
__E5F4B71E_memory DB 01H
__4CA7DCC5_Mouse@h DB 01H
__BF4148EC_Keyboard@h DB 01H
__A0A2F5C0_xpolymorphic_allocator@h DB 01H
__C671E263___msvc_sanitizer_annotate_container@hpp DB 01H
__1326DD76_xstring DB 01H
__4333DAD4_cctype DB 01H
__91273182_string DB 01H
__F3EA4CCC___msvc_bit_utils@hpp DB 01H
__14F7CB70_vector DB 01H
__FBEF5BAE_Array@h DB 01H
__9024636E_DarkString@h DB 01H
__98E9BF8D_TUniquePtr@h DB 01H
__FCC6D126_Delegate@h DB 01H
__1B2D56BD_InputCore@h DB 01H
__92B9F28F_CommandLine@h DB 01H
__FABEF7B5_CoreDefines@h DB 01H
__A00CD832_InputCore@cpp DB 01H
msvcjmc	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z ; DirectX::Keyboard::State::IsKeyDown
PUBLIC	??0FInputCore@@QEAA@XZ				; FInputCore::FInputCore
PUBLIC	?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z	; FInputCore::InputProc
PUBLIC	?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z	; FInputCore::SetWindow
PUBLIC	?Update@FInputCore@@QEAAXXZ			; FInputCore::Update
PUBLIC	?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z ; FInputCore::InputCoreProc
PUBLIC	??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputActionState>::TMultiCastDelegate<void,enum eInputActionState>
PUBLIC	??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputActionState>::~TMultiCastDelegate<void,enum eInputActionState>
PUBLIC	?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast
PUBLIC	??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::TMultiCastDelegate<void,enum eInputAxisState,float,float>
PUBLIC	??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::~TMultiCastDelegate<void,enum eInputAxisState,float,float>
PUBLIC	??0?$TMultiCastDelegate@XMM@@QEAA@XZ		; TMultiCastDelegate<void,float,float>::TMultiCastDelegate<void,float,float>
PUBLIC	??1?$TMultiCastDelegate@XMM@@QEAA@XZ		; TMultiCastDelegate<void,float,float>::~TMultiCastDelegate<void,float,float>
PUBLIC	?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z	; TMultiCastDelegate<void,float,float>::BroadCast
PUBLIC	??0?$TMultiCastDelegate@X$$V@@QEAA@XZ		; TMultiCastDelegate<void>::TMultiCastDelegate<void>
PUBLIC	??1?$TMultiCastDelegate@X$$V@@QEAA@XZ		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
PUBLIC	?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ	; TMultiCastDelegate<void>::BroadCast
PUBLIC	??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z ; std::default_delete<DirectX::Keyboard>::operator()
PUBLIC	??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::~unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >
PUBLIC	??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator->
PUBLIC	?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::release
PUBLIC	?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first
PUBLIC	??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z ; std::default_delete<DirectX::Mouse>::operator()
PUBLIC	??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::~unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >
PUBLIC	??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
PUBLIC	?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::release
PUBLIC	?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first
PUBLIC	??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator=<std::default_delete<DirectX::Keyboard>,0>
PUBLIC	??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator=<std::default_delete<DirectX::Mouse>,0>
PUBLIC	??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
PUBLIC	??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
PUBLIC	??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ ; std::make_unique<DirectX::Keyboard,0>
PUBLIC	??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ ; std::make_unique<DirectX::Mouse,0>
PUBLIC	??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ; std::allocator<IIContainer<void> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,float,float> *>::allocator<IIContainer<void,float,float> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z ; std::allocator<IIContainer<void,float,float> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::~vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_end
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::allocator<IIContainer<void,enum eInputAxisState,float,float> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::~vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,enum eInputActionState> *>::allocator<IIContainer<void,enum eInputActionState> *>
PUBLIC	?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z ; std::allocator<IIContainer<void,enum eInputActionState> *>::deallocate
PUBLIC	??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
PUBLIC	??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::~vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
PUBLIC	?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_end
PUBLIC	?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Get_first
PUBLIC	??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::`scalar deleting destructor'
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputActionState> *>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1><>
PUBLIC	??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputAxisState,float,float> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1><>
PUBLIC	??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,float,float> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1><>
PUBLIC	??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputActionState> *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,float,float> *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void> *> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><>
PUBLIC	??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
PUBLIC	??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::Mouse *,DirectX::Mouse * &>
PUBLIC	??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::Mouse *,std::nullptr_t>
PUBLIC	??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::Keyboard *,DirectX::Keyboard * &>
PUBLIC	??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::Keyboard *,std::nullptr_t>
PUBLIC	??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><DirectX::Keyboard * &>
PUBLIC	??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><DirectX::Mouse * &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??0Mouse@DirectX@@QEAA@XZ:PROC			; DirectX::Mouse::Mouse
EXTRN	?GetState@Mouse@DirectX@@QEBA?AUState@12@XZ:PROC ; DirectX::Mouse::GetState
EXTRN	?SetMode@Mouse@DirectX@@QEAAXW4Mode@12@@Z:PROC	; DirectX::Mouse::SetMode
EXTRN	?SetWindow@Mouse@DirectX@@QEAAXPEAUHWND__@@@Z:PROC ; DirectX::Mouse::SetWindow
EXTRN	?ProcessMessage@Mouse@DirectX@@SAXI_K_J@Z:PROC	; DirectX::Mouse::ProcessMessage
EXTRN	??0Keyboard@DirectX@@QEAA@XZ:PROC		; DirectX::Keyboard::Keyboard
EXTRN	?GetState@Keyboard@DirectX@@QEBA?AUState@12@XZ:PROC ; DirectX::Keyboard::GetState
EXTRN	?ProcessMessage@Keyboard@DirectX@@SAXI_K_J@Z:PROC ; DirectX::Keyboard::ProcessMessage
EXTRN	_CxxThrowException:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_constant_evaluated@std@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?is_constant_evaluated@std@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+433
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z DD imagerel $LN6
	DD	imagerel $LN6+131
	DD	imagerel $unwind$?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FInputCore@@QEAA@XZ DD imagerel $LN16
	DD	imagerel $LN16+355
	DD	imagerel $unwind$??0FInputCore@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA+32
	DD	imagerel $unwind$?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA+32
	DD	imagerel $unwind$?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA DD imagerel ?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA
	DD	imagerel ?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA+32
	DD	imagerel $unwind$?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@FInputCore@@QEAAXXZ DD imagerel $LN13
	DD	imagerel $LN13+616
	DD	imagerel $unwind$?Update@FInputCore@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN29
	DD	imagerel $LN29+549
	DD	imagerel $unwind$?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z DD imagerel $LN6
	DD	imagerel $LN6+155
	DD	imagerel $unwind$?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@XMM@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@XMM@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@XMM@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@XMM@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+126
	DD	imagerel $unwind$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ DD imagerel $LN8
	DD	imagerel $LN8+121
	DD	imagerel $unwind$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA DD imagerel ?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ DD imagerel $LN8
	DD	imagerel $LN8+121
	DD	imagerel $unwind$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA DD imagerel ?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA+30
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+196
	DD	imagerel $unwind$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+193
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+98
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+86
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+266
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'P', 00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w'
	DB	00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H, '3', 00H
	DB	'8', 00H, '.', 00H, '3', 00H, '3', 00H, '0', 00H, '3', 00H, '0'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fi'
	DB	'les\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.'
	DB	'33030\include\xmemory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 09aH ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035041201H
	DD	010d3312H
	DD	050060012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z DD 025031801H
	DD	0b2132318H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025031419H
	DD	0b20f2314H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z DD 025031901H
	DD	0b2142319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ DD 025041219H
	DD	010d2312H
	DD	050060012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ DD 025030f19H
	DD	0d20a230fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z DD 035031901H
	DD	0d2143319H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'L'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ
	DD	imagerel $ip2state$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ DD 025031211H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'L'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ
	DD	imagerel $ip2state$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ DD 025031211H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z DD 025031701H
	DD	0f2122317H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ DD 025031201H
	DD	0f20d2312H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@X$$V@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@X$$V@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z DD 025041e01H
	DD	0119231eH
	DD	050120012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@XMM@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@XMM@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z DD 025041601H
	DD	01112316H
	DD	0500a0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z DD 025031e01H
	DD	0d219231eH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@FInputCore@@QEAAXXZ DD 025041201H
	DD	010d2312H
	DD	050060014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z DD 035031d01H
	DD	0d218331dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0FInputCore@@QEAA@XZ DB 01aH
	DB	00H
	DB	00H
	DB	'V'
	DB	02H
	DB	'"'
	DB	04H
	DB	'"'
	DB	06H
	DB	'"'
	DB	08H
	DB	'"'
	DB	0aH
	DB	'"'
	DB	0cH
	DB	'"'
	DB	0eH
	DB	'"'
	DB	010H
	DB	'&'
	DB	012H
	DB	'&'
	DB	014H
	DB	'&'
	DB	016H
	DB	0fcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0FInputCore@@QEAA@XZ DB 016H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0FInputCore@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0FInputCore@@QEAA@XZ
	DD	imagerel $ip2state$??0FInputCore@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FInputCore@@QEAA@XZ DD 025031211H
	DD	0f20d2312H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0FInputCore@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z DD 025031301H
	DD	0d20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD 025031401H
	DD	0d20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035041701H
	DD	01123317H
	DD	0500b0012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025030e01H
	DD	0f209230eH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025031301H
	DD	0b20e2313H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025030f01H
	DD	0d20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025030f01H
	DD	0b20a230fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025041501H
	DD	0c2102315H
	DD	0500b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025041a01H
	DD	0c215231aH
	DD	050107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_constant_evaluated@std@@YA_NXZ DD 025030b01H
	DD	0b206230bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025031401H
	DD	0b20f2314H
	DD	0500bH
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 0
_Ptr_container$ = 8
_Ptr$ = 16
_Bytes$ = 112
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 136  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 137  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 138  :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00022	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00026	48 89 45 00	 mov	 QWORD PTR _Block_size$[rbp], rax

; 139  :     if (_Block_size <= _Bytes) {

  0002a	48 8b 45 70	 mov	 rax, QWORD PTR _Bytes$[rbp]
  0002e	48 39 45 00	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00032	77 05		 ja	 SHORT $LN8@Allocate_m

; 140  :         _Throw_bad_array_new_length(); // add overflow

  00034	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 141  :     }
; 142  : 
; 143  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00039	48 8b 4d 00	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00042	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 144  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00046	48 83 7d 08 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  0004b	74 02		 je	 SHORT $LN9@Allocate_m
  0004d	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN12@Allocate_m
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 90 00 00
	00		 mov	 r9d, 144		; 00000090H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 86		 jne	 SHORT $LN4@Allocate_m

; 145  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000c4	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000c8	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000cc	48 89 45 10	 mov	 QWORD PTR _Ptr$[rbp], rax

; 146  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d0	b8 08 00 00 00	 mov	 eax, 8
  000d5	48 6b c0 ff	 imul	 rax, rax, -1
  000d9	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000dd	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000e1	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 147  : 
; 148  : #ifdef _DEBUG
; 149  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000e5	b8 08 00 00 00	 mov	 eax, 8
  000ea	48 6b c0 fe	 imul	 rax, rax, -2
  000ee	48 8b 4d 10	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000f2	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  000fc	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 150  : #endif // _DEBUG
; 151  :     return _Ptr;

  00100	48 8b 45 10	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 152  : }

  00104	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 705  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 706  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 707  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 708  :         if (_STD is_constant_evaluated()) {

  00025	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  0002a	0f b6 c0	 movzx	 eax, al
  0002d	85 c0		 test	 eax, eax
  0002f	74 13		 je	 SHORT $LN2@deallocate

; 709  :             _Al.deallocate(_Ptr, _Count);

  00031	4c 8b 45 60	 mov	 r8, QWORD PTR _Count$[rbp]
  00035	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0003d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 710  :         } else

  00042	eb 11		 jmp	 SHORT $LN3@deallocate
$LN2@deallocate:

; 711  : #endif // _HAS_CXX20
; 712  :         {
; 713  :             (void) _Al;
; 714  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00044	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00050	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN3@deallocate:

; 715  :         }
; 716  :     }

  00055	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
<_Val2_0>$ = 96
??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><DirectX::Mouse * &>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  0002c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><DirectX::Mouse * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
<_Val2_0>$ = 96
??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><DirectX::Keyboard * &>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 8b 4d 60	 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  0002c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00032	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><DirectX::Keyboard * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z PROC ; std::exchange<DirectX::Keyboard *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z ENDP ; std::exchange<DirectX::Keyboard *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z PROC ; std::exchange<DirectX::Keyboard *,DirectX::Keyboard * &>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z ENDP ; std::exchange<DirectX::Keyboard *,DirectX::Keyboard * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z PROC ; std::exchange<DirectX::Mouse *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z ENDP ; std::exchange<DirectX::Mouse *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z PROC ; std::exchange<DirectX::Mouse *,DirectX::Mouse * &>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z ENDP ; std::exchange<DirectX::Mouse *,DirectX::Mouse * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 230  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 231  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 232  : #if defined(_M_IX86) || defined(_M_X64)
; 233  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 234  :     if (!_STD is_constant_evaluated())

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	75 15		 jne	 SHORT $LN2@Allocate

; 235  : #endif // _HAS_CXX20
; 236  :     {
; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00027	48 81 7d 50 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0002f	72 0b		 jb	 SHORT $LN3@Allocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00031	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00035	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0003a	eb 14		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:
$LN2@Allocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003c	48 83 7d 50 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00041	74 0b		 je	 SHORT $LN4@Allocate

; 244  :         return _Traits::_Allocate(_Bytes);

  00043	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  0004c	eb 02		 jmp	 SHORT $LN1@Allocate
$LN4@Allocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004e	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 248  : }

  00050	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Max_possible$1 = 8
_Count$ = 96
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 64   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 65   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001b	c6 45 00 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 66   : 
; 67   :     if constexpr (_Overflow_is_possible) {
; 68   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0001f	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00029	48 89 45 08	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 69   :         if (_Count > _Max_possible) {

  0002d	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00037	48 39 45 60	 cmp	 QWORD PTR _Count$[rbp], rax
  0003b	76 05		 jbe	 SHORT $LN2@Get_size_o

; 70   :             _Throw_bad_array_new_length(); // multiply overflow

  0003d	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 71   :         }
; 72   :     }
; 73   : 
; 74   :     return _Count * _Ty_size;

  00042	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 75   : }

  00047	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 80
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 35   : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   :     return _Ptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Ptr$[rbp]

; 37   : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1123 : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1124 :     // deallocate a plain pointer using an allocator
; 1125 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1126 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1127 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00033	90		 npad	 1

; 1128 :     } else {
; 1129 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1130 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1131 :     }
; 1132 : }

  00034	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv70 = 72
this$ = 96
_Ptr$ = 104
??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>, COMDAT

; 3223 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv70[rbp], rax
  00028	4c 8d 45 68	 lea	 r8, QWORD PTR _Ptr$[rbp]
  0002c	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00030	48 8b 4d 48	 mov	 rcx, QWORD PTR tv70[rbp]
  00034	e8 00 00 00 00	 call	 ??$?0AEAPEAVMouse@DirectX@@@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVMouse@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><DirectX::Mouse * &>
  00039	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv70 = 72
this$ = 96
_Ptr$ = 104
??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>, COMDAT

; 3223 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 89 45 48	 mov	 QWORD PTR tv70[rbp], rax
  00028	4c 8d 45 68	 lea	 r8, QWORD PTR _Ptr$[rbp]
  0002c	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00030	48 8b 4d 48	 mov	 rcx, QWORD PTR tv70[rbp]
  00034	e8 00 00 00 00	 call	 ??$?0AEAPEAVKeyboard@DirectX@@@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVKeyboard@DirectX@@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><DirectX::Keyboard * &>
  00039	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00023	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00023	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002a	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Location$ = 96
<_Args_0>$ = 104
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>, COMDAT

; 241  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 242  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  00020	48 8b 55 60	 mov	 rdx, QWORD PTR _Location$[rbp]
  00024	b9 10 00 00 00	 mov	 ecx, 16
  00029	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0002e	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00032	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00036	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00039	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 243  : }

  00042	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\type_traits
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 80
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 1589 : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__3DF2A533_type_traits
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :     return __builtin_addressof(_Val);

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR _Val$[rbp]

; 1591 : }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 80
_Bytes$ = 88
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 251  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 252  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 253  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 254  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 0b		 je	 SHORT $LN2@Deallocate

; 255  :         ::operator delete(_Ptr);

  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00030	e8 00 00 00 00	 call	 ??3@YAXPEAX@Z		; operator delete

; 256  :     } else

  00035	eb 25		 jmp	 SHORT $LN3@Deallocate
$LN2@Deallocate:

; 257  : #endif // _HAS_CXX20
; 258  :     {
; 259  : #if defined(_M_IX86) || defined(_M_X64)
; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00037	48 81 7d 58 00
	10 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  0003f	72 0d		 jb	 SHORT $LN4@Deallocate

; 261  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00041	48 8d 55 58	 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00045	48 8d 4d 50	 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN4@Deallocate:

; 262  :         }
; 263  : #endif // defined(_M_IX86) || defined(_M_X64)
; 264  :         ::operator delete(_Ptr, _Bytes);

  0004e	48 8b 55 58	 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00052	48 8b 4d 50	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00056	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0005b	90		 npad	 1
$LN3@Deallocate:

; 265  :     }
; 266  : }

  0005c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void,float,float> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Al$ = 96
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z PROC ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputActionState> *> >, COMDAT

; 1086 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1087 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1088 :     using _Ty = typename _Alloc::value_type;
; 1089 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1090 :         for (; _First != _Last; ++_First) {
; 1091 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1092 :         }
; 1093 :     }
; 1094 : }

  00025	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputActionState> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,float,float> *>::allocator<IIContainer<void,float,float> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,float,float> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,float,float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::allocator<IIContainer<void,enum eInputAxisState,float,float> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputAxisState,float,float> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputAxisState,float,float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1><>, COMDAT

; 1519 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ ; std::allocator<IIContainer<void,enum eInputActionState> *>::allocator<IIContainer<void,enum eInputActionState> *>
  00028	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z
_TEXT	SEGMENT
this$ = 80
__formal$ = 88
??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputActionState> *>, COMDAT

; 966  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputActionState> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 0
$T1 = 72
this$ = 96
_Al$ = 104
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b 4d 68	 mov	 rcx, QWORD PTR _Al$[rbp]
  00029	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00036	48 89 45 00	 mov	 QWORD PTR _New_proxy$[rbp], rax

; 1209 :         _Construct_in_place(*_New_proxy, this);

  0003a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 48	 mov	 QWORD PTR $T1[rbp], rax
  00042	48 8d 55 48	 lea	 rdx, QWORD PTR $T1[rbp]
  00046	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1210 :         _Myproxy            = _New_proxy;

  0004f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 4d 00	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00057	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1211 :         _New_proxy->_Mycont = this;

  0005a	48 8b 45 00	 mov	 rax, QWORD PTR _New_proxy$[rbp]
  0005e	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1212 :     }

  00065	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 80
_Ptr$ = 88
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1135 : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1136 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1137 :     using _Ty = typename _Alloc::value_type;
; 1138 :     _Ptr->~_Ty();
; 1139 :     _Deallocate_plain(_Al, _Ptr);

  00020	48 8b 55 58	 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00024	48 8b 4d 50	 mov	 rcx, QWORD PTR _Al$[rbp]
  00028	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1140 : }

  0002d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00031	5d		 pop	 rbp
  00032	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Count$ = 88
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 976  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 977  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 978  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Count$[rbp]
  00024	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 979  :     }

  00031	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 6b 45 60 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b6	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000bb	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000bf	5d		 pop	 rbp
  000c0	c3		 ret	 0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::~vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputActionState@@@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputActionState> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z ; std::allocator<IIContainer<void,enum eInputActionState> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S6$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::~vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S6$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputActionState> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S6$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::~vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputActionState> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputActionState> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@2@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XW4eInputActionState@@@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputActionState> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z PROC ; std::allocator<IIContainer<void,enum eInputActionState> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputActionState@@@@_K@Z ENDP ; std::allocator<IIContainer<void,enum eInputActionState> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void,enum eInputActionState> *>::allocator<IIContainer<void,enum eInputActionState> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void,enum eInputActionState> *>::allocator<IIContainer<void,enum eInputActionState> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::~vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ PROC ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ENDP ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S7$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::~vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S7$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputAxisState,float,float> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S7$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::~vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,enum eInputAxisState,float,float> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@2@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XW4eInputAxisState@@MM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,enum eInputAxisState,float,float> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z PROC ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAAXQEAPEAV?$IIContainer@XW4eInputAxisState@@MM@@_K@Z ENDP ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::allocator<IIContainer<void,enum eInputAxisState,float,float> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void,enum eInputAxisState,float,float> *>::allocator<IIContainer<void,enum eInputAxisState,float,float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::~vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@YAXPEAPEAV?$IIContainer@XMM@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@XMM@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void,float,float> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z ; std::allocator<IIContainer<void,float,float> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S8$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::~vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S8$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,float,float> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S8$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::~vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@XMM@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@XMM@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void,float,float> *>,std::_Vector_val<std::_Simple_types<IIContainer<void,float,float> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@XMM@@@2@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@XMM@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@XMM@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void,float,float> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z PROC ; std::allocator<IIContainer<void,float,float> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAAXQEAPEAV?$IIContainer@XMM@@_K@Z ENDP ; std::allocator<IIContainer<void,float,float> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void,float,float> *>::allocator<IIContainer<void,float,float> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@XMM@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void,float,float> *>::allocator<IIContainer<void,float,float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >, COMDAT

; 397  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00024	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00028	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00030	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  0003c	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00048	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<IIContainer<void> *> >::_Vector_val<std::_Simple_types<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal, COMDAT

; 2189 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2190 :         return _Mypair._Get_first();

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b c8	 mov	 rcx, rax
  00022	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Get_first

; 2191 :     }

  00027	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002b	5d		 pop	 rbp
  0002c	c3		 ret	 0
?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 0
_My_data$ = 8
_Myfirst$ = 16
_Mylast$ = 24
_Myend$ = 32
this$ = 128
?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy, COMDAT

; 2044 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2045 :         auto& _Al         = _Getal();

  0001e	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00025	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  0002a	48 89 45 00	 mov	 QWORD PTR _Al$[rbp], rax

; 2046 :         auto& _My_data    = _Mypair._Myval2;

  0002e	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 2047 :         pointer& _Myfirst = _My_data._Myfirst;

  00039	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 10	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 2048 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00049	48 83 c0 10	 add	 rax, 16
  0004d	48 89 45 18	 mov	 QWORD PTR _Mylast$[rbp], rax

; 2049 :         pointer& _Myend   = _My_data._Myend;

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00055	48 83 c0 18	 add	 rax, 24
  00059	48 89 45 20	 mov	 QWORD PTR _Myend$[rbp], rax

; 2050 : 
; 2051 :         _My_data._Orphan_all();

  0005d	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 2052 : 
; 2053 :         if (_Myfirst) { // destroy and deallocate old array

  00066	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 60		 je	 SHORT $LN2@Tidy

; 2054 :             _Destroy_range(_Myfirst, _Mylast, _Al);

  00070	4c 8b 45 00	 mov	 r8, QWORD PTR _Al$[rbp]
  00074	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00078	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007b	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0007f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00082	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@YAXPEAPEAV?$IIContainer@X$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$IIContainer@X$$V@@@0@@Z ; std::_Destroy_range<std::allocator<IIContainer<void> *> >

; 2055 :             _ASAN_VECTOR_REMOVE;
; 2056 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  0008b	48 8b 4d 10	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0008f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 2b c1	 sub	 rax, rcx
  00098	48 c1 f8 03	 sar	 rax, 3
  0009c	4c 8b c0	 mov	 r8, rax
  0009f	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000a3	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a6	48 8b 4d 00	 mov	 rcx, QWORD PTR _Al$[rbp]
  000aa	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ; std::allocator<IIContainer<void> *>::deallocate

; 2057 : 
; 2058 :             _Myfirst = nullptr;

  000af	48 8b 45 10	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000b3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2059 :             _Mylast  = nullptr;

  000ba	48 8b 45 18	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000be	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2060 :             _Myend   = nullptr;

  000c5	48 8b 45 20	 mov	 rax, QWORD PTR _Myend$[rbp]
  000c9	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 2061 :         }
; 2062 :     }

  000d0	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end, COMDAT

; 1863 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1864 :         return _Mypair._Myval2._Mylast;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1865 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ
_TEXT	SEGMENT
this$ = 80
?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin, COMDAT

; 1855 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1856 :         return _Mypair._Myval2._Myfirst;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1857 :     }

  00023	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 0
$S9$ = 8
$T1 = 73
this$ = 112
??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >, COMDAT

; 765  :     _CONSTEXPR20 ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 766  :         _Tidy();

  0001e	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAXXZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Tidy

; 767  : #if _ITERATOR_DEBUG_LEVEL != 0
; 768  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00027	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8d 4d 08	 lea	 rcx, QWORD PTR $S9$[rbp]
  00037	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
  0003c	48 8d 45 08	 lea	 rax, QWORD PTR $S9$[rbp]
  00040	48 89 45 00	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 769  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00044	48 c7 45 49 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  0004c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d 55 49	 lea	 rdx, QWORD PTR $T1[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4d 00	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 770  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 771  :     }

  00068	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??1?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::~vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vector
;	COMDAT ??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 65
tv83 = 72
tv69 = 72
this$ = 96
??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ PROC ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >, COMDAT

; 609  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__14F7CB70_vector
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$IIContainer@X$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1>::_Compressed_pair<std::allocator<IIContainer<void> *>,std::_Vector_val<std::_Simple_types<IIContainer<void> *> >,1><>

; 610  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 89 45 48	 mov	 QWORD PTR tv83[rbp], rax
  00038	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$IIContainer@X$$V@@@2@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Getal
  00041	48 8b d0	 mov	 rdx, rax
  00044	48 8d 4d 41	 lea	 rcx, QWORD PTR $T2[rbp]
  00048	e8 00 00 00 00	 call	 ??$?0PEAV?$IIContainer@X$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$IIContainer@X$$V@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><IIContainer<void> *>
  0004d	48 8b d0	 mov	 rdx, rax
  00050	48 8b 4d 48	 mov	 rcx, QWORD PTR tv83[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 611  :     }

  00059	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ENDP ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z
_TEXT	SEGMENT
this$ = 80
_Ptr$ = 88
_Count$ = 96
?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z PROC ; std::allocator<IIContainer<void> *>::deallocate, COMDAT

; 970  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@deallocate:

; 971  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

  00025	48 83 7d 58 00	 cmp	 QWORD PTR _Ptr$[rbp], 0
  0002a	75 07		 jne	 SHORT $LN10@deallocate
  0002c	48 83 7d 60 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00031	75 02		 jne	 SHORT $LN8@deallocate
$LN10@deallocate:
  00033	eb 6b		 jmp	 SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 cb 03 00
	00		 mov	 r8d, 971		; 000003cbH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	83 f8 01	 cmp	 eax, 1
  0006b	75 03		 jne	 SHORT $LN12@deallocate
  0006d	cc		 int	 3
  0006e	33 c0		 xor	 eax, eax
$LN12@deallocate:
  00070	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00079	41 b9 cb 03 00
	00		 mov	 r9d, 971		; 000003cbH
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009a	33 c0		 xor	 eax, eax
  0009c	85 c0		 test	 eax, eax
  0009e	75 95		 jne	 SHORT $LN7@deallocate
$LN9@deallocate:
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 7b ff ff
	ff		 jne	 $LN4@deallocate

; 972  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 973  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000aa	48 8b 45 60	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 c1 e0 03	 shl	 rax, 3
  000b2	48 8b d0	 mov	 rdx, rax
  000b5	48 8b 4d 58	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 974  :     }

  000be	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  000c2	5d		 pop	 rbp
  000c3	c3		 ret	 0
?deallocate@?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAAXQEAPEAV?$IIContainer@X$$V@@_K@Z ENDP ; std::allocator<IIContainer<void> *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ PROC ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>, COMDAT

; 962  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
??0?$allocator@PEAV?$IIContainer@X$$V@@@std@@QEAA@XZ ENDP ; std::allocator<IIContainer<void> *>::allocator<IIContainer<void> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv77 = 88
__$ReturnUdt$ = 112
??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ PROC ; std::make_unique<DirectX::Mouse,0>, COMDAT

; 3464 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	c7 45 50 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3465 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00025	b9 10 00 00 00	 mov	 ecx, 16
  0002a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002f	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00033	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  00038	74 0f		 je	 SHORT $LN3@make_uniqu
  0003a	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  0003e	e8 00 00 00 00	 call	 ??0Mouse@DirectX@@QEAA@XZ ; DirectX::Mouse::Mouse
  00043	48 89 45 58	 mov	 QWORD PTR tv77[rbp], rax
  00047	eb 08		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00049	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv77[rbp], 0
$LN4@make_uniqu:
  00051	48 8b 45 58	 mov	 rax, QWORD PTR tv77[rbp]
  00055	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00059	48 8b 55 40	 mov	 rdx, QWORD PTR $T1[rbp]
  0005d	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00061	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@PEAVMouse@DirectX@@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
  00066	8b 45 50	 mov	 eax, DWORD PTR $T3[rbp]
  00069	83 c8 01	 or	 eax, 1
  0006c	89 45 50	 mov	 DWORD PTR $T3[rbp], eax
  0006f	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3466 : }

  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ ENDP ; std::make_unique<DirectX::Mouse,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv77 = 88
__$ReturnUdt$ = 112
?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA PROC ; `std::make_unique<DirectX::Mouse,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	ba 10 00 00 00	 mov	 edx, 16
  0000f	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ@4HA ENDP ; `std::make_unique<DirectX::Mouse,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv77 = 88
__$ReturnUdt$ = 112
??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ PROC ; std::make_unique<DirectX::Keyboard,0>, COMDAT

; 3464 : _NODISCARD_SMART_PTR_ALLOC _CONSTEXPR23 unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	c7 45 50 00 00
	00 00		 mov	 DWORD PTR $T3[rbp], 0
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00020	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3465 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00025	b9 10 00 00 00	 mov	 ecx, 16
  0002a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0002f	48 89 45 48	 mov	 QWORD PTR $T2[rbp], rax
  00033	48 83 7d 48 00	 cmp	 QWORD PTR $T2[rbp], 0
  00038	74 0f		 je	 SHORT $LN3@make_uniqu
  0003a	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  0003e	e8 00 00 00 00	 call	 ??0Keyboard@DirectX@@QEAA@XZ ; DirectX::Keyboard::Keyboard
  00043	48 89 45 58	 mov	 QWORD PTR tv77[rbp], rax
  00047	eb 08		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00049	48 c7 45 58 00
	00 00 00	 mov	 QWORD PTR tv77[rbp], 0
$LN4@make_uniqu:
  00051	48 8b 45 58	 mov	 rax, QWORD PTR tv77[rbp]
  00055	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00059	48 8b 55 40	 mov	 rdx, QWORD PTR $T1[rbp]
  0005d	48 8b 4d 70	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00061	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@PEAVKeyboard@DirectX@@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
  00066	8b 45 50	 mov	 eax, DWORD PTR $T3[rbp]
  00069	83 c8 01	 or	 eax, 1
  0006c	89 45 50	 mov	 DWORD PTR $T3[rbp], eax
  0006f	48 8b 45 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 3466 : }

  00073	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ ENDP ; std::make_unique<DirectX::Keyboard,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
$T3 = 80
tv77 = 88
__$ReturnUdt$ = 112
?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA PROC ; `std::make_unique<DirectX::Keyboard,0>'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	ba 10 00 00 00	 mov	 edx, 16
  0000f	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00013	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00018	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
?dtor$0@?0???$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ@4HA ENDP ; `std::make_unique<DirectX::Keyboard,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>, COMDAT

; 3210 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t{}) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1><>
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>, COMDAT

; 3210 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t{}) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  00023	0f b6 55 40	 movzx	 edx, BYTE PTR $T1[rbp]
  00027	48 8b 4d 48	 mov	 rcx, QWORD PTR tv69[rbp]
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1><>
  00030	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator=<std::default_delete<DirectX::Mouse>,0>, COMDAT

; 3266 :     _CONSTEXPR23 unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3267 :         reset(_Right.release());

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00024	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::release
  00029	48 8b d0	 mov	 rdx, rax
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::reset

; 3268 :         _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  00035	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first
  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first

; 3269 :         return *this;

  0004d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 3270 :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator=<std::default_delete<DirectX::Mouse>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 80
_Right$ = 88
??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator=<std::default_delete<DirectX::Keyboard>,0>, COMDAT

; 3266 :     _CONSTEXPR23 unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3267 :         reset(_Right.release());

  00020	48 8b 4d 58	 mov	 rcx, QWORD PTR _Right$[rbp]
  00024	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::release
  00029	48 8b d0	 mov	 rdx, rax
  0002c	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00030	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::reset

; 3268 :         _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  00035	48 8b 45 58	 mov	 rax, QWORD PTR _Right$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first
  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first

; 3269 :         return *this;

  0004d	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 3270 :     }

  00051	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator=<std::default_delete<DirectX::Keyboard>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z
_TEXT	SEGMENT
_Old$ = 0
tv76 = 72
this$ = 96
_Ptr$ = 104
?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::reset, COMDAT

; 3312 :     _CONSTEXPR23 void reset(pointer _Ptr = nullptr) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3313 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 55 68	 lea	 rdx, QWORD PTR _Ptr$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$exchange@PEAVMouse@DirectX@@AEAPEAV12@@std@@YAPEAVMouse@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::Mouse *,DirectX::Mouse * &>
  00030	48 89 45 00	 mov	 QWORD PTR _Old$[rbp], rax

; 3314 :         if (_Old) {

  00034	48 83 7d 00 00	 cmp	 QWORD PTR _Old$[rbp], 0
  00039	74 1d		 je	 SHORT $LN2@reset

; 3315 :             _Mypair._Get_first()(_Old);

  0003b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first
  00047	48 89 45 48	 mov	 QWORD PTR tv76[rbp], rax
  0004b	48 8b 55 00	 mov	 rdx, QWORD PTR _Old$[rbp]
  0004f	48 8b 4d 48	 mov	 rcx, QWORD PTR tv76[rbp]
  00053	e8 00 00 00 00	 call	 ??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z ; std::default_delete<DirectX::Mouse>::operator()
$LN2@reset:

; 3316 :         }
; 3317 :     }

  00058	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?reset@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAXPEAVMouse@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ
_TEXT	SEGMENT
$T1 = 64
this$ = 96
?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::release, COMDAT

; 3308 :     _CONSTEXPR23 pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3309 :         return _STD exchange(_Mypair._Myval2, nullptr);

  0001b	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??$exchange@PEAVMouse@DirectX@@$$T@std@@YAPEAVMouse@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::Mouse *,std::nullptr_t>

; 3310 :     }

  00033	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?release@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAPEAVMouse@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->, COMDAT

; 3296 :     _NODISCARD _CONSTEXPR23 pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3297 :         return _Mypair._Myval2;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3298 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 64
tv75 = 72
this$ = 96
??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::~unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >, COMDAT

; 3278 :     _CONSTEXPR23 ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3279 :         if (_Mypair._Myval2) {

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 28		 je	 SHORT $LN2@unique_ptr

; 3280 :             _Mypair._Get_first()(_Mypair._Myval2);

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VMouse@DirectX@@@std@@PEAVMouse@DirectX@@$00@std@@QEAAAEAU?$default_delete@VMouse@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Mouse>,DirectX::Mouse *,1>::_Get_first
  00031	48 89 45 40	 mov	 QWORD PTR tv77[rbp], rax
  00035	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv75[rbp], rax
  00040	48 8b 55 48	 mov	 rdx, QWORD PTR tv75[rbp]
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR tv77[rbp]
  00048	e8 00 00 00 00	 call	 ??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z ; std::default_delete<DirectX::Mouse>::operator()
$LN2@unique_ptr:

; 3281 :         }
; 3282 :     }

  0004d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::~unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv71 = 72
tv72 = 80
this$ = 112
_Ptr$ = 120
??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z PROC ; std::default_delete<DirectX::Mouse>::operator(), COMDAT

; 3168 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3169 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3170 :         delete _Ptr;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00027	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0002b	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  00030	74 20		 je	 SHORT $LN3@operator
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv71[rbp], rax
  00040	ba 01 00 00 00	 mov	 edx, 1
  00045	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00049	ff 55 48	 call	 QWORD PTR tv71[rbp]
  0004c	48 89 45 50	 mov	 QWORD PTR tv72[rbp], rax
  00050	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00052	48 c7 45 50 00
	00 00 00	 mov	 QWORD PTR tv72[rbp], 0
$LN4@operator:

; 3171 :     }

  0005a	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??R?$default_delete@VMouse@DirectX@@@std@@QEBAXPEAVMouse@DirectX@@@Z ENDP ; std::default_delete<DirectX::Mouse>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ
_TEXT	SEGMENT
this$ = 80
?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first, COMDAT

; 1526 :     constexpr _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1527 :         return *this;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]

; 1528 :     }

  0001f	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00023	5d		 pop	 rbp
  00024	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z
_TEXT	SEGMENT
_Old$ = 0
tv76 = 72
this$ = 96
_Ptr$ = 104
?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::reset, COMDAT

; 3312 :     _CONSTEXPR23 void reset(pointer _Ptr = nullptr) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3313 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8d 55 68	 lea	 rdx, QWORD PTR _Ptr$[rbp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$exchange@PEAVKeyboard@DirectX@@AEAPEAV12@@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@0@Z ; std::exchange<DirectX::Keyboard *,DirectX::Keyboard * &>
  00030	48 89 45 00	 mov	 QWORD PTR _Old$[rbp], rax

; 3314 :         if (_Old) {

  00034	48 83 7d 00 00	 cmp	 QWORD PTR _Old$[rbp], 0
  00039	74 1d		 je	 SHORT $LN2@reset

; 3315 :             _Mypair._Get_first()(_Old);

  0003b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first
  00047	48 89 45 48	 mov	 QWORD PTR tv76[rbp], rax
  0004b	48 8b 55 00	 mov	 rdx, QWORD PTR _Old$[rbp]
  0004f	48 8b 4d 48	 mov	 rcx, QWORD PTR tv76[rbp]
  00053	e8 00 00 00 00	 call	 ??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z ; std::default_delete<DirectX::Keyboard>::operator()
$LN2@reset:

; 3316 :         }
; 3317 :     }

  00058	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?reset@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAXPEAVKeyboard@DirectX@@@Z ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ
_TEXT	SEGMENT
$T1 = 64
this$ = 96
?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::release, COMDAT

; 3308 :     _CONSTEXPR23 pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3309 :         return _STD exchange(_Mypair._Myval2, nullptr);

  0001b	48 c7 45 40 00
	00 00 00	 mov	 QWORD PTR $T1[rbp], 0
  00023	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00027	48 8d 55 40	 lea	 rdx, QWORD PTR $T1[rbp]
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??$exchange@PEAVKeyboard@DirectX@@$$T@std@@YAPEAVKeyboard@DirectX@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<DirectX::Keyboard *,std::nullptr_t>

; 3310 :     }

  00033	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?release@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAPEAVKeyboard@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ
_TEXT	SEGMENT
this$ = 80
??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator->, COMDAT

; 3296 :     _NODISCARD _CONSTEXPR23 pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3297 :         return _Mypair._Myval2;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3298 :     }

  00022	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 64
tv75 = 72
this$ = 96
??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::~unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >, COMDAT

; 3278 :     _CONSTEXPR23 ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3279 :         if (_Mypair._Myval2) {

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	74 28		 je	 SHORT $LN2@unique_ptr

; 3280 :             _Mypair._Get_first()(_Mypair._Myval2);

  00025	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VKeyboard@DirectX@@@std@@PEAVKeyboard@DirectX@@$00@std@@QEAAAEAU?$default_delete@VKeyboard@DirectX@@@2@XZ ; std::_Compressed_pair<std::default_delete<DirectX::Keyboard>,DirectX::Keyboard *,1>::_Get_first
  00031	48 89 45 40	 mov	 QWORD PTR tv77[rbp], rax
  00035	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv75[rbp], rax
  00040	48 8b 55 48	 mov	 rdx, QWORD PTR tv75[rbp]
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR tv77[rbp]
  00048	e8 00 00 00 00	 call	 ??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z ; std::default_delete<DirectX::Keyboard>::operator()
$LN2@unique_ptr:

; 3281 :         }
; 3282 :     }

  0004d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::~unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\memory
;	COMDAT ??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 64
tv71 = 72
tv72 = 80
this$ = 112
_Ptr$ = 120
??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z PROC ; std::default_delete<DirectX::Keyboard>::operator(), COMDAT

; 3168 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__E5F4B71E_memory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 3169 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3170 :         delete _Ptr;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00027	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0002b	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  00030	74 20		 je	 SHORT $LN3@operator
  00032	48 8b 45 40	 mov	 rax, QWORD PTR $T1[rbp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 48	 mov	 QWORD PTR tv71[rbp], rax
  00040	ba 01 00 00 00	 mov	 edx, 1
  00045	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00049	ff 55 48	 call	 QWORD PTR tv71[rbp]
  0004c	48 89 45 50	 mov	 QWORD PTR tv72[rbp], rax
  00050	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00052	48 c7 45 50 00
	00 00 00	 mov	 QWORD PTR tv72[rbp], 0
$LN4@operator:

; 3171 :     }

  0005a	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??R?$default_delete@VKeyboard@DirectX@@@std@@QEBAXPEAVKeyboard@DirectX@@@Z ENDP ; std::default_delete<DirectX::Keyboard>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
this$ = 112
?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ PROC	; TMultiCastDelegate<void>::BroadCast, COMDAT

; 165  : 	{

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  : 		for (auto& i : *containers)

  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00025	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00029	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0002d	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_begin
  00032	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  00036	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0003a	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAPEAV?$IIContainer@X$$V@@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::_Unchecked_end
  0003f	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  00043	eb 0c		 jmp	 SHORT $LN4@BroadCast
$LN2@BroadCast:
  00045	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00049	48 83 c0 08	 add	 rax, 8
  0004d	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BroadCast:
  00051	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  00055	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00059	74 1d		 je	 SHORT $LN3@BroadCast
  0005b	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0005f	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 167  : 		{
; 168  : 			i->Call(params...);

  00063	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 8b 4d 18	 mov	 rcx, QWORD PTR i$4[rbp]
  0006e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	ff 10		 call	 QWORD PTR [rax]

; 165  : 	{

  00076	eb cd		 jmp	 SHORT $LN2@BroadCast
$LN3@BroadCast:

; 169  : 		}
; 170  : 
; 171  : 	}

  00078	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ENDP	; TMultiCastDelegate<void>::BroadCast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@X$$V@@QEAA@XZ PROC		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ENDP		; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@X$$V@@QEAA@XZ PROC		; TMultiCastDelegate<void>::TMultiCastDelegate<void>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@X$$V@@V?$allocator@PEAV?$IIContainer@X$$V@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >::vector<IIContainer<void> *,std::allocator<IIContainer<void> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ENDP		; TMultiCastDelegate<void>::TMultiCastDelegate<void>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
tv79 = 96
tv81 = 104
this$ = 128
<params_0>$ = 136
<params_1>$ = 144
?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z PROC	; TMultiCastDelegate<void,float,float>::BroadCast, COMDAT

; 165  : 	{

$LN6:
  00000	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  00006	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  0000c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00011	55		 push	 rbp
  00012	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  : 		for (auto& i : *containers)

  0002a	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00038	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_begin
  00041	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  00045	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00049	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XMM@@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::_Unchecked_end
  0004e	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  00052	eb 0c		 jmp	 SHORT $LN4@BroadCast
$LN2@BroadCast:
  00054	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00058	48 83 c0 08	 add	 rax, 8
  0005c	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BroadCast:
  00060	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  00064	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00068	74 3d		 je	 SHORT $LN3@BroadCast
  0006a	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  0006e	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 167  : 		{
; 168  : 			i->Call(params...);

  00072	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00076	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00079	48 89 45 60	 mov	 QWORD PTR tv79[rbp], rax
  0007d	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00081	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00084	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00087	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008a	48 89 45 68	 mov	 QWORD PTR tv81[rbp], rax
  0008e	f3 0f 10 95 90
	00 00 00	 movss	 xmm2, DWORD PTR <params_1>$[rbp]
  00096	f3 0f 10 8d 88
	00 00 00	 movss	 xmm1, DWORD PTR <params_0>$[rbp]
  0009e	48 8b 4d 60	 mov	 rcx, QWORD PTR tv79[rbp]
  000a2	ff 55 68	 call	 QWORD PTR tv81[rbp]

; 165  : 	{

  000a5	eb ad		 jmp	 SHORT $LN2@BroadCast
$LN3@BroadCast:

; 169  : 		}
; 170  : 
; 171  : 	}

  000a7	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  000ab	5d		 pop	 rbp
  000ac	c3		 ret	 0
?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z ENDP	; TMultiCastDelegate<void,float,float>::BroadCast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@XMM@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@XMM@@QEAA@XZ PROC		; TMultiCastDelegate<void,float,float>::~TMultiCastDelegate<void,float,float>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@XMM@@QEAA@XZ ENDP		; TMultiCastDelegate<void,float,float>::~TMultiCastDelegate<void,float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@XMM@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@XMM@@QEAA@XZ PROC		; TMultiCastDelegate<void,float,float>::TMultiCastDelegate<void,float,float>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@XMM@@V?$allocator@PEAV?$IIContainer@XMM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >::vector<IIContainer<void,float,float> *,std::allocator<IIContainer<void,float,float> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@XMM@@QEAA@XZ ENDP		; TMultiCastDelegate<void,float,float>::TMultiCastDelegate<void,float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ PROC ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::~TMultiCastDelegate<void,enum eInputAxisState,float,float>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ENDP ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::~TMultiCastDelegate<void,enum eInputAxisState,float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ PROC ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::TMultiCastDelegate<void,enum eInputAxisState,float,float>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@XW4eInputAxisState@@MM@@V?$allocator@PEAV?$IIContainer@XW4eInputAxisState@@MM@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >::vector<IIContainer<void,enum eInputAxisState,float,float> *,std::allocator<IIContainer<void,enum eInputAxisState,float,float> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ENDP ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::TMultiCastDelegate<void,enum eInputAxisState,float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z
_TEXT	SEGMENT
<range>$L0$1 = 0
<begin>$L0$2 = 8
<end>$L0$3 = 16
i$4 = 24
tv78 = 96
tv80 = 104
this$ = 128
<params_0>$ = 136
?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z PROC ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast, COMDAT

; 165  : 	{

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  0001d	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 166  : 		for (auto& i : *containers)

  00022	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00029	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002c	48 89 45 00	 mov	 QWORD PTR <range>$L0$1[rbp], rax
  00030	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00034	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_begin
  00039	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
  0003d	48 8b 4d 00	 mov	 rcx, QWORD PTR <range>$L0$1[rbp]
  00041	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAPEAV?$IIContainer@XW4eInputActionState@@@@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::_Unchecked_end
  00046	48 89 45 10	 mov	 QWORD PTR <end>$L0$3[rbp], rax
  0004a	eb 0c		 jmp	 SHORT $LN4@BroadCast
$LN2@BroadCast:
  0004c	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00050	48 83 c0 08	 add	 rax, 8
  00054	48 89 45 08	 mov	 QWORD PTR <begin>$L0$2[rbp], rax
$LN4@BroadCast:
  00058	48 8b 45 10	 mov	 rax, QWORD PTR <end>$L0$3[rbp]
  0005c	48 39 45 08	 cmp	 QWORD PTR <begin>$L0$2[rbp], rax
  00060	74 33		 je	 SHORT $LN3@BroadCast
  00062	48 8b 45 08	 mov	 rax, QWORD PTR <begin>$L0$2[rbp]
  00066	48 89 45 18	 mov	 QWORD PTR i$4[rbp], rax

; 167  : 		{
; 168  : 			i->Call(params...);

  0006a	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 89 45 60	 mov	 QWORD PTR tv78[rbp], rax
  00075	48 8b 45 18	 mov	 rax, QWORD PTR i$4[rbp]
  00079	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00082	48 89 45 68	 mov	 QWORD PTR tv80[rbp], rax
  00086	8b 95 88 00 00
	00		 mov	 edx, DWORD PTR <params_0>$[rbp]
  0008c	48 8b 4d 60	 mov	 rcx, QWORD PTR tv78[rbp]
  00090	ff 55 68	 call	 QWORD PTR tv80[rbp]

; 165  : 	{

  00093	eb b7		 jmp	 SHORT $LN2@BroadCast
$LN3@BroadCast:

; 169  : 		}
; 170  : 
; 171  : 	}

  00095	48 8d 65 70	 lea	 rsp, QWORD PTR [rbp+112]
  00099	5d		 pop	 rbp
  0009a	c3		 ret	 0
?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z ENDP ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv69 = 72
this$ = 96
??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ PROC ; TMultiCastDelegate<void,enum eInputActionState>::~TMultiCastDelegate<void,enum eInputActionState>, COMDAT

; 144  : 	~TMultiCastDelegate() { delete containers; }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00022	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00026	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002b	74 14		 je	 SHORT $LN3@TMultiCast
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00036	e8 00 00 00 00	 call	 ??_G?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAAPEAXI@Z
  0003b	48 89 45 48	 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  00041	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv69[rbp], 0
$LN4@TMultiCast:
  00049	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ENDP ; TMultiCastDelegate<void,enum eInputActionState>::~TMultiCastDelegate<void,enum eInputActionState>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Core\Delegate\Delegate.h
;	COMDAT ??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
tv73 = 72
this$ = 96
??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ PROC ; TMultiCastDelegate<void,enum eInputActionState>::TMultiCastDelegate<void,enum eInputActionState>, COMDAT

; 143  : 	TMultiCastDelegate() { containers = new TArray<IIContainer<InRetValType, ParamTypes...>*>(); }

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FCC6D126_Delegate@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00025	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  00029	48 83 7d 40 00	 cmp	 QWORD PTR $T1[rbp], 0
  0002e	74 0f		 je	 SHORT $LN3@TMultiCast
  00030	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@PEAV?$IIContainer@XW4eInputActionState@@@@V?$allocator@PEAV?$IIContainer@XW4eInputActionState@@@@@std@@@std@@QEAA@XZ ; std::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >::vector<IIContainer<void,enum eInputActionState> *,std::allocator<IIContainer<void,enum eInputActionState> *> >
  00039	48 89 45 48	 mov	 QWORD PTR tv73[rbp], rax
  0003d	eb 08		 jmp	 SHORT $LN4@TMultiCast
$LN3@TMultiCast:
  0003f	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR tv73[rbp], 0
$LN4@TMultiCast:
  00047	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 4d 48	 mov	 rcx, QWORD PTR tv73[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ENDP ; TMultiCastDelegate<void,enum eInputActionState>::TMultiCastDelegate<void,enum eInputActionState>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
;	COMDAT ?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
tv66 = 64
this$ = 96
hWnd$ = 104
msg$ = 112
wParam$ = 120
lParam$ = 128
?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z PROC ; FInputCore::InputCoreProc, COMDAT

; 63   : {

$LN29:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A00CD832_InputCore@cpp
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 64   :     if(hWnd != m_hWnd)

  0002a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00035	48 39 45 68	 cmp	 QWORD PTR hWnd$[rbp], rax
  00039	74 07		 je	 SHORT $LN4@InputCoreP

; 65   :         return 0;

  0003b	33 c0		 xor	 eax, eax
  0003d	e9 10 01 00 00	 jmp	 $LN1@InputCoreP
$LN4@InputCoreP:

; 66   :     switch (msg)

  00042	8b 45 70	 mov	 eax, DWORD PTR msg$[rbp]
  00045	89 45 40	 mov	 DWORD PTR tv66[rbp], eax
  00048	81 7d 40 00 02
	00 00		 cmp	 DWORD PTR tv66[rbp], 512 ; 00000200H
  0004f	77 65		 ja	 SHORT $LN25@InputCoreP
  00051	81 7d 40 00 02
	00 00		 cmp	 DWORD PTR tv66[rbp], 512 ; 00000200H
  00058	0f 84 a1 00 00
	00		 je	 $LN8@InputCoreP
  0005e	81 7d 40 00 01
	00 00		 cmp	 DWORD PTR tv66[rbp], 256 ; 00000100H
  00065	77 27		 ja	 SHORT $LN26@InputCoreP
  00067	81 7d 40 00 01
	00 00		 cmp	 DWORD PTR tv66[rbp], 256 ; 00000100H
  0006e	0f 84 c9 00 00
	00		 je	 $LN21@InputCoreP
  00074	83 7d 40 06	 cmp	 DWORD PTR tv66[rbp], 6
  00078	74 72		 je	 SHORT $LN5@InputCoreP
  0007a	83 7d 40 1c	 cmp	 DWORD PTR tv66[rbp], 28
  0007e	74 6c		 je	 SHORT $LN6@InputCoreP
  00080	81 7d 40 ff 00
	00 00		 cmp	 DWORD PTR tv66[rbp], 255 ; 000000ffH
  00087	74 76		 je	 SHORT $LN7@InputCoreP
  00089	e9 c2 00 00 00	 jmp	 $LN2@InputCoreP
$LN26@InputCoreP:
  0008e	81 7d 40 01 01
	00 00		 cmp	 DWORD PTR tv66[rbp], 257 ; 00000101H
  00095	0f 84 a2 00 00
	00		 je	 $LN22@InputCoreP
  0009b	81 7d 40 04 01
	00 00		 cmp	 DWORD PTR tv66[rbp], 260 ; 00000104H
  000a2	74 70		 je	 SHORT $LN19@InputCoreP
  000a4	81 7d 40 05 01
	00 00		 cmp	 DWORD PTR tv66[rbp], 261 ; 00000105H
  000ab	0f 84 8c 00 00
	00		 je	 $LN23@InputCoreP
  000b1	e9 9a 00 00 00	 jmp	 $LN2@InputCoreP
$LN25@InputCoreP:
  000b6	8b 45 40	 mov	 eax, DWORD PTR tv66[rbp]
  000b9	2d 01 02 00 00	 sub	 eax, 513		; 00000201H
  000be	89 45 40	 mov	 DWORD PTR tv66[rbp], eax
  000c1	81 7d 40 a0 00
	00 00		 cmp	 DWORD PTR tv66[rbp], 160 ; 000000a0H
  000c8	0f 87 82 00 00
	00		 ja	 $LN2@InputCoreP
  000ce	8b 45 40	 mov	 eax, DWORD PTR tv66[rbp]
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  000d8	0f b6 84 01 00
	00 00 00	 movzx	 eax, BYTE PTR $LN27@InputCoreP[rcx+rax]
  000e0	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN28@InputCoreP[rcx+rax*4]
  000e7	48 03 c1	 add	 rax, rcx
  000ea	ff e0		 jmp	 rax
$LN5@InputCoreP:
$LN6@InputCoreP:

; 67   :     {
; 68   :     case WM_ACTIVATE:
; 69   :     case WM_ACTIVATEAPP:
; 70   :         Keyboard::ProcessMessage(msg, wParam, lParam);

  000ec	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR lParam$[rbp]
  000f3	48 8b 55 78	 mov	 rdx, QWORD PTR wParam$[rbp]
  000f7	8b 4d 70	 mov	 ecx, DWORD PTR msg$[rbp]
  000fa	e8 00 00 00 00	 call	 ?ProcessMessage@Keyboard@DirectX@@SAXI_K_J@Z ; DirectX::Keyboard::ProcessMessage
$LN7@InputCoreP:
$LN8@InputCoreP:
$LN9@InputCoreP:
$LN10@InputCoreP:
$LN11@InputCoreP:
$LN12@InputCoreP:
$LN13@InputCoreP:
$LN14@InputCoreP:
$LN15@InputCoreP:
$LN16@InputCoreP:
$LN17@InputCoreP:
$LN18@InputCoreP:

; 71   :     case WM_INPUT:
; 72   :     case WM_MOUSEMOVE:
; 73   :     case WM_LBUTTONDOWN:
; 74   :     case WM_LBUTTONUP:
; 75   :     case WM_RBUTTONDOWN:
; 76   :     case WM_RBUTTONUP:
; 77   :     case WM_MBUTTONDOWN:
; 78   :     case WM_MBUTTONUP:
; 79   :     case WM_MOUSEWHEEL:
; 80   :     case WM_XBUTTONDOWN:
; 81   :     case WM_XBUTTONUP:
; 82   :     case WM_MOUSEHOVER:
; 83   :         Mouse::ProcessMessage(msg, wParam, lParam);

  000ff	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR lParam$[rbp]
  00106	48 8b 55 78	 mov	 rdx, QWORD PTR wParam$[rbp]
  0010a	8b 4d 70	 mov	 ecx, DWORD PTR msg$[rbp]
  0010d	e8 00 00 00 00	 call	 ?ProcessMessage@Mouse@DirectX@@SAXI_K_J@Z ; DirectX::Mouse::ProcessMessage

; 84   :         break;

  00112	eb 3c		 jmp	 SHORT $LN2@InputCoreP
$LN19@InputCoreP:

; 85   :     case WM_SYSKEYDOWN:
; 86   :         if (wParam == VK_RETURN && (lParam & 0x60000000) == 0x20000000)

  00114	48 83 7d 78 0d	 cmp	 QWORD PTR wParam$[rbp], 13
  00119	75 0d		 jne	 SHORT $LN20@InputCoreP
  0011b	48 8b 85 80 00
	00 00		 mov	 rax, QWORD PTR lParam$[rbp]
  00122	48 25 00 00 00
	60		 and	 rax, 1610612736		; 60000000H
$LN20@InputCoreP:

; 87   :         {
; 88   : 
; 89   :         }
; 90   :         Keyboard::ProcessMessage(msg, wParam, lParam);

  00128	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR lParam$[rbp]
  0012f	48 8b 55 78	 mov	 rdx, QWORD PTR wParam$[rbp]
  00133	8b 4d 70	 mov	 ecx, DWORD PTR msg$[rbp]
  00136	e8 00 00 00 00	 call	 ?ProcessMessage@Keyboard@DirectX@@SAXI_K_J@Z ; DirectX::Keyboard::ProcessMessage

; 91   :         break;

  0013b	eb 13		 jmp	 SHORT $LN2@InputCoreP
$LN21@InputCoreP:
$LN22@InputCoreP:
$LN23@InputCoreP:

; 92   : 
; 93   :     case WM_KEYDOWN:
; 94   :     case WM_KEYUP:
; 95   :     case WM_SYSKEYUP:
; 96   :         Keyboard::ProcessMessage(msg, wParam, lParam);

  0013d	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR lParam$[rbp]
  00144	48 8b 55 78	 mov	 rdx, QWORD PTR wParam$[rbp]
  00148	8b 4d 70	 mov	 ecx, DWORD PTR msg$[rbp]
  0014b	e8 00 00 00 00	 call	 ?ProcessMessage@Keyboard@DirectX@@SAXI_K_J@Z ; DirectX::Keyboard::ProcessMessage
$LN2@InputCoreP:

; 97   :         break;
; 98   :     }
; 99   : 
; 100  :     return 0;

  00150	33 c0		 xor	 eax, eax
$LN1@InputCoreP:

; 101  : }

  00152	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00156	5d		 pop	 rbp
  00157	c3		 ret	 0
$LN28@InputCoreP:
  00158	00 00 00 00	 DD	 $LN9@InputCoreP
  0015c	00 00 00 00	 DD	 $LN10@InputCoreP
  00160	00 00 00 00	 DD	 $LN11@InputCoreP
  00164	00 00 00 00	 DD	 $LN12@InputCoreP
  00168	00 00 00 00	 DD	 $LN13@InputCoreP
  0016c	00 00 00 00	 DD	 $LN14@InputCoreP
  00170	00 00 00 00	 DD	 $LN15@InputCoreP
  00174	00 00 00 00	 DD	 $LN16@InputCoreP
  00178	00 00 00 00	 DD	 $LN17@InputCoreP
  0017c	00 00 00 00	 DD	 $LN18@InputCoreP
  00180	00 00 00 00	 DD	 $LN2@InputCoreP
$LN27@InputCoreP:
  00184	00		 DB	 0
  00185	01		 DB	 1
  00186	0a		 DB	 10
  00187	02		 DB	 2
  00188	03		 DB	 3
  00189	0a		 DB	 10
  0018a	04		 DB	 4
  0018b	05		 DB	 5
  0018c	0a		 DB	 10
  0018d	06		 DB	 6
  0018e	07		 DB	 7
  0018f	08		 DB	 8
  00190	0a		 DB	 10
  00191	0a		 DB	 10
  00192	0a		 DB	 10
  00193	0a		 DB	 10
  00194	0a		 DB	 10
  00195	0a		 DB	 10
  00196	0a		 DB	 10
  00197	0a		 DB	 10
  00198	0a		 DB	 10
  00199	0a		 DB	 10
  0019a	0a		 DB	 10
  0019b	0a		 DB	 10
  0019c	0a		 DB	 10
  0019d	0a		 DB	 10
  0019e	0a		 DB	 10
  0019f	0a		 DB	 10
  001a0	0a		 DB	 10
  001a1	0a		 DB	 10
  001a2	0a		 DB	 10
  001a3	0a		 DB	 10
  001a4	0a		 DB	 10
  001a5	0a		 DB	 10
  001a6	0a		 DB	 10
  001a7	0a		 DB	 10
  001a8	0a		 DB	 10
  001a9	0a		 DB	 10
  001aa	0a		 DB	 10
  001ab	0a		 DB	 10
  001ac	0a		 DB	 10
  001ad	0a		 DB	 10
  001ae	0a		 DB	 10
  001af	0a		 DB	 10
  001b0	0a		 DB	 10
  001b1	0a		 DB	 10
  001b2	0a		 DB	 10
  001b3	0a		 DB	 10
  001b4	0a		 DB	 10
  001b5	0a		 DB	 10
  001b6	0a		 DB	 10
  001b7	0a		 DB	 10
  001b8	0a		 DB	 10
  001b9	0a		 DB	 10
  001ba	0a		 DB	 10
  001bb	0a		 DB	 10
  001bc	0a		 DB	 10
  001bd	0a		 DB	 10
  001be	0a		 DB	 10
  001bf	0a		 DB	 10
  001c0	0a		 DB	 10
  001c1	0a		 DB	 10
  001c2	0a		 DB	 10
  001c3	0a		 DB	 10
  001c4	0a		 DB	 10
  001c5	0a		 DB	 10
  001c6	0a		 DB	 10
  001c7	0a		 DB	 10
  001c8	0a		 DB	 10
  001c9	0a		 DB	 10
  001ca	0a		 DB	 10
  001cb	0a		 DB	 10
  001cc	0a		 DB	 10
  001cd	0a		 DB	 10
  001ce	0a		 DB	 10
  001cf	0a		 DB	 10
  001d0	0a		 DB	 10
  001d1	0a		 DB	 10
  001d2	0a		 DB	 10
  001d3	0a		 DB	 10
  001d4	0a		 DB	 10
  001d5	0a		 DB	 10
  001d6	0a		 DB	 10
  001d7	0a		 DB	 10
  001d8	0a		 DB	 10
  001d9	0a		 DB	 10
  001da	0a		 DB	 10
  001db	0a		 DB	 10
  001dc	0a		 DB	 10
  001dd	0a		 DB	 10
  001de	0a		 DB	 10
  001df	0a		 DB	 10
  001e0	0a		 DB	 10
  001e1	0a		 DB	 10
  001e2	0a		 DB	 10
  001e3	0a		 DB	 10
  001e4	0a		 DB	 10
  001e5	0a		 DB	 10
  001e6	0a		 DB	 10
  001e7	0a		 DB	 10
  001e8	0a		 DB	 10
  001e9	0a		 DB	 10
  001ea	0a		 DB	 10
  001eb	0a		 DB	 10
  001ec	0a		 DB	 10
  001ed	0a		 DB	 10
  001ee	0a		 DB	 10
  001ef	0a		 DB	 10
  001f0	0a		 DB	 10
  001f1	0a		 DB	 10
  001f2	0a		 DB	 10
  001f3	0a		 DB	 10
  001f4	0a		 DB	 10
  001f5	0a		 DB	 10
  001f6	0a		 DB	 10
  001f7	0a		 DB	 10
  001f8	0a		 DB	 10
  001f9	0a		 DB	 10
  001fa	0a		 DB	 10
  001fb	0a		 DB	 10
  001fc	0a		 DB	 10
  001fd	0a		 DB	 10
  001fe	0a		 DB	 10
  001ff	0a		 DB	 10
  00200	0a		 DB	 10
  00201	0a		 DB	 10
  00202	0a		 DB	 10
  00203	0a		 DB	 10
  00204	0a		 DB	 10
  00205	0a		 DB	 10
  00206	0a		 DB	 10
  00207	0a		 DB	 10
  00208	0a		 DB	 10
  00209	0a		 DB	 10
  0020a	0a		 DB	 10
  0020b	0a		 DB	 10
  0020c	0a		 DB	 10
  0020d	0a		 DB	 10
  0020e	0a		 DB	 10
  0020f	0a		 DB	 10
  00210	0a		 DB	 10
  00211	0a		 DB	 10
  00212	0a		 DB	 10
  00213	0a		 DB	 10
  00214	0a		 DB	 10
  00215	0a		 DB	 10
  00216	0a		 DB	 10
  00217	0a		 DB	 10
  00218	0a		 DB	 10
  00219	0a		 DB	 10
  0021a	0a		 DB	 10
  0021b	0a		 DB	 10
  0021c	0a		 DB	 10
  0021d	0a		 DB	 10
  0021e	0a		 DB	 10
  0021f	0a		 DB	 10
  00220	0a		 DB	 10
  00221	0a		 DB	 10
  00222	0a		 DB	 10
  00223	0a		 DB	 10
  00224	09		 DB	 9
?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z ENDP ; FInputCore::InputCoreProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
;	COMDAT ?Update@FInputCore@@QEAAXXZ
_TEXT	SEGMENT
KeyBoardState$ = 0
MouseState$ = 32
tv199 = 120
tv188 = 120
tv145 = 120
tv139 = 120
tv95 = 120
tv89 = 120
tv78 = 120
tv71 = 120
this$ = 144
?Update@FInputCore@@QEAAXXZ PROC			; FInputCore::Update, COMDAT

; 26   : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A00CD832_InputCore@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 27   :     auto KeyBoardState = m_keyboard->GetState();

  0001e	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00025	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 ??C?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEBAPEAVKeyboard@DirectX@@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator->
  00033	48 89 45 78	 mov	 QWORD PTR tv71[rbp], rax
  00037	48 8d 55 00	 lea	 rdx, QWORD PTR KeyBoardState$[rbp]
  0003b	48 8b 4d 78	 mov	 rcx, QWORD PTR tv71[rbp]
  0003f	e8 00 00 00 00	 call	 ?GetState@Keyboard@DirectX@@QEBA?AUState@12@XZ ; DirectX::Keyboard::GetState

; 28   :     auto MouseState = m_mouse->GetState();

  00044	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
  00059	48 89 45 78	 mov	 QWORD PTR tv78[rbp], rax
  0005d	48 8d 55 20	 lea	 rdx, QWORD PTR MouseState$[rbp]
  00061	48 8b 4d 78	 mov	 rcx, QWORD PTR tv78[rbp]
  00065	e8 00 00 00 00	 call	 ?GetState@Mouse@DirectX@@QEBA?AUState@12@XZ ; DirectX::Mouse::GetState

; 29   : 
; 30   :     if (KeyBoardState.IsKeyDown(Keyboard::F1))

  0006a	b2 70		 mov	 dl, 112			; 00000070H
  0006c	48 8d 4d 00	 lea	 rcx, QWORD PTR KeyBoardState$[rbp]
  00070	e8 00 00 00 00	 call	 ?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z ; DirectX::Keyboard::State::IsKeyDown
  00075	0f b6 c0	 movzx	 eax, al
  00078	85 c0		 test	 eax, eax
  0007a	74 59		 je	 SHORT $LN2@Update

; 31   :     {
; 32   :         m_mouse->SetMode(Mouse::MODE_RELATIVE);

  0007c	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00083	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
  00091	48 89 45 78	 mov	 QWORD PTR tv89[rbp], rax
  00095	ba 01 00 00 00	 mov	 edx, 1
  0009a	48 8b 4d 78	 mov	 rcx, QWORD PTR tv89[rbp]
  0009e	e8 00 00 00 00	 call	 ?SetMode@Mouse@DirectX@@QEAAXW4Mode@12@@Z ; DirectX::Mouse::SetMode

; 33   :         m_isRelative = true;

  000a3	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000aa	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 34   :         ActionDelegate.BroadCast(eInputActionState::F1);

  000b1	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	48 89 45 78	 mov	 QWORD PTR tv95[rbp], rax
  000bc	33 d2		 xor	 edx, edx
  000be	48 8b 4d 78	 mov	 rcx, QWORD PTR tv95[rbp]
  000c2	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast

; 35   :         MouseState.x = 0;

  000c7	c7 45 28 00 00
	00 00		 mov	 DWORD PTR MouseState$[rbp+8], 0

; 36   :         MouseState.y = 0;

  000ce	c7 45 2c 00 00
	00 00		 mov	 DWORD PTR MouseState$[rbp+12], 0
$LN2@Update:

; 37   :     }
; 38   :     if (KeyBoardState.IsKeyDown(Keyboard::F2))

  000d5	b2 71		 mov	 dl, 113			; 00000071H
  000d7	48 8d 4d 00	 lea	 rcx, QWORD PTR KeyBoardState$[rbp]
  000db	e8 00 00 00 00	 call	 ?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z ; DirectX::Keyboard::State::IsKeyDown
  000e0	0f b6 c0	 movzx	 eax, al
  000e3	85 c0		 test	 eax, eax
  000e5	74 4b		 je	 SHORT $LN3@Update

; 39   :     {
; 40   :         m_mouse->SetMode(Mouse::MODE_ABSOLUTE);

  000e7	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ee	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  000f4	48 8b c8	 mov	 rcx, rax
  000f7	e8 00 00 00 00	 call	 ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
  000fc	48 89 45 78	 mov	 QWORD PTR tv139[rbp], rax
  00100	33 d2		 xor	 edx, edx
  00102	48 8b 4d 78	 mov	 rcx, QWORD PTR tv139[rbp]
  00106	e8 00 00 00 00	 call	 ?SetMode@Mouse@DirectX@@QEAAXW4Mode@12@@Z ; DirectX::Mouse::SetMode

; 41   :         m_isRelative = false;

  0010b	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00112	c6 80 a8 00 00
	00 00		 mov	 BYTE PTR [rax+168], 0

; 42   :         ActionDelegate.BroadCast(eInputActionState::F2);

  00119	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00120	48 89 45 78	 mov	 QWORD PTR tv145[rbp], rax
  00124	ba 01 00 00 00	 mov	 edx, 1
  00129	48 8b 4d 78	 mov	 rcx, QWORD PTR tv145[rbp]
  0012d	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast
$LN3@Update:

; 43   :     }
; 44   :     if (KeyBoardState.Escape)

  00132	0f b6 45 03	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+3]
  00136	c0 e8 03	 shr	 al, 3
  00139	24 01		 and	 al, 1
  0013b	0f b6 c0	 movzx	 eax, al
  0013e	85 c0		 test	 eax, eax
  00140	74 13		 je	 SHORT $LN4@Update

; 45   :     {
; 46   :         EscDelegate.BroadCast();

  00142	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00149	48 83 c0 30	 add	 rax, 48			; 00000030H
  0014d	48 8b c8	 mov	 rcx, rax
  00150	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN4@Update:

; 47   :     }
; 48   :     if (KeyBoardState.W) WDelegate.BroadCast();

  00155	0f b6 45 0a	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+10]
  00159	c0 e8 07	 shr	 al, 7
  0015c	24 01		 and	 al, 1
  0015e	0f b6 c0	 movzx	 eax, al
  00161	85 c0		 test	 eax, eax
  00163	74 13		 je	 SHORT $LN5@Update
  00165	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0016c	48 83 c0 40	 add	 rax, 64			; 00000040H
  00170	48 8b c8	 mov	 rcx, rax
  00173	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN5@Update:

; 49   :     if (KeyBoardState.S) SDelegate.BroadCast();

  00178	0f b6 45 0a	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+10]
  0017c	c0 e8 03	 shr	 al, 3
  0017f	24 01		 and	 al, 1
  00181	0f b6 c0	 movzx	 eax, al
  00184	85 c0		 test	 eax, eax
  00186	74 13		 je	 SHORT $LN6@Update
  00188	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0018f	48 83 c0 50	 add	 rax, 80			; 00000050H
  00193	48 8b c8	 mov	 rcx, rax
  00196	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN6@Update:

; 50   :     if (KeyBoardState.D) DDelegate.BroadCast();

  0019b	0f b6 45 08	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+8]
  0019f	c0 e8 04	 shr	 al, 4
  001a2	24 01		 and	 al, 1
  001a4	0f b6 c0	 movzx	 eax, al
  001a7	85 c0		 test	 eax, eax
  001a9	74 13		 je	 SHORT $LN7@Update
  001ab	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001b2	48 83 c0 70	 add	 rax, 112		; 00000070H
  001b6	48 8b c8	 mov	 rcx, rax
  001b9	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN7@Update:

; 51   :     if (KeyBoardState.A) ADelegate.BroadCast();

  001be	0f b6 45 08	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+8]
  001c2	d0 e8		 shr	 al, 1
  001c4	24 01		 and	 al, 1
  001c6	0f b6 c0	 movzx	 eax, al
  001c9	85 c0		 test	 eax, eax
  001cb	74 13		 je	 SHORT $LN8@Update
  001cd	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001d4	48 83 c0 60	 add	 rax, 96			; 00000060H
  001d8	48 8b c8	 mov	 rcx, rax
  001db	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN8@Update:

; 52   :     if (KeyBoardState.Space) SpaceDelegate.BroadCast();

  001e0	0f b6 45 04	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+4]
  001e4	24 01		 and	 al, 1
  001e6	0f b6 c0	 movzx	 eax, al
  001e9	85 c0		 test	 eax, eax
  001eb	74 15		 je	 SHORT $LN9@Update
  001ed	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001f4	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  001fa	48 8b c8	 mov	 rcx, rax
  001fd	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@X$$V@@QEAAXXZ ; TMultiCastDelegate<void>::BroadCast
$LN9@Update:

; 53   :     if (KeyBoardState.LeftShift) ActionDelegate.BroadCast(LShift);

  00202	0f b6 45 14	 movzx	 eax, BYTE PTR KeyBoardState$[rbp+20]
  00206	24 01		 and	 al, 1
  00208	0f b6 c0	 movzx	 eax, al
  0020b	85 c0		 test	 eax, eax
  0020d	74 19		 je	 SHORT $LN10@Update
  0020f	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00216	48 89 45 78	 mov	 QWORD PTR tv188[rbp], rax
  0021a	ba 02 00 00 00	 mov	 edx, 2
  0021f	48 8b 4d 78	 mov	 rcx, QWORD PTR tv188[rbp]
  00223	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@XW4eInputActionState@@@@QEAAXW4eInputActionState@@@Z ; TMultiCastDelegate<void,enum eInputActionState>::BroadCast
$LN10@Update:

; 54   :     
; 55   :     if(m_isRelative)

  00228	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0022f	0f b6 80 a8 00
	00 00		 movzx	 eax, BYTE PTR [rax+168]
  00236	85 c0		 test	 eax, eax
  00238	74 25		 je	 SHORT $LN11@Update

; 56   :         MouseDelegate.BroadCast(MouseState.x, MouseState.y);

  0023a	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00241	48 83 c0 20	 add	 rax, 32			; 00000020H
  00245	48 89 45 78	 mov	 QWORD PTR tv199[rbp], rax
  00249	f3 0f 2a 45 2c	 cvtsi2ss xmm0, DWORD PTR MouseState$[rbp+12]
  0024e	f3 0f 2a 4d 28	 cvtsi2ss xmm1, DWORD PTR MouseState$[rbp+8]
  00253	0f 28 d0	 movaps	 xmm2, xmm0
  00256	48 8b 4d 78	 mov	 rcx, QWORD PTR tv199[rbp]
  0025a	e8 00 00 00 00	 call	 ?BroadCast@?$TMultiCastDelegate@XMM@@QEAAXMM@Z ; TMultiCastDelegate<void,float,float>::BroadCast
$LN11@Update:

; 57   : 
; 58   : 
; 59   : }

  0025f	48 8d a5 80 00
	00 00		 lea	 rsp, QWORD PTR [rbp+128]
  00266	5d		 pop	 rbp
  00267	c3		 ret	 0
?Update@FInputCore@@QEAAXXZ ENDP			; FInputCore::Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
;	COMDAT ?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z
_TEXT	SEGMENT
tv78 = 64
tv71 = 64
this$ = 96
hWnd$ = 104
?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z PROC		; FInputCore::SetWindow, COMDAT

; 18   : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A00CD832_InputCore@cpp
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 19   : 	m_hWnd = hWnd;

  00020	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 68	 mov	 rcx, QWORD PTR hWnd$[rbp]
  00028	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 20   : 	m_mouse->SetWindow(hWnd);

  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
  00041	48 89 45 40	 mov	 QWORD PTR tv71[rbp], rax
  00045	48 8b 55 68	 mov	 rdx, QWORD PTR hWnd$[rbp]
  00049	48 8b 4d 40	 mov	 rcx, QWORD PTR tv71[rbp]
  0004d	e8 00 00 00 00	 call	 ?SetWindow@Mouse@DirectX@@QEAAXPEAUHWND__@@@Z ; DirectX::Mouse::SetWindow

; 21   :     m_mouse->SetMode(Mouse::MODE_ABSOLUTE);

  00052	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00056	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ??C?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEBAPEAVMouse@DirectX@@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator->
  00064	48 89 45 40	 mov	 QWORD PTR tv78[rbp], rax
  00068	33 d2		 xor	 edx, edx
  0006a	48 8b 4d 40	 mov	 rcx, QWORD PTR tv78[rbp]
  0006e	e8 00 00 00 00	 call	 ?SetMode@Mouse@DirectX@@QEAAXW4Mode@12@@Z ; DirectX::Mouse::SetMode

; 22   : }

  00073	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
?SetWindow@FInputCore@@QEAAXPEAUHWND__@@@Z ENDP		; FInputCore::SetWindow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
;	COMDAT ?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hWnd$ = 80
msg$ = 88
wParam$ = 96
lParam$ = 104
?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z PROC	; FInputCore::InputProc, COMDAT

; 104  : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A00CD832_InputCore@cpp
  00024	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 105  : 	return _inst_->InputCoreProc(hWnd, msg, wParam, lParam);

  00029	48 8b 45 68	 mov	 rax, QWORD PTR lParam$[rbp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00032	4c 8b 4d 60	 mov	 r9, QWORD PTR wParam$[rbp]
  00036	44 8b 45 58	 mov	 r8d, DWORD PTR msg$[rbp]
  0003a	48 8b 55 50	 mov	 rdx, QWORD PTR hWnd$[rbp]
  0003e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_inst_@FInputCore@@0PEAV1@EA ; FInputCore::_inst_
  00045	e8 00 00 00 00	 call	 ?InputCoreProc@FInputCore@@AEAA_JPEAUHWND__@@I_K_J@Z ; FInputCore::InputCoreProc

; 106  : }

  0004a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?InputProc@FInputCore@@SA_JPEAUHWND__@@I_K_J@Z ENDP	; FInputCore::InputProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.h
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp
;	COMDAT ??0FInputCore@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
??0FInputCore@@QEAA@XZ PROC				; FInputCore::FInputCore, COMDAT

; 11   : {

$LN16:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A00CD832_InputCore@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputActionState>::TMultiCastDelegate<void,enum eInputActionState>
  0002a	90		 npad	 1
  0002b	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 83 c0 10	 add	 rax, 16
  00033	48 8b c8	 mov	 rcx, rax
  00036	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::TMultiCastDelegate<void,enum eInputAxisState,float,float>
  0003b	90		 npad	 1
  0003c	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00040	48 83 c0 20	 add	 rax, 32			; 00000020H
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@XMM@@QEAA@XZ ; TMultiCastDelegate<void,float,float>::TMultiCastDelegate<void,float,float>
  0004c	90		 npad	 1
  0004d	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00051	48 83 c0 30	 add	 rax, 48			; 00000030H
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  0005d	90		 npad	 1
  0005e	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00062	48 83 c0 40	 add	 rax, 64			; 00000040H
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  0006e	90		 npad	 1
  0006f	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00073	48 83 c0 50	 add	 rax, 80			; 00000050H
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  0007f	90		 npad	 1
  00080	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00084	48 83 c0 60	 add	 rax, 96			; 00000060H
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  00090	90		 npad	 1
  00091	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00095	48 83 c0 70	 add	 rax, 112		; 00000070H
  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  000a1	90		 npad	 1
  000a2	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000a6	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  000ac	48 8b c8	 mov	 rcx, rax
  000af	e8 00 00 00 00	 call	 ??0?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::TMultiCastDelegate<void>
  000b4	90		 npad	 1
  000b5	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000b9	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> ><std::default_delete<DirectX::Keyboard>,0>
  000c7	90		 npad	 1
  000c8	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000cc	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  000d2	48 8b c8	 mov	 rcx, rax
  000d5	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> ><std::default_delete<DirectX::Mouse>,0>
  000da	90		 npad	 1
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.h

; 64   : 	HWND m_hWnd = NULL;

  000db	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000df	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0

; 65   : 	bool m_isRelative = false;

  000ea	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000ee	c6 80 a8 00 00
	00 00		 mov	 BYTE PTR [rax+168], 0
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\Runtime\Input\InputCore.cpp

; 12   : 	_inst_ = this;

  000f5	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  000f9	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_inst_@FInputCore@@0PEAV1@EA, rax ; FInputCore::_inst_

; 13   : 	m_keyboard = std::make_unique<Keyboard>();

  00100	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  00104	e8 00 00 00 00	 call	 ??$make_unique@VKeyboard@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@0@XZ ; std::make_unique<DirectX::Keyboard,0>
  00109	48 89 45 50	 mov	 QWORD PTR tv191[rbp], rax
  0010d	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  00111	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00117	48 8b 55 50	 mov	 rdx, QWORD PTR tv191[rbp]
  0011b	48 8b c8	 mov	 rcx, rax
  0011e	e8 00 00 00 00	 call	 ??$?4U?$default_delete@VKeyboard@DirectX@@@std@@$0A@@?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::operator=<std::default_delete<DirectX::Keyboard>,0>
  00123	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  00127	e8 00 00 00 00	 call	 ??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::~unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >

; 14   : 	m_mouse = std::make_unique<Mouse>();

  0012c	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00130	e8 00 00 00 00	 call	 ??$make_unique@VMouse@DirectX@@$$V$0A@@std@@YA?AV?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@0@XZ ; std::make_unique<DirectX::Mouse,0>
  00135	48 89 45 50	 mov	 QWORD PTR tv193[rbp], rax
  00139	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0013d	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00143	48 8b 55 50	 mov	 rdx, QWORD PTR tv193[rbp]
  00147	48 8b c8	 mov	 rcx, rax
  0014a	e8 00 00 00 00	 call	 ??$?4U?$default_delete@VMouse@DirectX@@@std@@$0A@@?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::operator=<std::default_delete<DirectX::Mouse>,0>
  0014f	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00153	e8 00 00 00 00	 call	 ??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::~unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >
  00158	90		 npad	 1

; 15   : }

  00159	48 8b 45 70	 mov	 rax, QWORD PTR this$[rbp]
  0015d	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00161	5d		 pop	 rbp
  00162	c3		 ret	 0
??0FInputCore@@QEAA@XZ ENDP				; FInputCore::FInputCore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$0
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@XW4eInputActionState@@@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputActionState>::~TMultiCastDelegate<void,enum eInputActionState>
  00013	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00017	5d		 pop	 rbp
  00018	c3		 ret	 0
?dtor$0@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$1
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 10	 add	 rcx, 16
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@XW4eInputAxisState@@MM@@QEAA@XZ ; TMultiCastDelegate<void,enum eInputAxisState,float,float>::~TMultiCastDelegate<void,enum eInputAxisState,float,float>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$1@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$2
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@XMM@@QEAA@XZ ; TMultiCastDelegate<void,float,float>::~TMultiCastDelegate<void,float,float>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$2@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$3
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$3@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$4
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$4@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$5
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 50	 add	 rcx, 80			; 00000050H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$5@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$6
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 60	 add	 rcx, 96			; 00000060H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$6@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$7
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00012	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5d		 pop	 rbp
  0001c	c3		 ret	 0
?dtor$7@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$8
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 81 c1 80 00
	00 00		 add	 rcx, 128		; 00000080H
  00015	e8 00 00 00 00	 call	 ??1?$TMultiCastDelegate@X$$V@@QEAA@XZ ; TMultiCastDelegate<void>::~TMultiCastDelegate<void>
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$8@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$9
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  00015	e8 00 00 00 00	 call	 ??1?$unique_ptr@VKeyboard@DirectX@@U?$default_delete@VKeyboard@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >::~unique_ptr<DirectX::Keyboard,std::default_delete<DirectX::Keyboard> >
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$9@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 72
tv193 = 80
tv191 = 80
this$ = 112
?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA PROC		; `FInputCore::FInputCore'::`1'::dtor$10
  00000	40 55		 push	 rbp
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  0000a	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0000e	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  00015	e8 00 00 00 00	 call	 ??1?$unique_ptr@VMouse@DirectX@@U?$default_delete@VMouse@DirectX@@@std@@@std@@QEAA@XZ ; std::unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >::~unique_ptr<DirectX::Mouse,std::default_delete<DirectX::Mouse> >
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5d		 pop	 rbp
  0001f	c3		 ret	 0
?dtor$10@?0???0FInputCore@@QEAA@XZ@4HA ENDP		; `FInputCore::FInputCore'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\nahmu\source\repos\Dark Engine\Dark Engine\Source\ThirdParty\DTK12\Keyboard.h
;	COMDAT ?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z
_TEXT	SEGMENT
ptr$1 = 0
bf$2 = 8
tv83 = 76
tv76 = 76
this$ = 96
key$ = 104
?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z PROC ; DirectX::Keyboard::State::IsKeyDown, COMDAT

; 430  :             {

$LN6:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__BF4148EC_Keyboard@h
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 431  :                 if (key <= 0xfe)

  0001f	0f b6 45 68	 movzx	 eax, BYTE PTR key$[rbp]
  00023	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00028	7f 51		 jg	 SHORT $LN2@IsKeyDown

; 432  :                 {
; 433  :                     auto ptr = reinterpret_cast<const uint32_t*>(this);

  0002a	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002e	48 89 45 00	 mov	 QWORD PTR ptr$1[rbp], rax

; 434  :                     const unsigned int bf = 1u << (key & 0x1f);

  00032	0f b6 45 68	 movzx	 eax, BYTE PTR key$[rbp]
  00036	83 e0 1f	 and	 eax, 31
  00039	b9 01 00 00 00	 mov	 ecx, 1
  0003e	89 4d 4c	 mov	 DWORD PTR tv83[rbp], ecx
  00041	0f b6 c8	 movzx	 ecx, al
  00044	8b 45 4c	 mov	 eax, DWORD PTR tv83[rbp]
  00047	d3 e0		 shl	 eax, cl
  00049	89 45 08	 mov	 DWORD PTR bf$2[rbp], eax

; 435  :                     return (ptr[(key >> 5)] & bf) != 0;

  0004c	0f b6 45 68	 movzx	 eax, BYTE PTR key$[rbp]
  00050	c1 f8 05	 sar	 eax, 5
  00053	48 98		 cdqe
  00055	48 8b 4d 00	 mov	 rcx, QWORD PTR ptr$1[rbp]
  00059	8b 55 08	 mov	 edx, DWORD PTR bf$2[rbp]
  0005c	8b 04 81	 mov	 eax, DWORD PTR [rcx+rax*4]
  0005f	23 c2		 and	 eax, edx
  00061	85 c0		 test	 eax, eax
  00063	74 09		 je	 SHORT $LN4@IsKeyDown
  00065	c7 45 4c 01 00
	00 00		 mov	 DWORD PTR tv76[rbp], 1
  0006c	eb 07		 jmp	 SHORT $LN5@IsKeyDown
$LN4@IsKeyDown:
  0006e	c7 45 4c 00 00
	00 00		 mov	 DWORD PTR tv76[rbp], 0
$LN5@IsKeyDown:
  00075	0f b6 45 4c	 movzx	 eax, BYTE PTR tv76[rbp]
  00079	eb 02		 jmp	 SHORT $LN1@IsKeyDown
$LN2@IsKeyDown:

; 436  :                 }
; 437  :                 return false;

  0007b	32 c0		 xor	 al, al
$LN1@IsKeyDown:

; 438  :             }

  0007d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?IsKeyDown@State@Keyboard@DirectX@@QEBA_NW4Keys@23@@Z ENDP ; DirectX::Keyboard::State::IsKeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 64
_Obj$ = 96
<_Args_0>$ = 104
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 248  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B7320FC0_xutility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 249  : #if _HAS_CXX20
; 250  :     if (_STD is_constant_evaluated()) {

  00020	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	74 17		 je	 SHORT $LN2@Construct_

; 251  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);

  0002c	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00030	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00035	48 8b 55 68	 mov	 rdx, QWORD PTR <_Args_0>$[rbp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@$0A@@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,0>

; 252  :     } else

  00041	eb 2a		 jmp	 SHORT $LN3@Construct_
$LN2@Construct_:

; 253  : #endif // _HAS_CXX20
; 254  :     {
; 255  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

  00043	48 8b 4d 60	 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 45 40	 mov	 QWORD PTR $T1[rbp], rax
  0005d	48 8b 45 68	 mov	 rax, QWORD PTR <_Args_0>$[rbp]
  00061	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00064	48 8b 4d 40	 mov	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN3@Construct_:

; 256  :     }
; 257  : }

  0006d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\utility
;	COMDAT ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 96
_New_val$ = 104
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 760  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0D603829_utility
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 761  :     // assign _New_val to _Val, return previous _Val
; 762  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00020	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  00024	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00027	48 89 45 00	 mov	 QWORD PTR _Old_val$[rbp], rax

; 763  :     _Val         = static_cast<_Other&&>(_New_val);

  0002b	48 8b 45 60	 mov	 rax, QWORD PTR _Val$[rbp]
  0002f	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_val$[rbp]
  00033	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 764  :     return _Old_val;

  00039	48 8b 45 00	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 765  : }

  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 0
this$ = 96
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1229 :     void _Orphan_all_locked_v3() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1230 :         _Lockit _Lock(_LOCK_DEBUG);

  0001b	ba 03 00 00 00	 mov	 edx, 3
  00020	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1231 :         _Orphan_all_unlocked_v3();

  0002a	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1232 :     }

  00033	48 8d 4d 00	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0003d	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 0
$T2 = 72
this$ = 96
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1369 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1370 :     if (!_Myproxy) { // no proxy, already done

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00023	75 02		 jne	 SHORT $LN5@Orphan_all

; 1371 :         return;

  00025	eb 45		 jmp	 SHORT $LN1@Orphan_all
$LN5@Orphan_all:

; 1372 :     }
; 1373 : 
; 1374 :     // proxy allocated, drain it
; 1375 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

  00027	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR $T2[rbp], 0
  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	48 8d 55 48	 lea	 rdx, QWORD PTR $T2[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
  00046	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
  0004a	eb 0c		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004c	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 45 00	 mov	 QWORD PTR _Pnext$1[rbp], rax
$LN4@Orphan_all:
  00058	48 83 7d 00 00	 cmp	 QWORD PTR _Pnext$1[rbp], 0
  0005d	74 0d		 je	 SHORT $LN1@Orphan_all

; 1376 :         _Pnext->_Myproxy = nullptr;

  0005f	48 8b 45 00	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00063	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1377 :     }

  0006a	eb e0		 jmp	 SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 1378 : }

  0006c	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1380 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1381 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1382 : #if _HAS_CXX20
; 1383 :     if (_STD is_constant_evaluated()) {

  0001b	e8 00 00 00 00	 call	 ?is_constant_evaluated@std@@YA_NXZ ; std::is_constant_evaluated
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN2@Orphan_all

; 1384 :         _Orphan_all_unlocked_v3();

  00027	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002b	e8 00 00 00 00	 call	 ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1385 :     } else

  00030	eb 09		 jmp	 SHORT $LN3@Orphan_all
$LN2@Orphan_all:

; 1386 : #endif // _HAS_CXX20
; 1387 :     {
; 1388 :         _Orphan_all_locked_v3();

  00032	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00036	e8 00 00 00 00	 call	 ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN3@Orphan_all:

; 1389 :     }
; 1390 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1391 : }

  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1199 : 
; 1200 :     _Container_base12(const _Container_base12&)            = delete;
; 1201 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1202 : 
; 1203 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1204 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1205 : 
; 1206 :     template <class _Alloc>
; 1207 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1208 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1209 :         _Construct_in_place(*_New_proxy, this);
; 1210 :         _Myproxy            = _New_proxy;
; 1211 :         _New_proxy->_Mycont = this;
; 1212 :     }
; 1213 : 
; 1214 :     template <class _Alloc>
; 1215 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1216 :         // pre: no iterators refer to the existing proxy
; 1217 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1218 :         _Construct_in_place(*_New_proxy, this);
; 1219 :         _New_proxy->_Mycont = this;
; 1220 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1221 :     }
; 1222 : 
; 1223 :     _Container_proxy* _Myproxy = nullptr;

  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1198 :     _CONSTEXPR20 _Container_base12() noexcept = default;

  00026	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0002e	5d		 pop	 rbp
  0002f	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 80
_Mycont_$ = 88
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00020	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00024	48 8b 4d 58	 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  00028	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1191 : 
; 1192 :     const _Container_base12* _Mycont       = nullptr;
; 1193 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1190 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

  00037	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003b	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 0
_Ptr_container$ = 8
_Min_back_shift$ = 16
_Back_shift$ = 24
_Ptr$ = 112
_Bytes$ = 120
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 154  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  0001e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 156  :     _Bytes += _Non_user_size;

  00023	48 8b 45 78	 mov	 rax, QWORD PTR _Bytes$[rbp]
  00027	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002a	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002e	48 8b 4d 78	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 157  : 
; 158  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

  00035	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 45 00	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 159  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00040	b8 08 00 00 00	 mov	 eax, 8
  00045	48 6b c0 ff	 imul	 rax, rax, -1
  00049	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0004d	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00051	48 89 45 08	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 160  : 
; 161  :     // If the following asserts, it likely means that we are performing
; 162  :     // an aligned delete on memory coming from an unaligned allocation.
; 163  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00055	b8 08 00 00 00	 mov	 eax, 8
  0005a	48 6b c0 fe	 imul	 rax, rax, -2
  0005e	48 8b 4d 00	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00062	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0006c	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00070	75 02		 jne	 SHORT $LN14@Adjust_man
  00072	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00074	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0007a	83 c0 09	 add	 eax, 9
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00084	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00090	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00095	45 33 c9	 xor	 r9d, r9d
  00098	44 8b c0	 mov	 r8d, eax
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  000a2	b9 02 00 00 00	 mov	 ecx, 2
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 03		 jne	 SHORT $LN19@Adjust_man
  000b2	cc		 int	 3
  000b3	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b5	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000bb	83 c0 09	 add	 eax, 9
  000be	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000c7	44 8b c8	 mov	 r9d, eax
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  000d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000eb	33 c0		 xor	 eax, eax
  000ed	85 c0		 test	 eax, eax
  000ef	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 164  : 
; 165  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 166  :     // in range [_Min_back_shift, _Non_user_size]
; 167  : #ifdef _DEBUG
; 168  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f5	48 c7 45 10 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 169  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 170  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 171  : #endif // _DEBUG
; 172  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  00101	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00105	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00108	48 2b c1	 sub	 rax, rcx
  0010b	48 89 45 18	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 173  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010f	48 83 7d 18 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00114	72 09		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7d 18 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0011b	77 02		 ja	 SHORT $LN16@Adjust_man
  0011d	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  0011f	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00125	83 c0 13	 add	 eax, 19
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  0012f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00134	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0013b	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00140	45 33 c9	 xor	 r9d, r9d
  00143	44 8b c0	 mov	 r8d, eax
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GA@FLDGEGM@C?3?2Program?5Files?2Microsoft?5Visu@
  0014d	b9 02 00 00 00	 mov	 ecx, 2
  00152	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00158	83 f8 01	 cmp	 eax, 1
  0015b	75 03		 jne	 SHORT $LN20@Adjust_man
  0015d	cc		 int	 3
  0015e	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00160	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00166	83 c0 13	 add	 eax, 19
  00169	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00172	44 8b c8	 mov	 r9d, eax
  00175	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MA@IKJDCOIC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
  00183	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0018a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00190	33 c0		 xor	 eax, eax
  00192	85 c0		 test	 eax, eax
  00194	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  00196	33 c0		 xor	 eax, eax
  00198	85 c0		 test	 eax, eax
  0019a	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 174  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001a0	48 8b 45 70	 mov	 rax, QWORD PTR _Ptr$[rbp]
  001a4	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001a8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 175  : }

  001ab	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  001af	5d		 pop	 rbp
  001b0	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 80
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 85   :         void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__67F55BEA_xmemory
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 86   :         return ::operator new(_Bytes);

  0001b	48 8b 4d 50	 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 87   :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 64
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 330  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00009	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2DED1E19_exception
  00015	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 331  :     _THROW(bad_array_new_length{});

  0001a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0001e	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0002a	48 8d 4d 40	 lea	 rcx, QWORD PTR $T1[rbp]
  0002e	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 332  : }

  00033	48 8d 65 60	 lea	 rsp, QWORD PTR [rbp+96]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 80
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 140  :         : bad_alloc("bad array new length")

  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00022	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00026	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc

; 141  :     {

  0002b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00036	48 89 08	 mov	 QWORD PTR [rax], rcx

; 142  :     }

  00039	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 80
__that$ = 88
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b 55 58	 mov	 rdx, QWORD PTR __that$[rbp]
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0001c	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00021	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002f	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00013	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00018	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001c	5d		 pop	 rbp
  0001d	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 80
_Message$ = 88
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 129  :         : exception(_Message, 1)

  00020	41 b8 01 00 00
	00		 mov	 r8d, 1
  00026	48 8b 55 58	 mov	 rdx, QWORD PTR _Message$[rbp]
  0002a	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002e	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception

; 130  :     {

  00033	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 131  :     }

  00041	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 80
__flags$ = 88
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	8b 45 58	 mov	 eax, DWORD PTR __flags$[rbp]
  0001f	83 e0 01	 and	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	74 0e		 je	 SHORT $LN2@scalar
  00026	ba 18 00 00 00	 mov	 edx, 24
  0002b	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  0002f	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00034	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003c	5d		 pop	 rbp
  0003d	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 64
this$ = 96
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  0001b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00024	74 0e		 je	 SHORT $LN3@what
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002e	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
  00032	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0003b	48 89 45 40	 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  0003f	48 8b 45 40	 mov	 rax, QWORD PTR tv69[rbp]

; 96   :     }

  00043	48 8d 65 50	 lea	 rsp, QWORD PTR [rbp+80]
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 80
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00016	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001b	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00026	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

  00029	48 8b 45 50	 mov	 rax, QWORD PTR this$[rbp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 __std_exception_destroy

; 91   :     }

  00039	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 96
_Other$ = 104
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00010	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         : _Data()

  0002f	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00033	48 83 c0 08	 add	 rax, 8
  00037	48 8b f8	 mov	 rdi, rax
  0003a	33 c0		 xor	 eax, eax
  0003c	b9 10 00 00 00	 mov	 ecx, 16
  00041	f3 aa		 rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00043	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00047	48 83 c0 08	 add	 rax, 8
  0004b	48 8b 4d 68	 mov	 rcx, QWORD PTR _Other$[rbp]
  0004f	48 83 c1 08	 add	 rcx, 8
  00053	48 8b d0	 mov	 rdx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  0005b	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 96
_Message$ = 104
__formal$ = 112
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00015	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7280C444_vcruntime_exception@h
  00021	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00026	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00031	48 89 08	 mov	 QWORD PTR [rax], rcx

; 65   :         : _Data()

  00034	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00038	48 83 c0 08	 add	 rax, 8
  0003c	48 8b f8	 mov	 rdi, rax
  0003f	33 c0		 xor	 eax, eax
  00041	b9 10 00 00 00	 mov	 ecx, 16
  00046	f3 aa		 rep stosb

; 67   :         _Data._What = _Message;

  00048	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 4d 68	 mov	 rcx, QWORD PTR _Message$[rbp]
  00050	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 68   :     }

  00054	48 8b 45 60	 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d 65 48	 lea	 rsp, QWORD PTR [rbp+72]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 178  : _EXPORT_STD _NODISCARD constexpr bool is_constant_evaluated() noexcept {

$LN3:
  00000	40 55		 push	 rbp
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__9A2CA802_xtr1common
  00012	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 179  :     return __builtin_is_constant_evaluated();

  00017	32 c0		 xor	 al, al

; 180  : }

  00019	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.38.33030\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 80
_Where$ = 88
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__84C50014_vcruntime_new@h
  0001b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 169  :         (void)_Size;
; 170  :         return _Where;

  00020	48 8b 45 58	 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00024	48 8d 65 40	 lea	 rsp, QWORD PTR [rbp+64]
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
