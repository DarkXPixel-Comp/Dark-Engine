name: Build Windows

on:
  push:
    branches: [ New-Life ]
  pull_request:
    branches: [ New-Life ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install 7zip
        run: choco install 7zip -y

      - name: Set tag name from date
        id: tag_date
        run: echo "TAG_NAME=Release-$(Get-Date -Format 'yyyy-MM-dd-HHmm')" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Setup Ninja manually
        run: |
          curl -L -o ninja.zip https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip
          7z x ninja.zip -o"${{ github.workspace }}/ninja"
          echo "${{ github.workspace }}/ninja" >> $GITHUB_PATH

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure with CMakePresets
        run: cmake --preset Win64-Development

      - name: Build with CMakePresets
        run: cmake --build --preset Win64-Development

      - name: Clean Release folder
        run: |
          if (Test-Path Release) { Remove-Item -Recurse -Force Release }
          mkdir Release

      - name: Copy release structure
        run: |
          xcopy "Dark Engine\\Binaires" "Release\\Dark Engine\\Binaires" /E /I /Y
          xcopy "Dark Engine\\Content"  "Release\\Dark Engine\\Content"  /E /I /Y
          xcopy "Dark Engine\\Shaders"  "Release\\Dark Engine\\Shaders"  /E /I /Y
          xcopy "Dark Engine\\Config"   "Release\\Dark Engine\\Config"   /E /I /Y
          xcopy "Dark Engine\\Source\\Templates"   "Release\\Dark Engine\\Source\\Templates"   /E /I /Y

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: DarkFramework-Windows-Build
          path: Release


      - name: Archive release
        run: Compress-Archive -Path Release\* -DestinationPath dark_framework_build.zip

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: Automated build from branch ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ./dark_framework_build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
